import { NylasAuthType, Thread, ThreadQueryParameters } from '@nylas/core';
import { NylasAuthStoreType, NylasMailboxStoreType } from '../../../components';
import { RouterInterface } from "../../../routers/router-interface";
export declare class NylasThreadsConnector {
    private nylasAuth;
    private nylasAuthStore;
    private nylasMailboxStore;
    private router;
    constructor(nylasAuth: NylasAuthType, nylasAuthStore: NylasAuthStoreType, nylasMailboxStore: NylasMailboxStoreType, router: RouterInterface);
    getThreads(overrideQueryParams?: Partial<ThreadQueryParameters>, updateMethod?: 'prepend' | 'append' | 'overwrite', updateState?: boolean): Promise<Thread[]>;
    getThread(threadId: string): Promise<Thread>;
    nextThreadPage(updateMethod?: 'prepend' | 'append' | 'overwrite', updateLoadingState?: boolean): Promise<Thread[]>;
    previousThreadPage(aupdateMethod?: 'prepend' | 'append' | 'overwrite', updateLoadingState?: boolean): Promise<Thread[]>;
    updateThreadQueryParams(params: Partial<ThreadQueryParameters>): void;
    back(): void;
    unSelectThread(): void;
    selectThread(thread: Thread): Promise<void>;
    markThreadAsRead(thread: Thread): Promise<Thread>;
    updateThread(thread: Thread, updateThread: Partial<Thread>): Promise<Thread>;
}
