import { NylasApiRequest } from "../../common/nylas-api-request";
import { NylasSchedulerConfigStoreType } from "../../stores/scheduler-config-store";
import { NylasSchedulerConfigAPIConnector } from '../shared/api/scheduler-config';
type NylasSchedulerConfigConnectorOptions = {
    nylasSchedulerConfigStore: NylasSchedulerConfigStoreType;
    nylasApiRequest?: NylasApiRequest;
};
export declare class NylasSchedulerConfigConnector {
    nylasApiRequest?: NylasApiRequest;
    nylasSchedulerConfigStore: NylasSchedulerConfigStoreType;
    private _schedulerConfigConnector;
    constructor({ nylasApiRequest, nylasSchedulerConfigStore }: NylasSchedulerConfigConnectorOptions);
    init(): void;
    get schedulerConfigStore(): import("@/stores/scheduler-config-store").CreateNylasSchedulerConfigStoreReturnType;
    get schedulerConfig(): NylasSchedulerConfigAPIConnector;
    resetStores(): void;
    logout(): Promise<void>;
}
export type PublicMethods<T> = {
    [K in keyof T]: T[K] extends Function ? (string extends K ? never : K) : never;
}[keyof T];
export type NylasSchedulerConfigConnectorPublicMethods = PublicMethods<NylasSchedulerConfigConnector>;
export {};
