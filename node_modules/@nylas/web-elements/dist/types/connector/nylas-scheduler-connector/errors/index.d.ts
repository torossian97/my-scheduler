export declare enum ErrorCategory {
    Component = "component",
    Api = "api",
    Auth = "auth"
}
export interface ErrorDetails {
    title: string;
    message: string;
    category: ErrorCategory;
}
export declare enum ComponentErrorType {
    endtime_not_in_future = "endtime_not_in_future",
    no_booking_info = "no_booking_info",
    no_timeslot_selected = "no_timeslot_selected",
    no_timezone_selected = "no_timezone_selected",
    no_booking_id = "no_booking_id",
    invalid_start_time = "invalid_start_time",
    invalid_end_time = "invalid_end_time",
    invalid_timezone = "invalid_timezone"
}
export declare enum APIErrorType {
    invalid_session = "invalid_session",
    general_error = "general_error",
    internal_error = "internal_error",
    invalid_request_error = "invalid_request_error",
    timeslot_not_available = "timeslot_not_available"
}
export declare class Errors {
    component: (_title: string) => Record<ComponentErrorType, (message?: string) => ErrorDetails>;
    api: (_title: string) => Record<APIErrorType, (message: string) => ErrorDetails>;
}
