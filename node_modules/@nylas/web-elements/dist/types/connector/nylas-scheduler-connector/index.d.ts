import { NylasSchedulerStoreType } from "../../stores/scheduler-store";
import { NylasSchedulerConnectorInterface } from '../connector-interface';
import { NylaSchedulerAPIConnector } from '../shared/api/scheduler';
type NylasSchedulerConnectorOptions = {
    schedulerAPIURL: string;
    nylasSchedulerStore: NylasSchedulerStoreType;
    sessionId?: string;
    configId?: string;
};
export declare class NylasSchedulerConnector implements NylasSchedulerConnectorInterface {
    schedulerAPIURL: string;
    nylasSchedulerStore: NylasSchedulerStoreType;
    sessionId: string | undefined;
    configId: string | undefined;
    private _schedulerAPIConnector;
    constructor({ schedulerAPIURL, nylasSchedulerStore, sessionId, configId }: NylasSchedulerConnectorOptions);
    init(): void;
    get schedulerStore(): import("@stencil/store").ObservableMap<import("@/stores/scheduler-store").NylasSchedulerStoreState>;
    get scheduler(): NylaSchedulerAPIConnector;
    resetStores(): void;
}
export type PublicMethods<T> = {
    [K in keyof T]: T[K] extends Function ? (string extends K ? never : K) : never;
}[keyof T];
export type NylasSchedulerConnectorPublicMethods = PublicMethods<NylasSchedulerConnector>;
export {};
