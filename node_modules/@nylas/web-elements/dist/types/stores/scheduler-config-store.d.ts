import { Calendar, Configuration } from '@nylas/core';
import { ObservableMap } from '@stencil/store';
import { User } from "../common/nylas-api-request";
type RecursivePartial<T> = {
    [P in keyof T]?: T[P] extends (infer U)[] ? RecursivePartial<U>[] : T[P] extends object | undefined ? RecursivePartial<T[P]> : T[P];
};
export interface NylasSchedulerConfigStoreState {
    selectedConfiguration: RecursivePartial<Configuration>;
    configurations: Configuration[];
    calendars: Calendar[];
    currentUser: User | null;
    action: 'create' | 'edit' | null;
}
export type NylasSchedulerConfigStoreType = ReturnType<typeof CreateNylasSchedulerConfigStore>;
export type CreateNylasSchedulerConfigStoreReturnType = ObservableMap<NylasSchedulerConfigStoreState> & {
    resetSelectedConfiguration: () => void;
};
export declare function CreateNylasSchedulerConfigStore(defaultState?: Partial<NylasSchedulerConfigStoreState>): CreateNylasSchedulerConfigStoreReturnType;
export {};
