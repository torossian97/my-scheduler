import { MethodKeys } from "../../../common/types";
import { NylasMailboxConnectorInterface } from "../../../connector/connector-interface";
import { ObservableMap } from '@stencil/store';
export type Stores = Record<string, ObservableMap<any>>;
export type PublicMethodsOfNylasMailboxConnector = Pick<NylasMailboxConnectorInterface, MethodKeys<NylasMailboxConnectorInterface>>;
export type PropertyPaths<T> = T extends object ? {
    [K in keyof T]: T[K] extends Function ? `${K & string}` : `${K & string}.${PropertyPaths<T[K]>}`;
}[keyof T] : '';
export type MethodsOfNylasMailboxConnector = PropertyPaths<NylasMailboxConnectorInterface>;
export declare class NylasMailboxToolbarButton {
    private host;
    readonly method: MethodsOfNylasMailboxConnector;
    readonly dataState?: string;
    readonly iconOnly: boolean;
    readonly mailboxConnector?: NylasMailboxConnectorInterface;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): Promise<void>;
    componentDidLoad(): Promise<void>;
    private onClick;
    private callMethod;
    private renderByState;
    private hasSlot;
    render(): any;
}
