import { Event, EventEmitter } from '../../../stencil-public-runtime';
import type { NylasEvent, NylasSchedulerBookingData } from '../../..';
import { Notification } from '@nylas/core';
export declare class NylasBookingForm {
    readonly host: HTMLElement;
    readonly isLoading?: boolean;
    readonly bookingInfo?: NylasSchedulerBookingData;
    readonly eventInfo?: NylasEvent;
    nameChanged: EventEmitter<string>;
    emailChanged: EventEmitter<string>;
    backButtonClicked: EventEmitter<boolean>;
    detailsConfirmed: EventEmitter<NylasSchedulerBookingData>;
    bookingFormError: EventEmitter<Partial<Notification>>;
    name: string;
    email: string;
    guestEmails: string[];
    guestEmailErrors: {
        [key: number]: string;
    };
    isNameValid: boolean;
    isEmailValid: boolean;
    validationError: {
        name: string;
        email: string;
    };
    connectedCallback(): void;
    disconnectedCallback(): void;
    componentWillLoad(): void;
    bookingInfoChangedHandler(newValue: NylasSchedulerBookingData | undefined): void;
    changeName(name: string): void;
    changeEmail(email: string): void;
    resetGuestEmailError(guestIndex: number): void;
    handleGuestChange: (guestIndex: number, email: string) => void;
    handleGuestBlur: (guestIndex: number, email: string) => void;
    addGuestButtonClickedHandler: () => void;
    removeGuestButtonClickHandler: (e: Event, guestIndex: number) => void;
    handleBackButtonClicked: () => void;
    bookButtonClickedHandler: (e: Event) => Promise<void>;
    render(): any;
}
