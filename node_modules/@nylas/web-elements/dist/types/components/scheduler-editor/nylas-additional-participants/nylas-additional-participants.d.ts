type Participant = {
    name?: string;
    email: string;
    is_valid?: boolean;
    is_organizer: boolean;
    availability?: Availability;
    booking?: Booking;
};
type Availability = {
    calendar_ids: string[];
};
type Booking = {
    calendar_id: string;
};
export declare class NylasAdditionalParticipants {
    host: HTMLNylasAdditionalParticipantsElement;
    name: string;
    eventParticipants?: Participant[];
    internals: ElementInternals;
    elementNameChangedHandler(newValue: string): void;
    participants: Participant[];
    participantsValid: boolean;
    connectedCallback(): void;
    componentWillLoad(): void;
    componentDidLoad(): void;
    disconnectedCallback(): void;
    onParticipantChange(event: any, index: any): void;
    addParticipant(): void;
    removeParticipant(email: string): void;
    validate(email: any, index: any): void;
    render(): any;
}
export {};
