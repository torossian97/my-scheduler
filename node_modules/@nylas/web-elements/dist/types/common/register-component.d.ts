import { BaseNylasConnectorInterface } from "../connector/connector-interface";
import { ComponentInterface } from '../stencil-public-runtime';
import { CombinedStoreStateKeys, EventEmitterEventType, ExtractEventEmitterKeys, ExtractEventEmitterProperties } from './types';
export interface RegisteredComponent<H extends ComponentInterface, B extends BaseNylasConnectorInterface, MailboxStores = string> {
    name: string;
    element: HTMLElement;
    getStoresToProp?: keyof H;
    storeToProps?: Map<string, keyof H>;
    stateToProps?: Map<MailboxStores, keyof H>;
    eventToProps?: Map<ExtractEventEmitterKeys<H>, (event: CustomEvent<EventEmitterEventType<H[ExtractEventEmitterKeys<H>]>>, nylasConnector: B) => Promise<void>>;
    localPropsToProp?: Map<string, keyof H>;
    authToProp?: keyof H;
    connectorToProp?: keyof H;
    registrationEventName?: string;
    unregistrationEventName?: string;
}
export declare function createComponentEvent<T extends ComponentInterface, B extends BaseNylasConnectorInterface>(instance: T, registeredComponent: RegisteredComponent<T, B>, eventName?: string): CustomEvent<RegisteredComponent<T, B, string>>;
export declare function unregisterComponentEvent<T extends ComponentInterface, B extends BaseNylasConnectorInterface>(instance: T, registeredComponent: RegisteredComponent<T, B>, eventName?: string): CustomEvent<RegisteredComponent<T, B, string>>;
export interface RegisterComponentConfig<H extends ComponentInterface, B extends BaseNylasConnectorInterface, MailboxStores> extends Omit<RegisteredComponent<H, B, MailboxStores>, 'eventToProps' | 'name' | 'element'> {
    name: string;
    eventToProps?: Partial<{
        [P in ExtractEventEmitterProperties<H> as P['key']]: (event: CustomEvent<P['eventType']>, nylasConnector: B) => Promise<void>;
    }>;
    fireRegisterEvent?: boolean;
}
export interface NylasComponentInterface extends ComponentInterface {
    authToProp?: keyof this;
    connectorToProp?: keyof this;
}
export declare function RegisterComponent<H extends NylasComponentInterface, B extends BaseNylasConnectorInterface, MailboxStores extends Record<string, any>>(config: RegisterComponentConfig<H, B, CombinedStoreStateKeys<keyof MailboxStores, MailboxStores>>): (target: H, propKey: string) => void;
