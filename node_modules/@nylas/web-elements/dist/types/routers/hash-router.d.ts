import { RouteListener, RouteParams, RoutePath, RouterInterface } from './router-interface';
export declare class PolyFillHashChangeEvent extends Event {
    oldURL?: string;
    newURL?: string;
    constructor(type: string, eventInitDict: HashChangeEventInit);
}
export declare class HashRouter implements RouterInterface {
    private routeChangeListeners;
    constructor();
    destroy(): void;
    init(): void;
    addRouteChangeListener<Path extends RoutePath>(route: Path, listener: RouteListener<Path>): void;
    navigate(route: string, shallow: boolean): void;
    setRoute(route: string): void;
    matchRoute(route: string, path: string): boolean;
    getRouteParams<Path extends RoutePath>(route: Path): RouteParams<Path>;
    getRouteWithParams(route: string, routeParams: Record<string, any>): string;
    getRoute(): string;
    onRouteChange(event: HashChangeEvent): void;
    getBasePath(): string;
}
