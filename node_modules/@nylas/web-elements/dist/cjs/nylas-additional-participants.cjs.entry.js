'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-c14ea8f5.js');
const registerComponent = require('./register-component-4f8ae42c.js');
const utils = require('./utils-85bd0909.js');
require('./_commonjsHelpers-ef8cd0cd.js');

const nylasAdditionalParticipantsCss = ":host{display:block;margin:1rem;--nylas-primary:#2563eb;--nylas-error:#cc4841;--nylas-error-pressed:#992222;--nylas-wraning:#f06c00;--nylas-success:#16a392;--nylas-info:#2b8fc2;--nylas-base-0:#ffffff;--nylas-base-25:#fcfcfd;--nylas-base-50:#f8f9fc;--nylas-base-100:#eaecf5;--nylas-base-200:#d5d9eb;--nylas-base-300:#b3b8d8;--nylas-base-400:#717bbc;--nylas-base-500:#4e5ba6;--nylas-base-600:#3e4784;--nylas-base-700:#263f72;--nylas-base-800:#293056;--nylas-base-900:#101323;--nylas-base-950:#0e101b;--nylas-border-radius:0.25rem;--nylas-border-radius-2x:0.5rem;--nylas-border-radius-3x:0.75rem;--nylas-font-family:\"Inter\", sans-serif}.nylas-additional-participants__title{color:var(--nylas-base-nylas-base-900-aaa, #101323);font-size:16px;font-style:normal;font-weight:600;line-height:20px;margin:0;text-align:left}.nylas-additional-participants__subtitle{color:var(--nylas-base-600);font-size:14px;font-style:normal;font-weight:400;line-height:20px;margin:0.25rem 0px 0px;text-align:left}.nylas-additional-participants__content{padding:1rem;display:flex;flex-direction:column;gap:1rem}.nylas-additional-participants__input_group{padding-top:8px;display:flex;flex-direction:column;gap:4px}.nylas-additional-participants__input_group label{display:flex;align-items:center;color:var(--nylas-base-800);font-size:14px;font-style:normal;font-weight:400;line-height:150%}.nylas-additional-participants__input_wrapper{display:flex;border-width:1;border-radius:8px;border:1px solid var(--nylas-base-300)}.nylas-additional-participants__input_wrapper button{padding:12px;border:none;background:none;cursor:pointer}.nylas-additional-participants__input_wrapper button:hover,.nylas-additional-participants__input_wrapper button:active{color:var(--nylas-primary)}.nylas-additional-participants__input_wrapper_organizer{background:var(--nylas-base-50)}.nylas-additional-participants__input{flex:1;padding:12px 16px;border-right:1px solid var(--nylas-base-300)}.nylas-additional-participants__input input{border:none;outline:none;background:none;width:100%}.nylas-additional-participants__add{padding:12px;display:flex;align-items:center;border:none;background:none;cursor:pointer}.nylas-additional-participants__add span{padding:0 8px;font-size:16px;font-style:normal;font-weight:500}.nylas-additional-participants__add:hover,.nylas-additional-participants__add:active{color:var(--nylas-primary)}";

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
const NylasAdditionalParticipants = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        if (hostRef.$hostElement$["s-ei"]) {
            this.internals = hostRef.$hostElement$["s-ei"];
        }
        else {
            this.internals = hostRef.$hostElement$.attachInternals();
            hostRef.$hostElement$["s-ei"] = this.internals;
        }
        this.name = 'participants';
        this.eventParticipants = undefined;
        this.participants = this.eventParticipants ?? [];
        this.participantsValid = true;
    }
    elementNameChangedHandler(newValue) {
        utils.debug('nylas-additional-participants', 'elementNameChangedHandler', newValue);
        this.host.setAttribute('name', newValue);
    }
    connectedCallback() {
        utils.debug('nylas-additional-participants', 'connectedCallback');
    }
    componentWillLoad() {
        utils.debug('nylas-additional-participants', 'componentWillLoad');
        this.host.setAttribute('name', this.name);
    }
    componentDidLoad() {
        utils.debug('nylas-additional-participants', 'componentDidLoad');
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    disconnectedCallback() {
        utils.debug('nylas-additional-participants', 'disconnectedCallback');
    }
    onParticipantChange(event, index) {
        utils.debug('nylas-additional-participants', 'onParticipantChange');
        this.participants[index].email = event.target.value;
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    addParticipant() {
        utils.debug('nylas-additional-participants', 'addParticipant');
        this.participants = [...this.participants, { email: '', is_organizer: false, availability: { calendar_ids: ['primary'] } }];
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    removeParticipant(email) {
        utils.debug('nylas-additional-participants', 'addParticipant');
        this.participants = this.participants.filter(p => p.email !== email);
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    validate(email, index) {
        utils.debug('nylas-additional-participants', 'validate');
        const regex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        const valid = regex.test(String(email).toLowerCase());
        this.participants[index].is_valid = valid;
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    render() {
        return (index.h(index.Host, { key: '2cee2dd98939f98fdfc950f609fce3f6045ced9f' }, index.h("nylas-form-card", { key: 'e587c19e99fa1b40c9d876123fd50cde51e8882c' }, index.h("h3", { key: '6c4a90291f5918e98d62e03b599619ff4f345391', slot: "header-title", class: "nylas-additional-participants__title", part: "nap__title" }, "Additional participants"), index.h("p", { key: 'ad4fac5ca4cdb1430f889c723215d9a1538a266f', slot: "header-subtitle", class: "nylas-additional-participants__subtitle", part: "nap__subtitle" }, "Add anyone else who would be joining for this event."), index.h("div", { key: '80b29a9b1275363dac86274be18cc52210e59de7', slot: "content", class: "nylas-additional-participants__content" }, index.h("div", { key: '5adf8a7d2be8c780dbc5859b8b634efc114536c2' }, this.participants.map((participant, index$1) => {
            return (index.h("div", { class: 'nylas-additional-participants__input_group', part: "nap__input_group" }, index.h("label", null, participant.is_organizer ? 'Organizer' : `Participant ${index$1}`), index.h("div", { part: "nap__input_wrapper", class: `nylas-additional-participants__input_wrapper ${participant.is_organizer && 'nylas-additional-participants__input_wrapper_organizer'} ${participant.is_valid === false && 'nylas-additional-participants__input_wrapper_invalid'}` }, index.h("div", { class: "nylas-additional-participants__input", part: "nap__input" }, index.h("input", { type: "text", value: participant.email, onInput: e => {
                    this.onParticipantChange(e, index$1);
                }, readOnly: participant.is_organizer, onBlur: () => this.validate(participant.email, index$1) })), !participant.is_organizer && (index.h("button", { onClick: () => this.removeParticipant(participant.email), part: "nap__remove-participant" }, index.h("close-icon", null))))));
        }))))));
    }
    static get formAssociated() { return true; }
    get host() { return index.getElement(this); }
    static get watchers() { return {
        "name": ["elementNameChangedHandler"]
    }; }
};
__decorate([
    registerComponent.RegisterComponent({
        name: 'nylas-additional-participants',
        eventToProps: {},
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasAdditionalParticipants.prototype, "render", null);
NylasAdditionalParticipants.style = nylasAdditionalParticipantsCss;

exports.nylas_additional_participants = NylasAdditionalParticipants;

//# sourceMappingURL=nylas-additional-participants.cjs.entry.js.map