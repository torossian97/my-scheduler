{"version":3,"file":"auth-session-store.js","sourceRoot":"","sources":["../../src/stores/auth-session-store.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAW7C,MAAM,UAAU,2BAA2B,CAAC,eAAoD,EAAE;IAChG,MAAM,sBAAsB,GAA+B;QACzD,eAAe,EAAE,KAAK;QACtB,SAAS,EAAE,IAAI;QACf,KAAK,EAAE,OAAO;QACd,GAAG,YAAY;KAChB,CAAC;IACF,MAAM,KAAK,GAAG,WAAW,CAA6B,sBAAsB,CAAC,CAAC;IAO9E,KAAK,CAAC,KAAK,GAAG,GAAG,EAAE;QACjB,KAAK,MAAM,GAAG,IAAI,sBAAsB,EAAE,CAAC;YACzC,MAAM,KAAK,GAAG,sBAAsB,CAAC,GAA0C,CAAC,CAAC;YACjF,KAAK,CAAC,GAAG,CAAC,GAAU,EAAE,KAAK,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { IDToken } from '@nylas/identity/esm/@types';\nimport { createStore } from '@stencil/store';\nimport { DataState } from '..';\n\nexport interface NylasAuthSessionStoreState {\n  isAuthenticated: boolean;\n  tokenInfo: IDToken | null;\n  state: DataState;\n}\n\nexport type NylasAuthSessionStoreType = ReturnType<typeof CreateNylasAuthSessionStore>;\n\nexport function CreateNylasAuthSessionStore(defaultState: Partial<NylasAuthSessionStoreState> = {}) {\n  const defaultNylasStoreState: NylasAuthSessionStoreState = {\n    isAuthenticated: false,\n    tokenInfo: null,\n    state: 'ready',\n    ...defaultState,\n  };\n  const store = createStore<NylasAuthSessionStoreState>(defaultNylasStoreState);\n\n  /**\n   * Reset the Nylas store to its default state.\n   * There is something wrong with the stencil/store reset method,\n   * so we have to do it via this hack.\n   */\n  store.reset = () => {\n    for (const key in defaultNylasStoreState) {\n      const value = defaultNylasStoreState[key as keyof typeof defaultNylasStoreState];\n      store.set(key as any, value);\n    }\n  };\n\n  return store;\n}\n"]}