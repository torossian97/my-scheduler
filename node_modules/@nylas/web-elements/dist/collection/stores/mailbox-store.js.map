{"version":3,"file":"mailbox-store.js","sourceRoot":"","sources":["../../src/stores/mailbox-store.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAsB7C,MAAM,UAAU,uBAAuB,CAAC,eAAgD,EAAE;IACxF,MAAM,sBAAsB,GAA2B;QACrD,KAAK,EAAE,OAAO;QAEd,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE,EAAE;QACX,OAAO,EAAE,EAAE;QACX,cAAc,EAAE,IAAI;QACpB,mBAAmB,EAAE,IAAI;QACzB,wBAAwB,EAAE,EAAE;QAC5B,WAAW,EAAE,EAAE;QAEf,iBAAiB,EAAE,KAAK;QACxB,qBAAqB,EAAE,KAAK;QAE5B,cAAc,EAAE,OAAO;QAEvB,kBAAkB,EAAE;YAClB,EAAE,EAAE,OAAO;SACZ;QACD,iBAAiB,EAAE;YACjB,MAAM,EAAE,iBAAiB;SAC1B;QACD,GAAG,YAAY;KAChB,CAAC;IAEF,MAAM,KAAK,GAAG,WAAW,CAAyB,EAAE,GAAG,sBAAsB,EAAE,CAAC,CAAC;IAGjF,KAAK,CAAC,QAAQ,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,EAAE;QAC1D,KAAK,CAAC,GAAG,CAAC,mBAAmB,EAAE,mBAAmB,KAAK,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,QAAQ,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,EAAE;QACpE,KAAK,CAAC,GAAG,CAAC,uBAAuB,EAAE,wBAAwB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAGH,KAAK,CAAC,QAAQ,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,EAAE;QAExD,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,EAAE,IAAI,OAAO,CAAC,CAAC;QAE9D,KAAK,CAAC,GAAG,CAAC,aAAa,EAAE,kBAAkB,CAAC,mBAAmB,IAAI,EAAE,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,KAAK,GAAG,GAAG,EAAE;QACjB,KAAK,MAAM,GAAG,IAAI,sBAAsB,EAAE,CAAC;YACzC,MAAM,KAAK,GAAG,sBAAsB,CAAC,GAA0C,CAAC,CAAC;YACjF,KAAK,CAAC,GAAG,CAAC,GAAU,EAAE,KAAK,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import type { Folder, Message, MessageQueryParameters, Thread, ThreadQueryParameters } from '@nylas/core';\nimport { createStore } from '@stencil/store';\nimport { DataState } from '../components';\n\nexport interface NylasMailboxStoreState {\n  state: DataState;\n  messages: Message[];\n  threads: Thread[];\n  folders: Folder[];\n  selectedThread: Thread | null;\n  selectedFolder: string;\n  searchQuery: string;\n\n  nextThreadPageToken: string | null;\n  previousThreadPageTokens: (string | null)[];\n  hasNextThreadPage: boolean;\n  hasPreviousThreadPage: boolean;\n  threadsQueryParams: Partial<ThreadQueryParameters>;\n  messgeQueryParams: Partial<MessageQueryParameters>;\n}\n\nexport type NylasMailboxStoreType = ReturnType<typeof CreateNylasMailboxStore>;\n\nexport function CreateNylasMailboxStore(defaultState: Partial<NylasMailboxStoreState> = {}) {\n  const defaultNylasStoreState: NylasMailboxStoreState = {\n    state: 'ready',\n\n    messages: [],\n    threads: [],\n    folders: [],\n    selectedThread: null,\n    nextThreadPageToken: null,\n    previousThreadPageTokens: [],\n    searchQuery: '',\n\n    hasNextThreadPage: false,\n    hasPreviousThreadPage: false,\n\n    selectedFolder: 'inbox',\n\n    threadsQueryParams: {\n      in: 'inbox',\n    },\n    messgeQueryParams: {\n      fields: 'include_headers',\n    },\n    ...defaultState,\n  };\n\n  const store = createStore<NylasMailboxStoreState>({ ...defaultNylasStoreState });\n\n  // Set our hasNextThreadPage if nextThreadPageToken is not null.\n  store.onChange('nextThreadPageToken', nextThreadPageToken => {\n    store.set('hasNextThreadPage', nextThreadPageToken !== null);\n  });\n  // Set our hasPreviousThreadPage if previousThreadPageTokens is not empty.\n  store.onChange('previousThreadPageTokens', previousThreadPageTokens => {\n    store.set('hasPreviousThreadPage', previousThreadPageTokens.length > 0);\n  });\n\n  // When threadsQueryParams changes...\n  store.onChange('threadsQueryParams', threadsQueryParams => {\n    // set our selectedFolder to the in param.\n    store.set('selectedFolder', threadsQueryParams.in || 'inbox');\n    // set our searchQuery to the search_query_native param.\n    store.set('searchQuery', threadsQueryParams.search_query_native || '');\n  });\n\n  store.reset = () => {\n    for (const key in defaultNylasStoreState) {\n      const value = defaultNylasStoreState[key as keyof typeof defaultNylasStoreState];\n      store.set(key as any, value);\n    }\n  };\n\n  return store;\n}\n"]}