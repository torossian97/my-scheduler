{"version":3,"file":"utils.spec.js","sourceRoot":"","sources":["../../src/utils/utils.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,gBAAgB,EAAE,MAAM,SAAS,CAAC;AAEnD,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACnD,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,EAAE,CAAC,sEAAsE,EAAE,GAAG,EAAE;QAC9E,MAAM,MAAM,GAAG,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC;QAC9B,MAAM,CAAC,gBAAgB,CAAC,yCAAyC,EAAE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QACxH,MAAM,CAAC,gBAAgB,CAAC,yCAAyC,EAAE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;IAC1H,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { format, parsePreviewLink } from './utils';\n\ndescribe('format', () => {\n  it('returns empty string for no names defined', () => {\n    expect(format('', '', '')).toEqual('');\n  });\n\n  it('formats just first names', () => {\n    expect(format('Joseph', '', '')).toEqual('Joseph');\n  });\n\n  it('formats first and last names', () => {\n    expect(format('Joseph', '', 'Publique')).toEqual('Joseph Publique');\n  });\n\n  it('formats first, middle and last names', () => {\n    expect(format('Joseph', 'Quincy', 'Publique')).toEqual('Joseph Quincy Publique');\n  });\n});\n\ndescribe('parsePreviewLink', () => {\n  it('returns a preview link with ${config.id} replaced with the config id', () => {\n    const config = { id: '1234' };\n    expect(parsePreviewLink('https://example.com/preview/{config.id}', config)).toEqual('https://example.com/preview/1234');\n    expect(parsePreviewLink('https://example.com/{config.id}/preview', config)).toEqual('https://example.com/1234/preview');\n  });\n});\n"]}