import { format, parsePreviewLink } from "./utils";
describe('format', () => {
    it('returns empty string for no names defined', () => {
        expect(format('', '', '')).toEqual('');
    });
    it('formats just first names', () => {
        expect(format('Joseph', '', '')).toEqual('Joseph');
    });
    it('formats first and last names', () => {
        expect(format('Joseph', '', 'Publique')).toEqual('Joseph Publique');
    });
    it('formats first, middle and last names', () => {
        expect(format('Joseph', 'Quincy', 'Publique')).toEqual('Joseph Quincy Publique');
    });
});
describe('parsePreviewLink', () => {
    it('returns a preview link with ${config.id} replaced with the config id', () => {
        const config = { id: '1234' };
        expect(parsePreviewLink('https://example.com/preview/{config.id}', config)).toEqual('https://example.com/preview/1234');
        expect(parsePreviewLink('https://example.com/{config.id}/preview', config)).toEqual('https://example.com/1234/preview');
    });
});
//# sourceMappingURL=utils.spec.js.map
