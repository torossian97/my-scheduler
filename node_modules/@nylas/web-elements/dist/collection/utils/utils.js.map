{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataResponseError, DataResponseReturnType } from '@/common/types';\nimport { Configuration, EmailName, Message } from '@nylas/core';\nimport dayjs from 'dayjs';\nimport { RRule } from 'rrule';\n\nexport function format(first: string, middle: string, last: string): string {\n  return (first || '') + (middle ? ` ${middle}` : '') + (last ? ` ${last}` : '');\n}\n\n// Utility function to remove undefined values from an object\nexport function removeUndefined(obj: any) {\n  return Object.keys(obj).reduce((acc: { [key: string]: any }, key) => {\n    if (obj[key] !== undefined) {\n      acc[key] = obj[key];\n    }\n    return acc;\n  }, {});\n}\n\nexport function debug(...args: any[]) {\n  if (window && window.localStorage && window.localStorage.getItem('debug')) {\n    console.group(...args);\n    console.trace();\n    console.groupEnd();\n  }\n}\n\nexport function error(...args: any[]) {\n  console.error(...args);\n}\n\nexport function uniqueID() {\n  return Math.random().toString(36).substr(2, 9);\n}\n\nexport function formatEventName(propKey: string) {\n  return propKey.toString().replace(/^on/, '');\n}\n\n// Utility function to format a date as a time if it is today, or a short\n// date format if it is not toda, using the new Intl API. For example:\n// If the date is today, it will return \"12:00 PM\"\n// If the date is not today, it will return \"Jan 4, 23\"\nexport function formatDateTime(dateTimestamp: number) {\n  const date = new Date(dateTimestamp * 1000);\n  const now = new Date();\n  const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  if (date >= today) {\n    // If the day is not today, we return the month and day (e.g. Jan 4)\n    const formatter = new Intl.DateTimeFormat('default', {\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: true,\n    });\n    return formatter.format(date);\n  } else {\n    // If the day is today, we only return the time (e.g. 12:00 PM) without\n    // the month and day\n    const formatter = new Intl.DateTimeFormat('default', {\n      month: 'short',\n      day: 'numeric',\n    });\n    return formatter.format(date);\n  }\n}\n\nexport function formatRecipient(recipient: EmailName) {\n  return recipient.name ? `${recipient.name} - ${recipient.email}` : recipient.email;\n}\n\n// Formats the particpants of a thread into a string\nexport function formatParticipants(participants: EmailName[], meEmail: string = '', messageCount: number = 1, max: number = 3) {\n  const me = participants.find(p => p.email?.toLowerCase() === meEmail.toLowerCase());\n  const others = participants.filter(p => p.email?.toLowerCase() !== meEmail.toLowerCase());\n  const othersCount = others.length;\n  const othersString = others\n    .slice(0, max)\n    .map(r => r.name || r.email)\n    .join(', ');\n  if (othersCount === 0) {\n    return me ? 'me' : '';\n  } else if (othersCount === 1) {\n    return me && messageCount > 1 ? `me, ${othersString}` : othersString;\n  } else if (othersCount === 2) {\n    return me ? `me, ${othersString}` : `${othersString}`;\n  } else {\n    return me ? `me, ${othersString}, +${othersCount - max}` : `${othersString}, +${othersCount - max}`;\n  }\n}\n\n// https://blog.webdevsimplified.com/2020-07/relative-time-format/\nconst DIVISIONS: Array<{\n  amount: number;\n  name: Intl.RelativeTimeFormatUnit;\n}> = [\n  { amount: 60, name: 'seconds' },\n  { amount: 60, name: 'minutes' },\n  { amount: 24, name: 'hours' },\n  { amount: 7, name: 'days' },\n  { amount: 4.34524, name: 'weeks' },\n  { amount: 12, name: 'months' },\n  { amount: Number.POSITIVE_INFINITY, name: 'years' },\n];\n\nexport const formatTimeAgo = (date: Date) => {\n  const formatter = new Intl.RelativeTimeFormat(undefined, {\n    numeric: 'auto',\n  });\n  const now = new Date();\n  let duration = (date.getTime() - now.getTime()) / 1000;\n\n  for (let i = 0; i <= DIVISIONS.length; i++) {\n    const division = DIVISIONS[i];\n    if (Math.abs(duration) < division.amount) {\n      return formatter.format(Math.round(duration), division.name);\n    }\n    duration /= division.amount;\n  }\n};\n\nexport function getLastDayOfMonth(date: Date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nexport function getFirstDayOfMonth(date: Date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\n\nexport function getFirstHourOfDay(date: Date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0);\n}\n\nexport function isSameDay(date1: Date, date2: Date) {\n  return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n}\n\nexport function isSameMonth(date1: Date, date2: Date) {\n  return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth();\n}\n\nexport function toTitleCase(str: string) {\n  return str.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\n}\n\nexport function formatFolderName(folderName: string) {\n  return folderName.replace('CATEGORY_', '').replace(/_/g, ' ');\n}\n\nexport function detectHTMLOrPlainText(html: string) {\n  const regex = /<[^>]*>/g;\n  return regex.test(html) ? 'html' : 'plain';\n}\n\nexport function detectIfMessageIsHTML(message: Message) {\n  const headers = message.headers;\n  const contentType = (headers && headers.find(h => h.name === 'Content-Type')?.value) || '';\n  const contentDisposition = (headers && headers.find(h => h.name === 'Content-Disposition')?.value) || '';\n\n  // If the content type is HTML, then we know it's HTML\n  if (contentType.includes('text/html')) {\n    return true;\n  }\n\n  // If the content disposition is inline, then we know it's HTML\n  if (contentDisposition.includes('inline')) {\n    return true;\n  }\n\n  // If the body is HTML, then we know it's HTML\n  if (message.body && detectHTMLOrPlainText(message.body) === 'html') {\n    return true;\n  }\n\n  // Otherwise, we assume it's plain text\n  return false;\n}\n\nexport function parsePlainTextToHTML(text: string) {\n  const paragraphs = text.split('\\n').filter(line => line.trim().length > 0);\n  const wrappedParagraphs = paragraphs.map(paragraph => `<p>${paragraph}</p>`);\n  let body = wrappedParagraphs.join('');\n\n  // Replace links with anchor tags\n  const regex = /((?:https?|ftp):\\/\\/[^\\s]+)/g;\n  body = body.replace(regex, '<a href=\"$1\">$1</a>');\n\n  return body;\n}\n\nexport function htmlToPlainText(html: string) {\n  const doc = new DOMParser().parseFromString(html, 'text/html');\n  return doc.body.textContent || '';\n}\n\nexport function getStartHourOfDay(date: Date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0);\n}\n\nexport function getEndHourOfDay(date: Date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23);\n}\n\n// Zero pad a number to two digits\nexport function get24HourTime(date: Date) {\n  return `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n}\n\nexport function getUserTimezone() {\n  return Intl.DateTimeFormat().resolvedOptions().timeZone;\n}\n\nexport const getEventRecurrence = (recurrence: any): string | null => {\n  if (recurrence.includes('RRULE:')) {\n    recurrence = recurrence.replace('RRULE:', '');\n    return RRule.fromString(recurrence).toText();\n  }\n  return RRule.fromString(recurrence).toText();\n};\n\n// Validate time format part\nexport const validateTimeFormatInput = text => {\n  if (text === '') {\n    return true;\n  }\n  const regexPattern = /^(0[0-9]|1[0-2]|^[0-9])(:[0-5][0-9][ap]m?|:[0-5][0-9]|:[0-5]|:)?$/i;\n  return regexPattern.test(text);\n};\n// Validate exact time format\nexport const validateExactTimeFormat = input => {\n  const regex = /^(0[1-9]|1[0-2]):([0-5][0-9])(am|pm)$/i;\n  return regex.test(input);\n};\n\nexport function roundToNearest15Minutes(time: dayjs.Dayjs | null = null) {\n  let currentTime = dayjs(); // Get the current time\n  if (time) {\n    currentTime = time;\n  }\n\n  // Calculate the remainder when dividing the minutes by 15\n  const minuteRemainder = currentTime.minute() % 15;\n\n  let roundedTime;\n\n  if (minuteRemainder !== 0) {\n    // Round up to the next 15-minute interval\n    roundedTime = currentTime.add(15 - minuteRemainder, 'minute');\n  } else {\n    // Keep the current time as it is\n    roundedTime = currentTime;\n  }\n\n  return roundedTime;\n}\n\nexport function autocompleteTimeFormat(input) {\n  const currentTime = dayjs(); // Get the current time\n\n  let completedTime = '';\n\n  // Extract the hour and minute components\n  const [inputHour, inputMinuteWithAmPm] = input.split(':');\n  // Autocomplete the hour component\n  if (inputHour.length === 1) {\n    completedTime += '0' + inputHour;\n  } else if (inputHour.length === 2) {\n    completedTime += inputHour;\n  }\n\n  completedTime += ':';\n\n  // Autocomplete the minute component\n  if (inputMinuteWithAmPm === undefined || inputMinuteWithAmPm == '') {\n    completedTime += '00';\n  } else {\n    if (inputMinuteWithAmPm.length === 1) {\n      completedTime += inputMinuteWithAmPm + '0';\n    } else {\n      completedTime += inputMinuteWithAmPm;\n    }\n  }\n\n  // Set the am/pm indicator based on the provided input\n  const amPmIndicator = completedTime.slice(-1); // Extract the am/pm indicator from input\n\n  if (amPmIndicator === 'a') {\n    completedTime += 'm';\n  }\n  if (amPmIndicator === 'p') {\n    completedTime += 'm';\n  }\n\n  // Set the am/pm indicator based on the current time if no indecator present inside input\n  if (completedTime.slice(-1) !== 'm') {\n    if (completedTime.split(':')[0] == '00') {\n      completedTime += 'am';\n    } else {\n      completedTime += currentTime.format('a');\n    }\n  }\n\n  return completedTime;\n}\n\nexport function formatTime(time: string) {\n  return dayjs(time, 'hh:mma');\n}\n\nexport function convertTo12HourFormat(timeStr: string) {\n  // Split the time into hours and minutes\n  const [hoursInitial, minutes] = timeStr.split(':').map(num => parseInt(num, 10));\n  let hours = hoursInitial;\n\n  // Determine AM or PM\n  const ampm = hours >= 12 ? 'pm' : 'am';\n\n  // Convert hours from 24-hour to 12-hour format\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n\n  // Format hours and minutes to ensure two digits\n  const formattedHours = hours.toString().padStart(2, '0');\n  const formattedMinutes = minutes.toString().padStart(2, '0');\n\n  // Construct the 12-hour format time string\n  return `${formattedHours}:${formattedMinutes}${ampm}`;\n}\n\nexport function convertTo24HourFormat(timeStr: string) {\n  const [time, modifier] = timeStr.split(/(am|pm)/i);\n  const [hoursInitial, minutes] = time.split(':').map(num => parseInt(num, 10));\n  let hours = hoursInitial;\n\n  if (modifier.toLowerCase() === 'pm' && hours < 12) {\n    hours += 12;\n  } else if (modifier.toLowerCase() === 'am' && hours === 12) {\n    hours = 0;\n  }\n\n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n}\n\nexport function timeToMinutes(time) {\n  const [hours, minutesPart] = time.match(/(\\d+):(\\d+)(am|pm)/).slice(1);\n  let minutes = parseInt(hours, 10) * 60 + parseInt(minutesPart, 10);\n  if (time.includes('pm') && parseInt(hours, 10) < 12) minutes += 12 * 60;\n  if (time.includes('am') && parseInt(hours, 10) === 12) minutes -= 12 * 60;\n  return minutes;\n}\n\nexport function minutesToTime(minutes) {\n  const h = Math.floor(minutes / 60);\n  const m = minutes % 60;\n  return `${h}:${m < 10 ? '0' : ''}${m}`;\n}\n\nexport function getBrowser() {\n  const ua = navigator.userAgent;\n\n  // Check for Chrome (also in Edge and Opera)\n  const isChrome = /Chrome/.test(ua) && /Google Inc/.test(navigator.vendor);\n\n  // Check for Safari (also in Chrome and Opera)\n  const isSafari = /Safari/.test(ua) && /Apple Computer/.test(navigator.vendor);\n\n  // Check for Firefox\n  const isFirefox = /Firefox/.test(ua);\n\n  // Check for Internet Explorer\n  const isIE = /Trident/.test(ua);\n\n  // Check for Edge (the legacy version)\n  const isEdgeLegacy = /Edge/.test(ua);\n\n  // Check for Edge (the Chromium-based version)\n  const isEdgeChromium = isChrome && /Edg/.test(ua);\n\n  if (isEdgeChromium) return 'Edge (Chromium)';\n  if (isChrome) return 'Chrome';\n  if (isSafari) return 'Safari';\n  if (isFirefox) return 'Firefox';\n  if (isIE) return 'Internet Explorer';\n  if (isEdgeLegacy) return 'Edge (Legacy)';\n\n  return 'Unknown';\n}\n\n/**\n * Utility function to create a response object with data and error.\n * @param data any The data to return.\n * @param error DataResponseError The error to return.\n */\nexport function dataResponse<T = any>(data: T, error: DataResponseError | null = null): DataResponseReturnType<T> {\n  if (error) {\n    return [null, error];\n  }\n  return [data, null];\n}\n\n/**\n * Utility function to parse a preview link with placeholders.\n * @param link string A preview link with placeholders.\n * @param config Partial<Configuration> The configuration object to use to replace the placeholders.\n * @returns string The preview link with the placeholders replaced.\n */\nexport function parsePreviewLink(link: string, config?: Partial<Configuration>) {\n  // Replacements\n  const replacements = {\n    'config.id': config?.id,\n    'id': config?.id,\n  };\n\n  // Replace the placeholders with the actual values\n  Object.keys(replacements).forEach(key => {\n    link = link.replace(`{${key}}`, replacements[key]);\n  });\n\n  return link;\n}\n\nexport function isNonPrintableKey(event) {\n  // Check for special keys like backspace, enter, escape, arrow keys, function keys, etc.\n  if (\n    event.keyCode < 48 || // Before 0\n    (event.keyCode > 90 && event.keyCode < 96) || // Between Z and numpad 0\n    (event.keyCode > 111 && event.keyCode < 186) || // Between numpad 9 and semi-colon (;)\n    event.keyCode > 222 || // After single quote (')\n    event.keyCode === 32 || // Spacebar\n    event.keyCode === 91 || // Left Window key or left ⌘ key\n    event.keyCode === 92 || // Right Window key or right ⌘ key\n    event.keyCode === 93 || // Select key / Menu key or right ⌘ key\n    (event.keyCode >= 112 && event.keyCode <= 123) || // Function (F1-F12) keys\n    (event.keyCode >= 37 && event.keyCode <= 40) // Arrow keys\n  ) {\n    return true;\n  }\n\n  // Check for Ctrl, Alt, Shift, CapsLock, etc., by ignoring if any of these are pressed\n  if (event.ctrlKey || event.altKey || event.metaKey) {\n    return true;\n  }\n\n  // Check if Shift is combined with a number or special character\n  const shiftSpecialChars = [\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57, // Numbers (0-9)\n    186,\n    187,\n    188,\n    189,\n    190,\n    191,\n    192,\n    219,\n    220,\n    221,\n    222, // Special characters (;=,-./` and []\\')\n  ];\n\n  if (event.shiftKey && shiftSpecialChars.includes(event.keyCode)) {\n    return false;\n  }\n\n  // If none of the above, it's a character, number, or special character typed without shift\n  return false;\n}\n\nexport function addDaysToCurrentDate(startDate, days) {\n  const currentDate = new Date(startDate);\n  currentDate.setDate(currentDate.getDate() + days);\n  currentDate.setHours(23); // Sets the hour to 11 PM\n  currentDate.setMinutes(59); // Sets the minute to 59\n  currentDate.setSeconds(0); // Optionally, sets the seconds to 0\n  currentDate.setMilliseconds(0); // Optionally, sets the milliseconds to 0\n  return currentDate;\n}\n\nexport function addMinutesToCurrentTime(startDate, minutes) {\n  const currentDate = new Date(startDate);\n  currentDate.setMinutes(currentDate.getMinutes() + minutes);\n  return currentDate;\n}\n\nexport function isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nexport function mergeDeep(target, source) {\n  if (Array.isArray(target) && Array.isArray(source) && target !== source) {\n    // Custom handling for participants array\n    if (target.some(item => item.is_organizer) && source.some(item => item.is_organizer)) {\n      // Ensure all base participants are not organizers if there's an organizer in the selected config\n      target = target.map(participant => ({ ...participant, is_organizer: false }));\n    } else if (!source.some(item => item.is_organizer)) {\n      // Make sure there is at least one organizer in the base if none in selected\n      let foundOrganizer = false;\n      target = target.map(participant => {\n        if (!foundOrganizer) {\n          foundOrganizer = true;\n          return { ...participant, is_organizer: true };\n        }\n        return participant;\n      });\n    }\n    // Merge each element of the arrays by index\n    return target\n      .map((item, index) => {\n        return source[index] ? mergeDeep(item, source[index]) : item;\n      })\n      .concat(source.slice(target.length));\n  } else if (isObject(target) && isObject(source)) {\n    const output = Object.assign({}, target);\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key])) {\n        if (!(key in target)) {\n          output[key] = source[key];\n        } else {\n          output[key] = mergeDeep(target[key], source[key]);\n        }\n      } else {\n        output[key] = source[key];\n      }\n    });\n    return output;\n  }\n  return source;\n}\n"]}