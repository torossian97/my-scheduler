{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/types/index.ts"],"names":[],"mappings":"AAgFA,MAAM,CAAN,IAAY,WAGX;AAHD,WAAY,WAAW;IACrB,yCAA0B,CAAA;IAC1B,yCAA0B,CAAA;AAC5B,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB","sourcesContent":["export interface NylasResponse<Data = any> {\n  request_id: string;\n  data?: Data;\n  error?: {\n    message: string;\n    type: string;\n  };\n}\n\n// Avaliability\nexport interface OpenHours {\n  days: number[];\n  exDates: string[];\n  timezone: string;\n  start: string;\n  end: string;\n}\n\nexport interface MeetingBuffer {\n  before: number;\n  after: number;\n}\n\nexport interface Rules {\n  availability_method: 'max-fairness' | 'max-availability' | 'collective';\n  buffer: MeetingBuffer;\n  default_open_hours?: OpenHours[];\n  round_robin_group_id: string;\n}\n\n// Scheduling\nexport interface Configuration {\n  id: string;\n  version: string;\n  participants: Participant[];\n  availability: Availability;\n  event_booking: EventBooking;\n  scheduler: Scheduler;\n}\n\nexport interface UpdateConfiguration extends Omit<Configuration, 'id'> {}\n\nexport interface Participant {\n  name: string;\n  email: string;\n  is_organizer?: boolean;\n  availability?: ParticipantAvailability;\n  booking?: ParticipantBooking;\n}\n\nexport interface ParticipantAvailability {\n  calendar_ids: string[];\n  open_hours?: OpenHours[];\n}\n\nexport interface ParticipantBooking {\n  calendar_id: string;\n}\n\nexport interface Availability {\n  duration_minutes: number;\n  interval_minutes?: number;\n  round_to?: number;\n  availability_rules?: Rules;\n}\n\nexport interface EventBooking {\n  title: string;\n  description?: string;\n  location?: string;\n  booking_type: BookingType;\n  additional_fields?: { [key: string]: any };\n  hide_participants: boolean;\n}\n\nexport interface Scheduler {\n  available_days_in_future: number;\n  min_cancellation_notice: number;\n}\n\nexport enum BookingType {\n  InstantBooking = 'booking',\n  PreBooking = 'pre-booking',\n}\n"]}