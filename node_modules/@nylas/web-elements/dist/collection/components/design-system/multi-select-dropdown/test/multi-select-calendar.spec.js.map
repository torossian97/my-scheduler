{"version":3,"file":"multi-select-calendar.spec.js","sourceRoot":"","sources":["../../../../../src/components/design-system/multi-select-dropdown/test/multi-select-calendar.spec.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAElC,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,IAAI,OAA4B,CAAC;IACjC,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,mBAAmB,CAAC;YACjC,IAAI,EAAE,iDAAiD;YACvD,QAAQ,EAAE,GAAG,EAAE;gBACb,MAAM,OAAO,GAAG;oBACd,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE;oBACjC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE;oBACjC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE;iBAClC,CAAC;gBACF,OAAO,6BAAuB,IAAI,EAAE,UAAU,EAAE,KAAK,EAAC,8CAA8C,EAAC,OAAO,EAAE,OAAO,GAA0B,CAAC;YAClJ,CAAC;SACF,CAAC,CAAC;QACH,OAAO,GAAG,IAAI,CAAC,YAAmC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;QACnC,OAAO,CAAC,cAAc,EAAE,CAAC;QACzB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;QACpC,OAAO,CAAC,cAAc,EAAE,CAAC;QACzB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC7B,OAAO,CAAC,sBAAsB,GAAG;YAC/B,IAAI,EAAE,UAAU;SACjB,CAAC;QAEF,MAAM,YAAY,GAAG,IAAI,aAAa,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QACxE,OAAO,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;QAI3C,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC;QACrE,OAAO,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QAE5C,MAAM,CAAC,UAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;QACtB,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;QAE1C,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,cAAc,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACtE,OAAO,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QACtC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;QAC7E,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACtD,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC7B,mBAAmB,CAAC,sBAAsB,GAAG;YAC3C,IAAI,EAAE,UAAU;SACjB,CAAC;QACF,mBAAmB,CAAC,IAAI,GAAG,UAAU,CAAC;QACtC,mBAAmB,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QAEjE,mBAAmB,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QACnE,MAAM,CAAC,UAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACxC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { MultiSelectDropdown } from '../multi-select-dropdown';\nimport { h } from '@stencil/core';\n\ndescribe('multi-select-dropdown', () => {\n  let element: MultiSelectDropdown;\n  beforeEach(async () => {\n    const page = await newSpecPage({\n      components: [MultiSelectDropdown],\n      html: `<multi-select-dropdown></multi-select-dropdown>`,\n      template: () => {\n        const options = [\n          { value: '1', label: 'Option 1' },\n          { value: '2', label: 'Option 2' },\n          { value: '3', label: 'Option 3' },\n        ];\n        return <multi-select-dropdown name={'calendar'} label=\"Only schedule meetings when I'm available on\" options={options}></multi-select-dropdown>;\n      },\n    });\n    element = page.rootInstance as MultiSelectDropdown;\n  });\n\n  it('should toggle dropdown open and close', async () => {\n    expect(element.isOpen).toBeFalsy();\n    element.toggleDropdown();\n    expect(element.isOpen).toBeTruthy();\n    element.toggleDropdown();\n    expect(element.isOpen).toBeFalsy();\n  });\n\n  it('should handle keyboard events to navigate options', async () => {\n    const changedSpy = jest.fn();\n    element.selectedOptionsChanged = {\n      emit: changedSpy,\n    };\n    // Simulate ArrowDown key press\n    const keyDownEvent = new KeyboardEvent('keydown', { key: 'ArrowDown' });\n    element.handleListboxKeydown(keyDownEvent);\n    // Further implementation depends on focus management\n\n    // Simulate Enter key press to select an option\n    const keyEnterEvent = new KeyboardEvent('keydown', { key: 'Enter' });\n    element.handleListboxKeydown(keyEnterEvent);\n    // Verify option is selected and event is emitted\n    expect(changedSpy).toHaveBeenCalled();\n  });\n\n  it('should close dropdown when clicking outside', async () => {\n    element.isOpen = true;\n    const mockEvent = new MouseEvent('click');\n    // Simulate clicking outside by not including the dropdown element in path\n    Object.defineProperty(mockEvent, 'composedPath', { value: () => [] });\n    element.handleOutsideClick(mockEvent);\n    expect(element.isOpen).toBeFalsy();\n  });\n\n  it('should select an option and emit selectedOptionsChanged event', async () => {\n    const multiSelectDropdown = new MultiSelectDropdown();\n    const changedSpy = jest.fn();\n    multiSelectDropdown.selectedOptionsChanged = {\n      emit: changedSpy,\n    };\n    multiSelectDropdown.name = 'calendar';\n    multiSelectDropdown.options = [{ value: '1', label: 'Primary' }];\n\n    multiSelectDropdown.selectOption({ value: '1', label: 'Primary' });\n    expect(changedSpy).toHaveBeenCalled();\n  });\n});\n"]}