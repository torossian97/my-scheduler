{"version":3,"file":"nylas-calendar-picker.spec.js","sourceRoot":"","sources":["../../../../../src/components/scheduler-editor/nylas-calendar-picker/test/nylas-calendar-picker.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { NylasCalendarPicker } from '../nylas-calendar-picker';\nimport { MultiSelectDropdown } from '../../../design-system/multi-select-dropdown/multi-select-dropdown';\nimport { h } from '@stencil/core';\nimport { Calendar } from '@nylas/core';\n\nconst calendars: Calendar[] = [\n  {\n    id: 'new-calendar-id',\n    name: 'New Calendar',\n    grant_id: 'new-grant-id',\n    hex_color: '#000000',\n    hex_foreground_color: '#FFFFFF',\n    is_primary: false,\n    is_owned_by_user: true,\n    read_only: false,\n    timezone: 'America/Toronto',\n    object: 'calendar',\n  },\n  {\n    id: 'another-new-calendar-id',\n    name: 'Another New Calendar',\n    grant_id: 'new-grant-id',\n    hex_color: '#000000',\n    hex_foreground_color: '#FFFFFF',\n    is_primary: false,\n    is_owned_by_user: true,\n    read_only: false,\n    timezone: 'America/Toronto',\n    object: 'calendar',\n  },\n];\n\ndescribe('nylas-calendar-picker', () => {\n  let nylasCalendarPicker: NylasCalendarPicker;\n  let multiSelectDropdown: HTMLMultiSelectDropdownElement;\n  let page: any;\n  beforeEach(async () => {\n    page = await newSpecPage({\n      components: [NylasCalendarPicker, MultiSelectDropdown],\n      template: () => {\n        return (\n          <nylas-calendar-picker name=\"calendar\" calendars={calendars}>\n            <multi-select-dropdown name={'calendar'} label=\"Only schedule meetings when I'm available on\"></multi-select-dropdown>\n          </nylas-calendar-picker>\n        );\n      },\n    });\n    await page.waitForChanges();\n    nylasCalendarPicker = page.rootInstance as NylasCalendarPicker;\n    multiSelectDropdown = page.root?.shadowRoot?.querySelector('multi-select-dropdown') as HTMLMultiSelectDropdownElement;\n  });\n\n  it('selects calendar', async () => {\n    const spyEvent = jest.fn();\n    nylasCalendarPicker.valueChanged = {\n      emit: spyEvent,\n    };\n    const mockEvent = new CustomEvent('selectedOptionsChanged', {\n      detail: { value: ['new-calendar-id'], name: 'calendar' },\n      bubbles: true,\n      composed: true,\n    });\n    nylasCalendarPicker.selectedOptionsChangedHandler(mockEvent);\n    expect(spyEvent).toHaveBeenCalled();\n  });\n\n  it('closes dropdown on outside click', async () => {\n    multiSelectDropdown.shadowRoot?.querySelector('button')?.click();\n    await page.waitForChanges();\n\n    expect(multiSelectDropdown.shadowRoot?.querySelector('.dropdown-content')).not.toBeNull();\n    document.body.click();\n    await page.waitForChanges();\n    expect(multiSelectDropdown.shadowRoot?.querySelector('.dropdown-content')).toBeNull();\n  });\n});\n"]}