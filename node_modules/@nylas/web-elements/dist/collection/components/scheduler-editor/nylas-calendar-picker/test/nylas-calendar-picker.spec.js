import { newSpecPage } from "@stencil/core/testing";
import { NylasCalendarPicker } from "../nylas-calendar-picker";
import { MultiSelectDropdown } from "../../../design-system/multi-select-dropdown/multi-select-dropdown";
import { h } from "@stencil/core";
const calendars = [
    {
        id: 'new-calendar-id',
        name: 'New Calendar',
        grant_id: 'new-grant-id',
        hex_color: '#000000',
        hex_foreground_color: '#FFFFFF',
        is_primary: false,
        is_owned_by_user: true,
        read_only: false,
        timezone: 'America/Toronto',
        object: 'calendar',
    },
    {
        id: 'another-new-calendar-id',
        name: 'Another New Calendar',
        grant_id: 'new-grant-id',
        hex_color: '#000000',
        hex_foreground_color: '#FFFFFF',
        is_primary: false,
        is_owned_by_user: true,
        read_only: false,
        timezone: 'America/Toronto',
        object: 'calendar',
    },
];
describe('nylas-calendar-picker', () => {
    let nylasCalendarPicker;
    let multiSelectDropdown;
    let page;
    beforeEach(async () => {
        page = await newSpecPage({
            components: [NylasCalendarPicker, MultiSelectDropdown],
            template: () => {
                return (h("nylas-calendar-picker", { name: "calendar", calendars: calendars }, h("multi-select-dropdown", { name: 'calendar', label: "Only schedule meetings when I'm available on" })));
            },
        });
        await page.waitForChanges();
        nylasCalendarPicker = page.rootInstance;
        multiSelectDropdown = page.root?.shadowRoot?.querySelector('multi-select-dropdown');
    });
    it('selects calendar', async () => {
        const spyEvent = jest.fn();
        nylasCalendarPicker.valueChanged = {
            emit: spyEvent,
        };
        const mockEvent = new CustomEvent('selectedOptionsChanged', {
            detail: { value: ['new-calendar-id'], name: 'calendar' },
            bubbles: true,
            composed: true,
        });
        nylasCalendarPicker.selectedOptionsChangedHandler(mockEvent);
        expect(spyEvent).toHaveBeenCalled();
    });
    it('closes dropdown on outside click', async () => {
        multiSelectDropdown.shadowRoot?.querySelector('button')?.click();
        await page.waitForChanges();
        expect(multiSelectDropdown.shadowRoot?.querySelector('.dropdown-content')).not.toBeNull();
        document.body.click();
        await page.waitForChanges();
        expect(multiSelectDropdown.shadowRoot?.querySelector('.dropdown-content')).toBeNull();
    });
});
//# sourceMappingURL=nylas-calendar-picker.spec.js.map
