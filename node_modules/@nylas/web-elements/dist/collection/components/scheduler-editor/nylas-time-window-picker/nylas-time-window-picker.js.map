{"version":3,"file":"nylas-time-window-picker.js","sourceRoot":"","sources":["../../../../src/components/scheduler-editor/nylas-time-window-picker/nylas-time-window-picker.tsx"],"names":[],"mappings":"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","sourcesContent":["import { autocompleteTimeFormat, roundToNearest15Minutes, validateExactTimeFormat, validateTimeFormatInput } from '@/utils/utils';\nimport { Component, h, State, Prop, Event, EventEmitter, Listen, Element, Host, Watch } from '@stencil/core';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\n\ndayjs.extend(customParseFormat);\n\ntype Time = { id: number; value: string };\n\n/**\n * The `nylas-time-window-picker` component is a time picker that can be used to select a time.\n * @part time-picker - The time picker container\n * @part time-input - The time input\n * @part times - The list of times\n */\n@Component({\n  tag: 'nylas-time-window-picker',\n  styleUrl: 'nylas-time-window-picker.scss',\n  shadow: true,\n})\nexport class TimeInput {\n  @Element() el!: HTMLElement;\n  private timeInput!: HTMLInputElement;\n  private timeMenu!: HTMLElement;\n\n  /**\n   * The time to display in the input.\n   * This is passed by the parent component and can be updated\n   * using the setTime prop function provided by the parent component.\n   */\n  @Prop() time!: string;\n  /**\n   * This is the start time value if one is set by the parent component.\n   * It is useful if this component is used to render an end time which\n   * should not be before the start time, defining the earliest selectable time.\n   */\n  @Prop() minimumStartTime: string | null = null;\n\n  /**\n   * The placeholder text for the input.\n   */\n  @Prop() placeholder: string = 'hh:mmam/pm';\n  /**\n   * The name of the input.\n   */\n  @Prop() name!: string;\n  /**\n   * This sets the error state of the input.\n   */\n  @Prop() hasError: boolean = false;\n\n  /**\n   * The error message to display if the time is invalid.\n   */\n  @State() err: string = '';\n  /**\n   * Toggle to show the list of times.\n   */\n  @State() showTimes: boolean = false;\n  /**\n   * The aria-activedescendant attribute for the listbox element to indicate the currently active\n   * option in the list box to screen readers. The value of aria-activedescendant is the ID of\n   * the active option.\n   */\n  @State() ariaActivedescendant: string = '';\n  /**\n   * The list of times to display in the dropdown.\n   */\n  @State() times: Time[] = this.generateTimes();\n  /**\n   * This is used to scroll to the selected time when the time is changed.\n   */\n  @State() shouldAutoScroll: boolean = false;\n\n  /**\n   * This event is fired when the time is changed.\n   */\n  @Event() timeChange!: EventEmitter<{\n    key: string;\n    value: string;\n  }>;\n\n  /**\n   * This event is fired when the form has an error. The parent component\n   * can listen for this event and display an error message or set form validity.\n   */\n  @Event() formError!: EventEmitter<{\n    key: string;\n    message: string;\n  }>;\n\n  // Event listeners\n  @Listen('click', { target: 'document' })\n  handleOutsideClick(event: MouseEvent) {\n    // Get the path of the event\n    const path = event.composedPath();\n\n    // Check if the path includes the host element\n    const isClickInside = path.includes(this.el);\n\n    if (!isClickInside && this.showTimes) {\n      this.showTimes = false;\n    }\n  }\n\n  @Watch('minimumStartTime')\n  minimumStartTimeChangedHandler() {\n    if (this.minimumStartTime) {\n      let formattedTime = dayjs()\n        .hour(parseInt(this.minimumStartTime))\n        .minute(parseInt(this.minimumStartTime.slice(-4, -2)));\n      if (this.minimumStartTime.slice(-2).toLowerCase() === 'pm' && parseInt(this.minimumStartTime) !== 12) {\n        formattedTime = formattedTime.add(12, 'hour');\n      } else if (this.minimumStartTime.slice(-2).toLowerCase() === 'am' && parseInt(this.minimumStartTime) === 12) {\n        formattedTime = formattedTime.subtract(12, 'hour');\n      }\n\n      this.times = this.generateTimes();\n      const firstTime = dayjs(this.times[0].value, 'hh:mma');\n      let selectedTimeFormatted = dayjs(this.time, 'hh:mma');\n      if (selectedTimeFormatted.isBefore(firstTime)) {\n        this.err = 'Invalid';\n        this.formError.emit({\n          key: this.el.id,\n          message: 'Invalid',\n        });\n      }\n    }\n  }\n\n  componentDidRender() {\n    if (this.showTimes && this.shouldAutoScroll) {\n      const autocompletedTime = autocompleteTimeFormat(this.time);\n      const optionIndex = this.times.findIndex(time => time.value === autocompletedTime);\n      if (optionIndex > -1) {\n        this.shouldAutoScroll = false;\n        this.scrollToViewWithinParent(optionIndex);\n      }\n      return;\n    }\n  }\n\n  private handleTimeChange(_e: Event, input: string) {\n    const timePart = input.split(':');\n    if (timePart[0] === '00' && timePart[1].slice(-2) == 'pm') {\n      this.err = 'Invalid';\n      this.formError.emit({\n        key: this.el.id,\n        message: 'Invalid',\n      });\n    }\n    if (!validateTimeFormatInput(input)) {\n      this.err = 'Invalid';\n      this.formError.emit({\n        key: this.el.id,\n        message: 'Invalid',\n      });\n    } else {\n      this.err = '';\n      this.formError.emit({\n        key: this.el.id,\n        message: '',\n      });\n    }\n    this.timeChange.emit({\n      key: this.el.id,\n      value: input,\n    });\n  }\n\n  private handleTimeAutocomplete(event: Event) {\n    const input = (event.target as HTMLInputElement)?.value;\n    if (!validateTimeFormatInput(input)) {\n      this.err = 'Invalid';\n      this.formError.emit({\n        key: this.el.id,\n        message: 'Invalid',\n      });\n      return;\n    }\n    if (input === '') {\n      const newTime = roundToNearest15Minutes().format('hh:mma');\n      this.timeChange.emit({\n        key: this.el.id,\n        value: newTime,\n      });\n      return;\n    }\n    if (!validateExactTimeFormat(input)) {\n      const autocompletedTime = autocompleteTimeFormat(input);\n      this.timeChange.emit({\n        key: this.el.id,\n        value: autocompletedTime,\n      });\n      return;\n    }\n    this.timeChange.emit({\n      key: this.el.id,\n      value: input,\n    });\n  }\n\n  private handleOnInput(event: Event) {\n    const input = (event.target as HTMLInputElement)?.value;\n    if (!validateTimeFormatInput(input)) {\n      return;\n    }\n    if (input === '') {\n      const newTime = roundToNearest15Minutes().format('hh:mma');\n      const optionIndex = this.times.findIndex(time => time.value === newTime);\n      if (optionIndex > -1) {\n        this.scrollToViewWithinParent(optionIndex);\n      }\n      return;\n    }\n    if (!validateExactTimeFormat(input)) {\n      const autocompletedTime = autocompleteTimeFormat(input);\n      const optionIndex = this.times.findIndex(time => time.value === autocompletedTime);\n      if (optionIndex > -1) {\n        this.scrollToViewWithinParent(optionIndex);\n      }\n      return;\n    }\n  }\n\n  private generateTimes() {\n    const times: Time[] = [];\n    let startTime = dayjs().set('hour', 0).set('minute', 0).set('second', 0); // Set to 12:00 am\n    if (this.minimumStartTime) {\n      startTime = dayjs(this.minimumStartTime, 'hh:mma');\n    }\n    const diff = startTime.endOf('day').diff(startTime, 'minutes');\n    const iterations = Math.round(diff / 15);\n    for (let i = 0; i < iterations + 1; i++) {\n      // 96 represents the total number of 15-minute increments in a day (24 hours * 60 minutes / 15 minutes)\n      const time = startTime.add(i * 15, 'minute');\n      if (i == iterations && time.format('hh:mma').includes('am')) {\n        break;\n      }\n      times.push({ id: i, value: time.format('hh:mma') });\n    }\n    return times;\n  }\n\n  private handleComboboxKeyDown(event: KeyboardEvent): void {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      if (!this.showTimes) {\n        this.showTimes = true;\n        this.shouldAutoScroll = true;\n        return;\n      }\n      if (this.ariaActivedescendant === '') {\n        this.ariaActivedescendant = this.times[0].id.toString();\n        this.focusOption(0);\n      } else {\n        const currentIndex = this.times.findIndex(time => time.id.toString() === this.ariaActivedescendant);\n        const nextIndex = currentIndex + 1 < this.times.length ? currentIndex + 1 : 0;\n        this.ariaActivedescendant = this.times[nextIndex].id.toString();\n        this.focusOption(nextIndex);\n      }\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      if (this.ariaActivedescendant === '') {\n        this.ariaActivedescendant = this.times[this.times.length - 1].id.toString();\n        this.focusOption(this.times.length - 1);\n      } else {\n        const currentIndex = this.times.findIndex(time => time.id.toString() === this.ariaActivedescendant);\n        const prevIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : this.times.length - 1;\n        this.ariaActivedescendant = this.times[prevIndex].id.toString();\n        this.focusOption(prevIndex);\n      }\n    } else if (event.key === 'Escape') {\n      this.showTimes = false;\n      this.timeInput.focus();\n    }\n  }\n\n  private handleListboxKeydown(e: KeyboardEvent) {\n    const items = this.times;\n    const currentIndex = items.findIndex(item => item.id.toString() === this.ariaActivedescendant);\n\n    if (e.key === 'ArrowDown' || (e.key === 'Tab' && !e.shiftKey)) {\n      e.preventDefault();\n      const nextIndex = currentIndex + 1 < items.length ? currentIndex + 1 : 0;\n      this.ariaActivedescendant = items[nextIndex].id.toString();\n      this.focusOption(nextIndex);\n    } else if (e.key === 'ArrowUp' || (e.key === 'Tab' && e.shiftKey)) {\n      e.preventDefault();\n      const prevIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : items.length - 1;\n      this.ariaActivedescendant = items[prevIndex].id.toString();\n      this.focusOption(prevIndex);\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      if (this.ariaActivedescendant) {\n        const option = items[currentIndex];\n        this.handleTimeChange(e, option.value);\n        this.showTimes = false;\n        this.ariaActivedescendant = '';\n        this.timeInput.focus();\n      }\n    } else if (e.key === 'Escape') {\n      this.showTimes = false;\n      this.timeInput.focus();\n    }\n  }\n\n  scrollToViewWithinParent(optionIndex: number) {\n    const option = this.times[optionIndex];\n    const childElement = this.el.shadowRoot?.getElementById(option.id.toString()) as HTMLLIElement;\n    const parentElement = this.timeMenu;\n\n    this.ariaActivedescendant = option.id.toString();\n\n    // Scroll child into view within parent\n    const childRect = childElement.getBoundingClientRect();\n    const parentRect = parentElement.getBoundingClientRect();\n\n    if (childRect.top < parentRect.top) {\n      // Child is above the visible area of the parent\n      parentElement.scrollTop -= parentRect.top - childRect.top;\n    } else if (childRect.bottom > parentRect.bottom) {\n      // Child is below the visible area of the parent\n      parentElement.scrollTop += childRect.bottom - parentRect.bottom;\n    }\n\n    if (childRect.left < parentRect.left) {\n      // Child is to the left of the visible area of the parent\n      parentElement.scrollLeft -= parentRect.left - childRect.left;\n    } else if (childRect.right > parentRect.right) {\n      // Child is to the right of the visible area of the parent\n      parentElement.scrollLeft += childRect.right - parentRect.right;\n    }\n  }\n\n  focusOption(index: number) {\n    const option = this.times[index];\n    if (!option) return; // Guard clause in case index is out of bounds\n\n    const elementId = option.id.toString();\n    const element = this.el.shadowRoot?.getElementById(elementId) as HTMLLIElement;\n\n    if (element) {\n      element.focus(); // Set focus on the element\n      element.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"time-picker\" part=\"time-picker\">\n          <input\n            type=\"text\"\n            name={this.name}\n            id={this.name}\n            part=\"time-input\"\n            class={{\n              'time-input': true,\n              'error': !!this.err || this.hasError,\n            }}\n            ref={el => (this.timeInput = el as HTMLInputElement)}\n            value={this.time}\n            onClick={() => {\n              this.showTimes = true;\n              this.shouldAutoScroll = true;\n            }}\n            aria-haspopup=\"listbox\"\n            aria-label={this.name}\n            aria-expanded={this.showTimes ? 'true' : 'false'}\n            placeholder={this.placeholder}\n            onKeyDown={e => this.handleComboboxKeyDown(e)}\n            onInput={event => this.handleOnInput(event)}\n            onBlur={event => this.handleTimeAutocomplete(event)}\n          />\n          {this.err && <div class=\"invalid-time-icon\">{/* Icon here */}</div>}\n          {this.showTimes && (\n            <div class=\"times\" part=\"times\" ref={el => (this.timeMenu = el as HTMLElement)}>\n              <ul tabindex=\"-1\" role=\"listbox\" aria-label={this.name} aria-activedescendant={this.ariaActivedescendant} onKeyDown={e => this.handleListboxKeydown(e)}>\n                {this.times.map(option => (\n                  <li\n                    tabindex=\"0\"\n                    key={option.id}\n                    id={option.id.toString()}\n                    class={{\n                      focused: this.ariaActivedescendant === option.id.toString(),\n                    }}\n                    onClick={e => {\n                      this.handleTimeChange(e, option.value);\n                      this.showTimes = false;\n                      this.timeInput.focus();\n                    }}\n                    role=\"option\"\n                  >\n                    {`${option.value}`}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          {!this.showTimes && this.err && (\n            <p class=\"error\" id=\"email-error\">\n              {this.err}\n            </p>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"]}