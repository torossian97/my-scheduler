var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
import { RegisterComponent } from "../../../common/register-component";
import { debug } from "../../../utils/utils";
import { Host, h } from "@stencil/core";
export class NylasAdditionalParticipants {
    constructor() {
        this.name = 'participants';
        this.eventParticipants = undefined;
        this.participants = this.eventParticipants ?? [];
        this.participantsValid = true;
    }
    elementNameChangedHandler(newValue) {
        debug('nylas-additional-participants', 'elementNameChangedHandler', newValue);
        this.host.setAttribute('name', newValue);
    }
    connectedCallback() {
        debug('nylas-additional-participants', 'connectedCallback');
    }
    componentWillLoad() {
        debug('nylas-additional-participants', 'componentWillLoad');
        this.host.setAttribute('name', this.name);
    }
    componentDidLoad() {
        debug('nylas-additional-participants', 'componentDidLoad');
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    disconnectedCallback() {
        debug('nylas-additional-participants', 'disconnectedCallback');
    }
    onParticipantChange(event, index) {
        debug('nylas-additional-participants', 'onParticipantChange');
        this.participants[index].email = event.target.value;
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    addParticipant() {
        debug('nylas-additional-participants', 'addParticipant');
        this.participants = [...this.participants, { email: '', is_organizer: false, availability: { calendar_ids: ['primary'] } }];
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    removeParticipant(email) {
        debug('nylas-additional-participants', 'addParticipant');
        this.participants = this.participants.filter(p => p.email !== email);
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    validate(email, index) {
        debug('nylas-additional-participants', 'validate');
        const regex = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        const valid = regex.test(String(email).toLowerCase());
        this.participants[index].is_valid = valid;
        this.internals.setFormValue(JSON.stringify(this.participants), 'participants');
    }
    render() {
        return (h(Host, { key: '2cee2dd98939f98fdfc950f609fce3f6045ced9f' }, h("nylas-form-card", { key: 'e587c19e99fa1b40c9d876123fd50cde51e8882c' }, h("h3", { key: '6c4a90291f5918e98d62e03b599619ff4f345391', slot: "header-title", class: "nylas-additional-participants__title", part: "nap__title" }, "Additional participants"), h("p", { key: 'ad4fac5ca4cdb1430f889c723215d9a1538a266f', slot: "header-subtitle", class: "nylas-additional-participants__subtitle", part: "nap__subtitle" }, "Add anyone else who would be joining for this event."), h("div", { key: '80b29a9b1275363dac86274be18cc52210e59de7', slot: "content", class: "nylas-additional-participants__content" }, h("div", { key: '5adf8a7d2be8c780dbc5859b8b634efc114536c2' }, this.participants.map((participant, index) => {
            return (h("div", { class: 'nylas-additional-participants__input_group', part: "nap__input_group" }, h("label", null, participant.is_organizer ? 'Organizer' : `Participant ${index}`), h("div", { part: "nap__input_wrapper", class: `nylas-additional-participants__input_wrapper ${participant.is_organizer && 'nylas-additional-participants__input_wrapper_organizer'} ${participant.is_valid === false && 'nylas-additional-participants__input_wrapper_invalid'}` }, h("div", { class: "nylas-additional-participants__input", part: "nap__input" }, h("input", { type: "text", value: participant.email, onInput: e => {
                    this.onParticipantChange(e, index);
                }, readOnly: participant.is_organizer, onBlur: () => this.validate(participant.email, index) })), !participant.is_organizer && (h("button", { onClick: () => this.removeParticipant(participant.email), part: "nap__remove-participant" }, h("close-icon", null))))));
        }))))));
    }
    static get is() { return "nylas-additional-participants"; }
    static get encapsulation() { return "shadow"; }
    static get formAssociated() { return true; }
    static get originalStyleUrls() {
        return {
            "$": ["nylas-additional-participants.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["nylas-additional-participants.css"]
        };
    }
    static get properties() {
        return {
            "name": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "name",
                "reflect": false,
                "defaultValue": "'participants'"
            },
            "eventParticipants": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "Participant[]",
                    "resolved": "Participant[] | undefined",
                    "references": {
                        "Participant": {
                            "location": "global",
                            "id": "global::Participant"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                }
            }
        };
    }
    static get states() {
        return {
            "participants": {},
            "participantsValid": {}
        };
    }
    static get elementRef() { return "host"; }
    static get watchers() {
        return [{
                "propName": "name",
                "methodName": "elementNameChangedHandler"
            }];
    }
    static get attachInternalsMemberName() { return "internals"; }
}
__decorate([
    RegisterComponent({
        name: 'nylas-additional-participants',
        eventToProps: {},
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasAdditionalParticipants.prototype, "render", null);
//# sourceMappingURL=nylas-additional-participants.js.map
