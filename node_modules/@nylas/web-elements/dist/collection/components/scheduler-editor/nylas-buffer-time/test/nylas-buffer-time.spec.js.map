{"version":3,"file":"nylas-buffer-time.spec.js","sourceRoot":"","sources":["../../../../../src/components/scheduler-editor/nylas-buffer-time/test/nylas-buffer-time.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage } from '@stencil/core/testing';\nimport { NylasBufferTime } from '../nylas-buffer-time';\nimport { h } from '@stencil/core';\nimport { SelectDropdown } from '../../../design-system/select-dropdown/select-dropdown';\n\ndescribe('nylas-buffer-time', () => {\n  let nylasBufferTime: NylasBufferTime;\n  let page: any;\n  beforeEach(async () => {\n    page = await newSpecPage({\n      components: [NylasBufferTime, SelectDropdown],\n      template: () => {\n        return (\n          <nylas-buffer-time name=\"buffer-time\" buffer={{ before: 0, after: 0 }}>\n            <select-dropdown name=\"buffer-time\"></select-dropdown>\n          </nylas-buffer-time>\n        );\n      },\n    });\n    nylasBufferTime = page.rootInstance as NylasBufferTime;\n  });\n\n  it('renders', async () => {\n    expect(page.root).toMatchSnapshot();\n  });\n\n  it('renders default buffer time', async () => {\n    const beforeDropdown = page.root.shadowRoot.querySelector('.nylas-buffer-time select-dropdown#before-buffer-time');\n    const beforeButton = beforeDropdown.shadowRoot.querySelector('button');\n    expect(beforeButton.textContent).toBe('5');\n    const afterDropdown = page.root.shadowRoot.querySelector('.nylas-buffer-time select-dropdown#after-buffer-time');\n    const afterButton = afterDropdown.shadowRoot.querySelector('button');\n    expect(afterButton.textContent).toBe('5');\n  });\n\n  it('selects buffer time', async () => {\n    const spyEvent = jest.fn();\n    nylasBufferTime.valueChanged = {\n      emit: spyEvent,\n    };\n    const mockEvent = new CustomEvent('selectedOptionChanged', {\n      detail: { value: '30', name: 'before-buffer-time' },\n      bubbles: true,\n      composed: true,\n    });\n    nylasBufferTime.selectedOptionChangedHandler(mockEvent);\n    await page.waitForChanges();\n    expect(spyEvent).toHaveBeenCalled();\n  });\n\n  it('renders the before and after buffer time based on the buffer prop', async () => {\n    page = await newSpecPage({\n      components: [NylasBufferTime, SelectDropdown],\n      template: () => {\n        return (\n          <nylas-buffer-time name=\"buffer-time\" buffer={{ before: 30, after: 15 }}>\n            <select-dropdown name=\"buffer-time\"></select-dropdown>\n          </nylas-buffer-time>\n        );\n      },\n    });\n    nylasBufferTime = page.rootInstance as NylasBufferTime;\n    const beforeDropdown = page.root.shadowRoot.querySelector('.nylas-buffer-time select-dropdown#before-buffer-time');\n    const beforeButton = beforeDropdown.shadowRoot.querySelector('button');\n    expect(beforeButton.textContent).toBe('30');\n    const afterDropdown = page.root.shadowRoot.querySelector('.nylas-buffer-time select-dropdown#after-buffer-time');\n    const afterButton = afterDropdown.shadowRoot.querySelector('button');\n    expect(afterButton.textContent).toBe('15');\n  });\n});\n"]}