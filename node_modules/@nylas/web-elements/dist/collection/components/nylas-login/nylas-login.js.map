{"version":3,"file":"nylas-login.js","sourceRoot":"","sources":["../../../src/components/nylas-login/nylas-login.tsx"],"names":[],"mappings":"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","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { NylasAuthConnectorInterface } from '@/connector/connector-interface';\nimport { Component, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\nimport { ObservableMap } from '@stencil/store';\nimport { NylasAuthStoreState } from '../../components';\n\n@Component({\n  tag: 'nylas-login',\n  styleUrl: 'nylas-login.css',\n  shadow: true,\n})\nexport class NylasLogin {\n  @Prop() readonly isAuthenticated: boolean = false;\n  @Prop() readonly nylasConnector?: NylasAuthConnectorInterface;\n  @Prop() readonly scopes?: string[];\n  @Prop() readonly loginMethod: 'redirect' | 'emebded' = 'redirect';\n  @Prop() readonly companyName: string = 'Nylas';\n  @Prop() readonly logoUrl: string = 'https://www.nylas.com/wp-content/uploads/main-logo.svg';\n  @Prop() readonly logoWidth?: string = 'min-content';\n  @Prop() readonly providers?: string = 'google,microsoft';\n  @Prop() readonly buttonText: string = 'Login';\n\n  @Event() buttonClick!: EventEmitter<{ url?: string }>;\n\n  @State() email: string = '';\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  componentWillLoad() {}\n\n  async componentDidLoad() {\n    const exchangedToken = await this.nylasConnector?.auth.manageHostedAuthCodeExchange(window.location.href);\n    if (exchangedToken) {\n      // Remove the code query param from the user's browser url\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  }\n\n  private _handleLoginRedirect = async () => {\n    const url = await this.nylasConnector?.auth.getHostedAuthRedirectURL(this.scopes);\n\n    const event = this.buttonClick.emit({ url });\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (url) {\n      window.location.href = url;\n    }\n  };\n\n  private _onGoogleButtonClick = async (event: Event) => {\n    // Prevent the form from submitting\n    event.preventDefault();\n\n    const url = await this.nylasConnector?.auth.getHostedAuthRedirectURL(this.scopes, undefined, 'google');\n    if (url) {\n      window.location.href = url;\n    }\n  };\n\n  private _onMicrosoftButtonClick = async (event: Event) => {\n    // Prevent the form from submitting\n    event.preventDefault();\n\n    const url = await this.nylasConnector?.auth.getHostedAuthRedirectURL(this.scopes, undefined, 'microsoft');\n    if (url) {\n      window.location.href = url;\n    }\n  };\n\n  private _onFormSubmit = async (event: Event) => {\n    // Prevent the form from submitting\n    event.preventDefault();\n\n    const url = await this.nylasConnector?.auth.getHostedAuthRedirectURL(this.scopes, this.email);\n    if (url) {\n      window.location.href = url;\n    }\n  };\n\n  @RegisterComponent<\n    NylasLogin,\n    NylasAuthConnectorInterface,\n    {\n      auth: ObservableMap<NylasAuthStoreState>;\n    }\n  >({\n    name: 'nylas-login',\n    connectorToProp: 'nylasConnector',\n    stateToProps: new Map([['auth.isAuthenticated', 'isAuthenticated']]),\n    fireRegisterEvent: true,\n  })\n  render() {\n    const splitProviders = this.providers?.split(',') || [];\n    return (\n      <Host>\n        {this.loginMethod === 'redirect' && (\n          <div class=\"redirect-container\">\n            {!this.isAuthenticated && (\n              <sp-button part=\"button\" onClick={this._handleLoginRedirect}>\n                {this.buttonText}\n              </sp-button>\n            )}\n          </div>\n        )}\n        {this.loginMethod === 'emebded' && (\n          <main class=\"login-container\">\n            <section class=\"login-box\">\n              <header>\n                <img\n                  src={this.logoUrl}\n                  alt={`${this.companyName} logo`}\n                  width={'100%'}\n                  style={{\n                    minWidth: this.logoWidth,\n                  }}\n                />\n                <h1>Welcome</h1>\n              </header>\n              <p>Log in to your account to continue to {this.companyName}</p>\n              <div class=\"login-methods\">\n                {splitProviders.includes('google') && (\n                  <button class=\"login-google\" onClick={this._onGoogleButtonClick}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"18\" height=\"18\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 256 262\">\n                      <path fill=\"#4285F4\" d=\"M255.6 131.6c0-8.2-.8-16.2-2.2-23.9H130v45.3h70.3c-3 16.1-12.4 29.7-26.3 38.9v32.4h42.6c25-23 39.4-56.7 39.4-97.7z\" />\n                      <path\n                        fill=\"#34A853\"\n                        d=\"M130 262c35.3 0 64.9-11.7 86.5-31.7l-42.6-32.4c-11.7 7.9-26.7 12.6-43.9 12.6-33.7 0-62.3-22.7-72.5-53.4H14.5v33.3A130.3 130.3 0 00130 262z\"\n                      />\n                      <path fill=\"#FBBC05\" d=\"M57.5 158.1a72.7 72.7 0 010-54.2V70.6H14.5a130.4 130.4 0 000 120.8l43-33.3z\" />\n                      <path fill=\"#EA4335\" d=\"M130 51.6c19 0 36 6.5 49.4 19.2l37-36C195 13.1 165.2 0 130 0A130.3 130.3 0 0014.5 70.6l43 33.3c10.2-30.7 38.8-53.3 72.5-53.3z\" />\n                    </svg>\n                    Continue with Google\n                  </button>\n                )}\n                {splitProviders.includes('microsoft') && (\n                  <button class=\"login-microsoft\" onClick={this._onMicrosoftButtonClick}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" role=\"img\" width=\"18\" height=\"18\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 448 512\">\n                      <path fill=\"#F3F3F3\" d=\"M0 32v192h192V32H0zm256 0v192h192V32H256zm192 256v192h-192V288h192zM0 224v192h192V224H0z\" />\n                    </svg>\n                    Continue with Microsoft\n                  </button>\n                )}\n                {/* <button class=\"login-all\">View all providers</button> */}\n              </div>\n              <form class=\"login-form\" method=\"POST\" onSubmit={this._onFormSubmit}>\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" id=\"email\" name=\"email\" required value={this.email} />\n                <button type=\"submit\">Next</button>\n              </form>\n            </section>\n          </main>\n        )}\n      </Host>\n    );\n  }\n}\n"]}