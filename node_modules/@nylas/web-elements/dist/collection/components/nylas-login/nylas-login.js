var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
import { RegisterComponent } from "../../common/register-component";
import { Host, h } from "@stencil/core";
export class NylasLogin {
    constructor() {
        this._handleLoginRedirect = async () => {
            const url = await this.nylasConnector?.auth.getHostedAuthRedirectURL(this.scopes);
            const event = this.buttonClick.emit({ url });
            if (event.defaultPrevented) {
                return;
            }
            if (url) {
                window.location.href = url;
            }
        };
        this._onGoogleButtonClick = async (event) => {
            event.preventDefault();
            const url = await this.nylasConnector?.auth.getHostedAuthRedirectURL(this.scopes, undefined, 'google');
            if (url) {
                window.location.href = url;
            }
        };
        this._onMicrosoftButtonClick = async (event) => {
            event.preventDefault();
            const url = await this.nylasConnector?.auth.getHostedAuthRedirectURL(this.scopes, undefined, 'microsoft');
            if (url) {
                window.location.href = url;
            }
        };
        this._onFormSubmit = async (event) => {
            event.preventDefault();
            const url = await this.nylasConnector?.auth.getHostedAuthRedirectURL(this.scopes, this.email);
            if (url) {
                window.location.href = url;
            }
        };
        this.isAuthenticated = false;
        this.nylasConnector = undefined;
        this.scopes = undefined;
        this.loginMethod = 'redirect';
        this.companyName = 'Nylas';
        this.logoUrl = 'https://www.nylas.com/wp-content/uploads/main-logo.svg';
        this.logoWidth = 'min-content';
        this.providers = 'google,microsoft';
        this.buttonText = 'Login';
        this.email = '';
    }
    connectedCallback() { }
    disconnectedCallback() { }
    componentWillLoad() { }
    async componentDidLoad() {
        const exchangedToken = await this.nylasConnector?.auth.manageHostedAuthCodeExchange(window.location.href);
        if (exchangedToken) {
            window.history.replaceState({}, document.title, window.location.pathname);
        }
    }
    render() {
        const splitProviders = this.providers?.split(',') || [];
        return (h(Host, { key: '124b2f41ebcd01e13b0c031a1240120835610fbb' }, this.loginMethod === 'redirect' && (h("div", { class: "redirect-container" }, !this.isAuthenticated && (h("sp-button", { part: "button", onClick: this._handleLoginRedirect }, this.buttonText)))), this.loginMethod === 'emebded' && (h("main", { class: "login-container" }, h("section", { class: "login-box" }, h("header", null, h("img", { src: this.logoUrl, alt: `${this.companyName} logo`, width: '100%', style: {
                minWidth: this.logoWidth,
            } }), h("h1", null, "Welcome")), h("p", null, "Log in to your account to continue to ", this.companyName), h("div", { class: "login-methods" }, splitProviders.includes('google') && (h("button", { class: "login-google", onClick: this._onGoogleButtonClick }, h("svg", { xmlns: "http://www.w3.org/2000/svg", "aria-hidden": "true", role: "img", width: "18", height: "18", preserveAspectRatio: "xMidYMid meet", viewBox: "0 0 256 262" }, h("path", { fill: "#4285F4", d: "M255.6 131.6c0-8.2-.8-16.2-2.2-23.9H130v45.3h70.3c-3 16.1-12.4 29.7-26.3 38.9v32.4h42.6c25-23 39.4-56.7 39.4-97.7z" }), h("path", { fill: "#34A853", d: "M130 262c35.3 0 64.9-11.7 86.5-31.7l-42.6-32.4c-11.7 7.9-26.7 12.6-43.9 12.6-33.7 0-62.3-22.7-72.5-53.4H14.5v33.3A130.3 130.3 0 00130 262z" }), h("path", { fill: "#FBBC05", d: "M57.5 158.1a72.7 72.7 0 010-54.2V70.6H14.5a130.4 130.4 0 000 120.8l43-33.3z" }), h("path", { fill: "#EA4335", d: "M130 51.6c19 0 36 6.5 49.4 19.2l37-36C195 13.1 165.2 0 130 0A130.3 130.3 0 0014.5 70.6l43 33.3c10.2-30.7 38.8-53.3 72.5-53.3z" })), "Continue with Google")), splitProviders.includes('microsoft') && (h("button", { class: "login-microsoft", onClick: this._onMicrosoftButtonClick }, h("svg", { xmlns: "http://www.w3.org/2000/svg", "aria-hidden": "true", role: "img", width: "18", height: "18", preserveAspectRatio: "xMidYMid meet", viewBox: "0 0 448 512" }, h("path", { fill: "#F3F3F3", d: "M0 32v192h192V32H0zm256 0v192h192V32H256zm192 256v192h-192V288h192zM0 224v192h192V224H0z" })), "Continue with Microsoft"))), h("form", { class: "login-form", method: "POST", onSubmit: this._onFormSubmit }, h("label", { htmlFor: "email" }, "Email"), h("input", { type: "email", id: "email", name: "email", required: true, value: this.email }), h("button", { type: "submit" }, "Next")))))));
    }
    static get is() { return "nylas-login"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["nylas-login.css"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["nylas-login.css"]
        };
    }
    static get properties() {
        return {
            "isAuthenticated": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "is-authenticated",
                "reflect": false,
                "defaultValue": "false"
            },
            "nylasConnector": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "NylasAuthConnectorInterface",
                    "resolved": "NylasAuthConnectorInterface | undefined",
                    "references": {
                        "NylasAuthConnectorInterface": {
                            "location": "import",
                            "path": "@/connector/connector-interface",
                            "id": "src/connector/connector-interface.ts::NylasAuthConnectorInterface"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                }
            },
            "scopes": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "string[]",
                    "resolved": "string[] | undefined",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                }
            },
            "loginMethod": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'redirect' | 'emebded'",
                    "resolved": "\"emebded\" | \"redirect\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "login-method",
                "reflect": false,
                "defaultValue": "'redirect'"
            },
            "companyName": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "company-name",
                "reflect": false,
                "defaultValue": "'Nylas'"
            },
            "logoUrl": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "logo-url",
                "reflect": false,
                "defaultValue": "'https://www.nylas.com/wp-content/uploads/main-logo.svg'"
            },
            "logoWidth": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string | undefined",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "logo-width",
                "reflect": false,
                "defaultValue": "'min-content'"
            },
            "providers": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string | undefined",
                    "references": {}
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "providers",
                "reflect": false,
                "defaultValue": "'google,microsoft'"
            },
            "buttonText": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "attribute": "button-text",
                "reflect": false,
                "defaultValue": "'Login'"
            }
        };
    }
    static get states() {
        return {
            "email": {}
        };
    }
    static get events() {
        return [{
                "method": "buttonClick",
                "name": "buttonClick",
                "bubbles": true,
                "cancelable": true,
                "composed": true,
                "docs": {
                    "tags": [],
                    "text": ""
                },
                "complexType": {
                    "original": "{ url?: string }",
                    "resolved": "{ url?: string | undefined; }",
                    "references": {}
                }
            }];
    }
}
__decorate([
    RegisterComponent({
        name: 'nylas-login',
        connectorToProp: 'nylasConnector',
        stateToProps: new Map([['auth.isAuthenticated', 'isAuthenticated']]),
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasLogin.prototype, "render", null);
//# sourceMappingURL=nylas-login.js.map
