{"version":3,"file":"nylas-composer.js","sourceRoot":"","sources":["../../../../src/components/mailbox/nylas-composer/nylas-composer.tsx"],"names":[],"mappings":"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","sourcesContent":["import { debug } from '@/utils/utils';\nimport { Message } from '@nylas/core';\nimport { Component, Event, EventEmitter, Element, Prop, Watch, h, Host } from '@stencil/core';\n\n@Component({\n  tag: 'nylas-composer',\n  styleUrl: 'nylas-composer.scss',\n  shadow: true,\n})\nexport class NylasComposer {\n  /**\n   * The host element\n   */\n  @Element() readonly host!: HTMLElement;\n\n  /**\n   * The message to reply to or forward\n   */\n  @Prop() readonly message?: Message;\n\n  /**\n   * The view email element\n   */\n  @Prop() readonly viewEmailElement?: HTMLNylasViewEmailElement | null;\n\n  /**\n   * Fired when the composer is closed\n   */\n  @Event() readonly close!: EventEmitter<MouseEvent>;\n\n  /**\n   * Fired when the send button is clicked\n   */\n  @Event() readonly send!: EventEmitter<{\n    message: Message;\n    replyBody: string;\n  }>;\n\n  /**\n   * The editor element\n   */\n  private editorEl?: HTMLDivElement;\n\n  /**\n   * The toolbar element\n   */\n  private toolbarEl?: HTMLDivElement;\n\n  connectedCallback() {}\n\n  disconnectedCallback() {\n    if (this.editorEl) {\n      this.editorEl.innerHTML = '';\n    }\n  }\n\n  componentWillLoad() {}\n\n  async componentDidLoad() {\n    if (this.message) {\n      this.watchBody(this.message);\n    }\n\n    if (!this.editorEl) {\n      debug('[connectedCallback] no editor element');\n      return;\n    }\n\n    if (!this.toolbarEl) {\n      debug('[connectedCallback] no toolbar element');\n      return;\n    }\n\n    const editorEl = this.editorEl;\n    const toolbarEl = this.toolbarEl;\n\n    // On highlight, show the toolbar\n    editorEl.addEventListener('mouseup', _ => {\n      interface ShadowRootWithSelection extends ShadowRoot {\n        getSelection(): Selection | null;\n      }\n\n      const selection: Selection | null = (this.host.shadowRoot as ShadowRootWithSelection)?.getSelection();\n      if (!selection) {\n        debug('no selection');\n        return;\n      }\n\n      // Get range\n      const range = selection.getRangeAt(0);\n\n      // Get text selection\n      const text = selection.toString();\n      if (!text) {\n        toolbarEl.style.display = 'none';\n        return;\n      }\n\n      // Find .message-body in the editor\n      const messageBody = editorEl.querySelector('.message-body');\n      if (!messageBody) {\n        debug('no message body');\n        return;\n      }\n\n      // Get commonAncestorContainer\n      const foundNode = range.commonAncestorContainer;\n\n      // Get rect\n      const foundElement = foundNode.parentElement;\n\n      // If we didn't find the text, then don't show the toolbar\n      if (!foundElement) {\n        return;\n      }\n\n      // Get the bounding rect of the message body\n      const messageBodyRect = messageBody.getBoundingClientRect();\n      debug('messageBodyRect', { messageBodyRect });\n\n      const foundRect = foundElement.getBoundingClientRect();\n      debug('foundRect', { foundRect });\n\n      // Find the text position within the found node\n      // without using document.createRange()\n\n      // Get the text node\n      const textNode = foundElement.childNodes[0];\n\n      // Get the text content\n      const textContent = textNode.textContent || '';\n\n      // Get the text position\n      const textPosition = textContent.indexOf(text);\n\n      // Calcualte the font width\n      const fontSize = window.getComputedStyle(foundElement).fontSize;\n      const fontSizeNumber = parseInt(fontSize.replace('px', ''), 10);\n\n      // Top\n      const top = foundRect.top - messageBodyRect.top - toolbarEl.clientHeight;\n      const left = textPosition * (1 / fontSizeNumber) * 100;\n\n      // Position the toolbar\n      toolbarEl.style.top = `${top}px`;\n      toolbarEl.style.left = `${left}px`;\n      toolbarEl.style.display = 'block';\n    });\n  }\n\n  @Watch('message')\n  watchBody(newMessage: Message) {\n    if (!this.editorEl) {\n      debug('no editor element');\n      return;\n    }\n\n    // Find .message-body elements and remove them\n    this.editorEl.querySelectorAll('.message-body').forEach(el => el.remove());\n\n    // Create a container for the body of the reply\n    const messageBody = document.createElement('div');\n    messageBody.classList.add('message-body');\n\n    // Add an empty paragraph to the reply body\n    const emptyParagraph = document.createElement('p');\n    emptyParagraph.innerHTML = '&nbsp;';\n    messageBody.appendChild(emptyParagraph);\n\n    // Also add a break to separate the reply from the rest of the email\n    const br = document.createElement('br');\n    messageBody.appendChild(br);\n\n    // Append a reply header\n    const replyText = document.createElement('div');\n    replyText.classList.add('reply-text');\n    replyText.innerText = `On ${new Date(newMessage.date * 1000).toLocaleDateString(undefined, { dateStyle: 'full' })} <${newMessage.from\n      ?.map(from => from.name || from.email)\n      .join(', ')}> wrote:`;\n    messageBody.appendChild(replyText);\n\n    // If we have a reply body, separate the contents with a horizontal rule\n    if (newMessage.body) {\n      // For the reply HTML, we want to wrap the contents in a custom element\n      // with a shadow root. This will allow us to style the contents of the\n      // reply without affecting the rest of the page.\n\n      // First convert the HTML string to a DOM element\n      const replyElement = document.createElement('html');\n      replyElement.innerHTML = newMessage.body;\n\n      const replyContainer = document.createElement('blockquote');\n      replyContainer.classList.add('collapsed');\n      replyContainer.classList.add('gmail_quote');\n\n      // Now add the reply element to the container\n      replyContainer.innerHTML = replyElement.innerHTML;\n\n      messageBody.appendChild(replyContainer);\n\n      debug('replyContainer', { replyContainer });\n    }\n\n    // Add the message body to the editor\n    this.editorEl.appendChild(messageBody);\n\n    this.editorEl.querySelectorAll('blockquote.collapsed').forEach(blockquote => {\n      blockquote.addEventListener(\n        'click',\n        function (event) {\n          event.preventDefault();\n          const el = event.target as HTMLElement;\n          el.classList.remove('collapsed');\n          el.classList.add('expanded');\n        },\n        { once: true },\n      );\n    });\n\n    // Focus the editor\n    this.editorEl.focus();\n  }\n\n  private closeComposer = (event: MouseEvent) => {\n    this.close.emit(event);\n  };\n\n  private sendComposer = (event: MouseEvent) => {\n    if (!this.editorEl) {\n      debug('no editor element');\n      return;\n    }\n\n    const messageBody = this.editorEl.querySelector('.message-body');\n    if (!messageBody) {\n      debug('no message body');\n      return;\n    }\n\n    // Send the message\n    if (this.message) {\n      this.send.emit({\n        message: this.message,\n        replyBody: messageBody.querySelector('.message-body')?.innerHTML || '',\n      });\n\n      // Close the composer\n      this.close.emit(event);\n\n      // Clear the editor\n      this.editorEl.innerHTML = '';\n    }\n  };\n\n  render() {\n    return (\n      <Host>\n        <sp-theme scale=\"medium\" color=\"dark\">\n          <div class=\"editor\" contentEditable={true} ref={r => (this.editorEl = r)}>\n            <div class=\"toolbar\" ref={r => (this.toolbarEl = r)} contentEditable={false}>\n              <sp-button quiet onClick={() => document.execCommand('bold')}>\n                <div slot=\"icon\">\n                  <bold-icon></bold-icon>\n                </div>\n                <div slot=\"label\">Bold</div>\n              </sp-button>\n              <sp-button quiet onClick={() => document.execCommand('underline')}>\n                <div slot=\"icon\">\n                  <underline-icon></underline-icon>\n                </div>\n                <div slot=\"label\">Underline</div>\n              </sp-button>\n              <sp-button quiet onClick={() => document.execCommand('italic')}>\n                <div slot=\"icon\">\n                  <italic-icon></italic-icon>\n                </div>\n                <div slot=\"label\">Italic</div>\n              </sp-button>\n            </div>\n          </div>\n          <div class={'buttons'}>\n            <sp-button onClick={this.sendComposer} class=\"send\">\n              Send\n            </sp-button>\n            <sp-button onClick={this.closeComposer} class=\"close\">\n              Close\n            </sp-button>\n          </div>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n"]}