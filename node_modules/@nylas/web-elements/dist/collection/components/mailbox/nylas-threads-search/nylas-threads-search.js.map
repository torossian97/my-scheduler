{"version":3,"file":"nylas-threads-search.js","sourceRoot":"","sources":["../../../../src/components/mailbox/nylas-threads-search/nylas-threads-search.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,6BAA6B,CAAC;AAChE,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AACtC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAgB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAS5F,MAAM,OAAO,kBAAkB;;QAsCrB,aAAQ,GAAG,KAAK,EAAE,KAAY,EAAE,EAAE;YACxC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,MAAM,MAAM,GAAG,KAAK,CAAC,MAA0B,CAAC;YAChD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAE3B,IAAI,KAAK,KAAK,IAAI,CAAC,aAAa,EAAE,CAAC;gBACjC,OAAO;YACT,CAAC;YAED,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvC,CAAC,CAAC;qBA/C+B,EAAE;6BAUF,EAAE;;IAEnC,iBAAiB,KAAI,CAAC;IAEtB,oBAAoB,KAAI,CAAC;IAEzB,KAAK,CAAC,iBAAiB;QACrB,KAAK,CAAC,4CAA4C,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,KAAK,CAAC,2CAA2C,CAAC,CAAC;IACrD,CAAC;IAGD,aAAa;QACX,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;IAClC,CAAC;IAmCD,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACH,iEAAU,KAAK,EAAC,QAAQ,EAAC,KAAK,EAAC,MAAM;gBACnC,kEAAW,KAAK,QAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,GAAc,CAC/F,CACN,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AATC;IAbC,iBAAiB,CAAwF;QACxG,IAAI,EAAE,kBAAkB;QACxB,YAAY,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC,CAAC;QACzD,YAAY,EAAE;YACZ,MAAM,EAAE,KAAK,EAAE,MAA2B,EAAE,cAAqC,EAAE,EAAE;gBACnF,MAAM,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC;oBACtC,mBAAmB,EAAE,MAAM,CAAC,MAAM,IAAI,SAAS;oBAC/C,UAAU,EAAE,SAAS;iBACtB,CAAC,CAAC;YACL,CAAC;SACF;QACD,iBAAiB,EAAE,IAAI;KACxB,CAAC;;;;gDASD","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { debug } from '@/utils/utils';\nimport { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasMailboxConnector } from '../../..';\nimport { NylasMailbox } from '../nylas-mailbox/nylas-mailbox';\n\n@Component({\n  tag: 'nylas-threads-search',\n  styleUrl: 'nylas-threads-search.scss',\n  shadow: true,\n})\nexport class NylasThreadsSearch {\n  /**\n   * The query to search for threads\n   */\n  @Prop() readonly query: string = '';\n\n  /**\n   * Event emitted when the query changes\n   */\n  @Event() readonly search!: EventEmitter<string>;\n\n  /**\n   * A copy of the query that is used internally, we can mutate this.\n   */\n  @State() internalQuery: string = '';\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  async componentWillLoad() {\n    debug(`[nylas-threads-search] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-threads-search] Component did load`);\n  }\n\n  @Watch('query')\n  onQueryChange() {\n    this.internalQuery = this.query;\n  }\n\n  /**\n   * On search event\n   * @param event On blur event\n   * @returns void\n   */\n  private onSearch = async (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n\n    if (value === this.internalQuery) {\n      return;\n    }\n\n    this.internalQuery = value;\n    this.search.emit(this.internalQuery);\n  };\n\n  @RegisterComponent<NylasThreadsSearch, NylasMailboxConnector, Exclude<NylasMailbox['stores'], undefined>>({\n    name: 'nylas-pagination',\n    stateToProps: new Map([['mailbox.searchQuery', 'query']]),\n    eventToProps: {\n      search: async (_event: CustomEvent<string>, nylasConnector: NylasMailboxConnector) => {\n        await nylasConnector.threads.getThreads({\n          search_query_native: _event.detail || undefined,\n          page_token: undefined,\n        });\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <sp-theme scale=\"medium\" color=\"dark\">\n          <sp-search quiet onSubmit={this.onSearch} onBlur={this.onSearch} value={this.internalQuery}></sp-search>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n"]}