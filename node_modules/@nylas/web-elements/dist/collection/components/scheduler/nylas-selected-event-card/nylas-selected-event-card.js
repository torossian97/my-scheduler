var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
import { RegisterComponent } from "../../../common/register-component";
import { h, Host } from "@stencil/core";
import { debug } from "../../../utils/utils";
import { TIMEZONE_MAP } from "../../../common/constants";
export class NylasSelectedEventCard {
    constructor() {
        this.selectedDate = undefined;
        this.selectedTimeslot = undefined;
        this.selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
        this.startTime = '';
        this.endTime = '';
    }
    connectedCallback() { }
    disconnectedCallback() { }
    async componentWillLoad() {
        debug(`[nylas-selected-event-card] Component will load`);
    }
    async componentDidLoad() {
        debug(`[nylas-selected-event-card] Component did load`);
    }
    handleSelectedTimeslotChange(selectedTimeslot) {
        this.startTime = new Date(selectedTimeslot?.start_time).toLocaleString(undefined, { timeStyle: 'short' });
        this.endTime = new Date(selectedTimeslot?.end_time).toLocaleString(undefined, { timeStyle: 'short' });
    }
    render() {
        return (h(Host, { key: 'c84565db48fc177fd6f8af71db7f9776516cf46f', part: "nsec" }, h("sp-theme", { key: '7de2e148c85b878e735ac6a69a62892110de9b65', theme: "spectrum", color: "dark", scale: "medium" }, h("div", { key: '0a9f43a55c68fdd7d93b42600b94e2f10d551dd4', class: "event-card", part: "nsec__card" }, h("div", { key: '18b16b39d4c3d7c1a0f9c16c084d99f1b9b9ff5b', class: "calendar-icon", part: "nsec__icon" }, h("calendar-icon", { key: '92202409a7e922975ab31216d8f68c3fb8767cbe' })), h("div", { key: '79006fdf073ed56acec50e1e11ddf101fcfca81c', class: "nylas-selected-event-card__date", part: "nsec__date" }, this.selectedDate?.toLocaleDateString(undefined, { dateStyle: 'full' })), h("div", { key: '1f605b2bc03f290b5a5b3ac858256f438ac33651', class: "nylas-selected-event-card__time", part: "nsec__time" }, this.startTime, " - ", this.endTime)), h("div", { key: '03f9f64e0229904519984305751c388886838b99', class: "event-timezone", part: "nsec__timezone" }, h("globe-icon", { key: '7bd33f03d96671423199113ee24fe913f78c1bca' }), TIMEZONE_MAP[this.selectedTimezone]))));
    }
    static get is() { return "nylas-selected-event-card"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["nylas-selected-event-card.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["nylas-selected-event-card.css"]
        };
    }
    static get properties() {
        return {
            "selectedDate": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "Date",
                    "resolved": "Date | undefined",
                    "references": {
                        "Date": {
                            "location": "global",
                            "id": "global::Date"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "The selected date."
                }
            },
            "selectedTimeslot": {
                "type": "unknown",
                "mutable": false,
                "complexType": {
                    "original": "Timeslot",
                    "resolved": "undefined | { start_time: Date; end_time: Date; }",
                    "references": {
                        "Timeslot": {
                            "location": "import",
                            "path": "@nylas/core",
                            "id": "../nylas-js-core/dist/index.d.ts::Timeslot"
                        }
                    }
                },
                "required": false,
                "optional": true,
                "docs": {
                    "tags": [],
                    "text": "The selected time."
                }
            },
            "selectedTimezone": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "*\nThe selected timezone."
                },
                "attribute": "selected-timezone",
                "reflect": false,
                "defaultValue": "Intl.DateTimeFormat().resolvedOptions().timeZone"
            }
        };
    }
    static get states() {
        return {
            "startTime": {},
            "endTime": {}
        };
    }
    static get watchers() {
        return [{
                "propName": "selectedTimeslot",
                "methodName": "handleSelectedTimeslotChange"
            }];
    }
}
__decorate([
    RegisterComponent({
        name: 'nylas-selected-event-card',
        stateToProps: new Map([
            ['scheduler.selectedDate', 'selectedDate'],
            ['scheduler.selectedTimeslot', 'selectedTimeslot'],
            ['scheduler.selectedTimezone', 'selectedTimezone'],
        ]),
        eventToProps: {},
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasSelectedEventCard.prototype, "render", null);
//# sourceMappingURL=nylas-selected-event-card.js.map
