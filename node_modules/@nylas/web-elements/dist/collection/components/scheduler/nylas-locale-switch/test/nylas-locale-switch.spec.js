import { newSpecPage } from "@stencil/core/testing";
import { NylasLocaleSwitch } from "../nylas-locale-switch";
import { SelectDropdown } from "../../../design-system/select-dropdown/select-dropdown";
describe('nylas-locale-switch', () => {
    beforeEach(() => {
        jest.clearAllMocks();
    });
    it('renders with default selected language and timezone', async () => {
        const page = await newSpecPage({
            components: [NylasLocaleSwitch, SelectDropdown],
            html: `<nylas-locale-switch selected-language="English" selected-timezone="America / New York"></nylas-locale-switch>`,
        });
        expect(page.root).toMatchSnapshot();
        expect(page.rootInstance.selectedLanguage).toBe('English');
        expect(page.rootInstance.selectedTimezone).toBe('America / New York');
    });
    it('selects timezone', async () => {
        const page = await newSpecPage({
            components: [NylasLocaleSwitch, SelectDropdown],
            html: `<nylas-locale-switch selected-timezone="America / New York"></nylas-locale-switch>`,
        });
        const spyEvent = jest.fn();
        page.win.addEventListener('timezoneChanged', spyEvent);
        await page.waitForChanges();
        const timezoneSelectDropdown = page?.root?.shadowRoot?.querySelector('.timezone select-dropdown');
        const timezoneDropdownShadowRoot = timezoneSelectDropdown.shadowRoot;
        timezoneDropdownShadowRoot?.querySelector('button')?.click();
        await page.waitForChanges();
        const option = timezoneDropdownShadowRoot?.querySelector('li');
        option?.click();
        await page.waitForChanges();
        expect(option?.textContent).toContain(timezoneDropdownShadowRoot?.querySelector('button')?.textContent);
    });
    it('selects language', async () => {
        const page = await newSpecPage({
            components: [NylasLocaleSwitch, SelectDropdown],
            html: `<nylas-locale-switch></nylas-locale-switch>`,
        });
        const spyEvent = jest.fn();
        page.win.addEventListener('languageChanged', spyEvent);
        await page.waitForChanges();
        const langSelectDropdown = page?.root?.shadowRoot?.querySelector('.language select-dropdown');
        const langSelectDropdownShadowRoot = langSelectDropdown.shadowRoot;
        langSelectDropdownShadowRoot?.querySelector('button')?.click();
        await page.waitForChanges();
        const option = langSelectDropdownShadowRoot?.querySelector('li');
        option?.click();
        await page.waitForChanges();
        expect(langSelectDropdownShadowRoot?.querySelector('button')?.textContent).toEqual(option?.innerHTML);
    });
});
//# sourceMappingURL=nylas-locale-switch.spec.js.map
