{"version":3,"file":"nylas-cancel-booking-form.js","sourceRoot":"","sources":["../../../../src/components/scheduler/nylas-cancel-booking-form/nylas-cancel-booking-form.tsx"],"names":[],"mappings":"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","sourcesContent":["import { RegisterComponent } from '@/common/register-component';\nimport { Component, Event, EventEmitter, h, Host, Prop, State } from '@stencil/core';\nimport { NylasSchedulerConnector } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\nimport { debug } from '@/utils/utils';\nimport { Notification, NylasSchedulerErrorResponse } from '@nylas/core';\n\n/**\n * The `nylas-cancel-booking-form` component is a UI component that allows users to cancel a booking.\n */\n@Component({\n  tag: 'nylas-cancel-booking-form',\n  styleUrl: 'nylas-cancel-booking-form.scss',\n  shadow: true,\n})\nexport class NylasCancelBookingForm {\n  /**\n   * The booking ID to cancel.\n   */\n  @Prop() readonly cancelBookingId!: string;\n\n  /**\n   * This event is fired when the Go back button is clicked on the cancel booking form.\n   */\n  @Event() readonly goBackButtonClicked!: EventEmitter<void>;\n\n  /**\n   * This event is fired when the cancel booking form is submitted.\n   */\n  @Event() readonly cancelBookingFormSubmitted!: EventEmitter<{ bookingId: string; reason: string; errorHandler?: (error: NylasSchedulerErrorResponse) => void }>;\n\n  /**\n   * This event is fired when an error occurs while cancelling the booking.\n   */\n  @Event() readonly cancelBookedEventError!: EventEmitter<NylasSchedulerErrorResponse>;\n\n  /**\n   * This event is fired when an error occurs in the booking form.\n   */\n  @Event() cancelBookingFormError!: EventEmitter<Partial<Notification>>;\n\n  /**\n   * The reason for cancellation.\n   */\n  @State() cancellationReason: string = '';\n\n  @State() cancellationError: string = '';\n\n  connectedCallback() {\n    debug(`[nylas-cancel-booking-form] Component connected`);\n  }\n\n  async componentWillLoad() {\n    debug(`[nylas-cancel-booking-form] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-cancel-booking-form] Component did load`);\n  }\n\n  disconnectedCallback() {\n    debug(`[nylas-cancel-booking-form] Component disconnected`);\n  }\n\n  private handleGoBackClicked = () => {\n    this.goBackButtonClicked.emit();\n  };\n\n  private handleSubmitCancelBooking = (event: Event) => {\n    event.preventDefault();\n    if (!this.cancellationReason) {\n      this.cancellationError = 'Please provide a reason for cancellation.';\n      this.cancelBookingFormError.emit({ title: 'Cancel booking form error', description: 'Please provide a reason for cancellation.' });\n      return;\n    }\n\n    debug(`[nylas-cancel-booking-form] Cancel booking form submitted with reason: ${this.cancellationReason}`);\n    const errorHandler = (error: NylasSchedulerErrorResponse) => {\n      this.cancelBookedEventError.emit(error);\n    };\n    this.cancelBookingFormSubmitted.emit({ bookingId: this.cancelBookingId, reason: this.cancellationReason, errorHandler });\n  };\n\n  private handleOnChangeCancellationReason = (event: Event) => {\n    this.cancellationError = '';\n    this.cancellationReason = (event.target as HTMLInputElement).value;\n  };\n\n  @RegisterComponent<NylasCancelBookingForm, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-cancel-booking-form',\n    eventToProps: {\n      cancelBookingFormSubmitted: async (\n        event: CustomEvent<{ bookingId: string; reason: string; errorHandler?: (error: NylasSchedulerErrorResponse) => void }>,\n        nylasSchedulerConnector: NylasSchedulerConnector,\n      ) => {\n        const result = await nylasSchedulerConnector.scheduler.cancelBooking(event.detail.bookingId);\n        const { errorHandler } = event.detail;\n        if (errorHandler && (!result || 'error' in result)) {\n          errorHandler(result);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host part=\"ncec\">\n        <sp-theme theme=\"spectrum\" scale=\"medium\">\n          <div class=\"nylas-cancel-booking-form\" part=\"ncec__card\">\n            <div class=\"nylas-cancel-booking-form__calendar-icon\" part=\"ncec__icon\">\n              <calendar-cancel-icon />\n            </div>\n            <h3 class=\"nylas-cancel-booking-form__title\" part=\"ncec__title\">\n              Cancel booking?\n            </h3>\n            <div class=\"nylas-cancel-booking-form__description\" part=\"ncec__description\">\n              Your current timeslot will become available to others.\n            </div>\n            <form onSubmit={this.handleSubmitCancelBooking}>\n              <sp-field-label for=\"cancel-reason\" class={this.cancellationError ? 'error' : ''}>\n                Reason for cancellation <span class=\"required\">*</span>\n              </sp-field-label>\n              <sp-textfield\n                id=\"cancel-reason\"\n                class={this.cancellationError ? 'error' : ''}\n                part=\"ncec__reason-textarea\"\n                multiline\n                value={this.cancellationReason}\n                onInput={this.handleOnChangeCancellationReason}\n                onFocus={this.handleOnChangeCancellationReason}\n                invalid={!!this.cancellationError}\n              >\n                <sp-help-text slot=\"negative-help-text\">{this.cancellationError}</sp-help-text>\n              </sp-textfield>\n              <sp-button variant=\"primary\" class=\"cancel\" type=\"submit\" part=\"ncec__button-cta\">\n                Cancel booking\n              </sp-button>\n              <sp-button variant=\"secondary\" class=\"back\" treatment=\"outline\" part=\"ncec__button-outline\" onClick={this.handleGoBackClicked}>\n                Go back\n              </sp-button>\n            </form>\n          </div>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n"]}