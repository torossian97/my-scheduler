import { debug } from "../../utils/utils";
import { NylasAuthConnector } from "../shared/api/auth";
import { NylasMessagesConnector } from "../shared/api/messages";
import { NylasThreadsConnector } from "../shared/api/threads";
import { NylasFoldersConnector } from "../shared/api/folders";
export class NylasMailboxConnector {
    constructor(router, nylasAuth, nylasAuthStore, nylasStore) {
        this.router = router;
        this.nylasAuth = nylasAuth;
        this.nylasAuthStore = nylasAuthStore;
        this.nylasMailboxStore = nylasStore;
    }
    init() {
        debug('NylasMailboxConnector init');
    }
    get mailboxStore() {
        return this.nylasMailboxStore;
    }
    get authStore() {
        return this.nylasAuthStore;
    }
    get auth() {
        if (this._authConnector) {
            return this._authConnector;
        }
        this._authConnector = new NylasAuthConnector(this.nylasAuth, this.nylasAuthStore);
        return this._authConnector;
    }
    get threads() {
        if (this._threadConnector) {
            return this._threadConnector;
        }
        this._threadConnector = new NylasThreadsConnector(this.nylasAuth, this.nylasAuthStore, this.nylasMailboxStore, this.router);
        return this._threadConnector;
    }
    get messages() {
        if (this._messageConnector) {
            return this._messageConnector;
        }
        this._messageConnector = new NylasMessagesConnector(this.nylasAuth, this.nylasAuthStore, this.nylasMailboxStore);
        return this._messageConnector;
    }
    get folders() {
        if (this._foldersConnector) {
            return this._foldersConnector;
        }
        this._foldersConnector = new NylasFoldersConnector(this.nylasAuth, this.nylasAuthStore, this.nylasMailboxStore);
        return this._foldersConnector;
    }
    getAuth() {
        return this.nylasAuth;
    }
    resetStores() {
        this.nylasMailboxStore.reset();
        this.nylasAuthStore.reset();
    }
    async logout() {
        await this.nylasAuth.logout();
        this.resetStores();
    }
}
//# sourceMappingURL=index.js.map
