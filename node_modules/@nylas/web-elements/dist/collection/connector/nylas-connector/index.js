import { debug } from "../../utils/utils";
import { NylasAuthConnector } from "../shared/api/auth";
import { NylasFoldersConnector } from "../shared/api/folders";
import { NylasMessagesConnector } from "../shared/api/messages";
import { NylaSchedulerAPIConnector } from "../shared/api/scheduler";
import { NylasThreadsConnector } from "../shared/api/threads";
export class NylasConnector {
    constructor(router, nylasAuth, nylasAuthStore, nylasMailboxStore, nylasSchedulerStore, nylasSchedulerConfigStore, schedulerAPIURL = 'https://api.us.nylas.com') {
        this.router = router;
        this.schedulerAPIURL = schedulerAPIURL;
        this.nylasAuth = nylasAuth;
        this.nylasAuthStore = nylasAuthStore;
        this.nylasMailboxStore = nylasMailboxStore;
        this.nylasSchedulerStore = nylasSchedulerStore;
        this.nylasSchedulerConfigStore = nylasSchedulerConfigStore;
    }
    init() {
        debug('NylasConnector init');
    }
    get authStore() {
        return this.nylasAuthStore;
    }
    get mailboxStore() {
        return this.nylasMailboxStore;
    }
    get schedulerStore() {
        return this.nylasSchedulerStore;
    }
    get schedulerConfigStore() {
        return this.nylasSchedulerConfigStore;
    }
    get auth() {
        if (this._authConnector) {
            return this._authConnector;
        }
        this._authConnector = new NylasAuthConnector(this.nylasAuth, this.nylasAuthStore);
        return this._authConnector;
    }
    get threads() {
        if (this._threadConnector) {
            return this._threadConnector;
        }
        this._threadConnector = new NylasThreadsConnector(this.nylasAuth, this.nylasAuthStore, this.nylasMailboxStore, this.router);
        return this._threadConnector;
    }
    get messages() {
        if (this._messageConnector) {
            return this._messageConnector;
        }
        this._messageConnector = new NylasMessagesConnector(this.nylasAuth, this.nylasAuthStore, this.nylasMailboxStore);
        return this._messageConnector;
    }
    get folders() {
        if (this._foldersConnector) {
            return this._foldersConnector;
        }
        this._foldersConnector = new NylasFoldersConnector(this.nylasAuth, this.nylasAuthStore, this.nylasMailboxStore);
        return this._foldersConnector;
    }
    get scheduler() {
        if (this._schedulerAPIConnector) {
            return this._schedulerAPIConnector;
        }
        this._schedulerAPIConnector = new NylaSchedulerAPIConnector({
            schedulerAPIURL: this.schedulerAPIURL,
            schedulerStore: this.schedulerStore,
        });
        return this._schedulerAPIConnector;
    }
    getAuth() {
        return this.nylasAuth;
    }
    resetStores() {
        this.nylasAuthStore.reset();
        this.nylasMailboxStore.reset();
    }
    async logout() {
        await this.nylasAuth.logout();
        this.resetStores();
    }
}
//# sourceMappingURL=index.js.map
