import { debug } from "../../utils/utils";
import { NylaSchedulerAPIConnector } from "../shared/api/scheduler";
export class NylasSchedulerConnector {
    constructor({ schedulerAPIURL, nylasSchedulerStore, sessionId, configId }) {
        if (!schedulerAPIURL) {
            throw new Error('schedulerAPIURL is required');
        }
        if (!nylasSchedulerStore) {
            throw new Error('nylasSchedulerStore is required');
        }
        if (!sessionId && !configId) {
            throw new Error('sessionId is required for private configs, if not config id is required for public configs');
        }
        if (schedulerAPIURL === '/') {
            const url = new URL(window.location.href);
            schedulerAPIURL = url.origin;
        }
        this.configId = configId;
        this.sessionId = sessionId;
        this.schedulerAPIURL = schedulerAPIURL;
        this.nylasSchedulerStore = nylasSchedulerStore;
    }
    init() {
        debug('NylasConnector init');
    }
    get schedulerStore() {
        return this.nylasSchedulerStore;
    }
    get scheduler() {
        if (this._schedulerAPIConnector) {
            return this._schedulerAPIConnector;
        }
        this._schedulerAPIConnector = new NylaSchedulerAPIConnector({
            schedulerAPIURL: this.schedulerAPIURL,
            schedulerStore: this.schedulerStore,
            sessionId: this.sessionId,
            configId: this.configId,
        });
        return this._schedulerAPIConnector;
    }
    resetStores() {
        this.nylasSchedulerStore.reset();
    }
}
//# sourceMappingURL=index.js.map
