export var ErrorCategory;
(function (ErrorCategory) {
    ErrorCategory["Component"] = "component";
    ErrorCategory["Api"] = "api";
    ErrorCategory["Auth"] = "auth";
})(ErrorCategory || (ErrorCategory = {}));
export var ComponentErrorType;
(function (ComponentErrorType) {
    ComponentErrorType["endtime_not_in_future"] = "endtime_not_in_future";
    ComponentErrorType["no_booking_info"] = "no_booking_info";
    ComponentErrorType["no_timeslot_selected"] = "no_timeslot_selected";
    ComponentErrorType["no_timezone_selected"] = "no_timezone_selected";
    ComponentErrorType["no_booking_id"] = "no_booking_id";
    ComponentErrorType["invalid_start_time"] = "invalid_start_time";
    ComponentErrorType["invalid_end_time"] = "invalid_end_time";
    ComponentErrorType["invalid_timezone"] = "invalid_timezone";
})(ComponentErrorType || (ComponentErrorType = {}));
export var APIErrorType;
(function (APIErrorType) {
    APIErrorType["invalid_session"] = "invalid_session";
    APIErrorType["general_error"] = "general_error";
    APIErrorType["internal_error"] = "internal_error";
    APIErrorType["invalid_request_error"] = "invalid_request_error";
    APIErrorType["timeslot_not_available"] = "timeslot_not_available";
})(APIErrorType || (APIErrorType = {}));
export class Errors {
    constructor() {
        this.component = (_title) => {
            const category = ErrorCategory.Component;
            const title = `${_title} error`;
            return {
                endtime_not_in_future: (message = '"endtime" can not be in the future') => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                no_booking_info: (message = 'No booking info provided') => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                no_timeslot_selected: (message = 'No timeslot selected') => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                no_timezone_selected: (message = 'No timezone selected') => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                no_booking_id: (message = 'No booking id provided') => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                invalid_start_time: (message = 'Invalid start time') => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                invalid_end_time: (message = 'Invalid end time') => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                invalid_timezone: (message = 'Invalid timezone') => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
            };
        };
        this.api = (_title) => {
            const category = ErrorCategory.Api;
            const title = `${_title} error`;
            return {
                invalid_session: (message) => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                general_error: (message) => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                internal_error: (message) => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                invalid_request_error: (message) => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
                timeslot_not_available: (message) => {
                    return {
                        title,
                        message,
                        category,
                    };
                },
            };
        };
    }
}
//# sourceMappingURL=index.js.map
