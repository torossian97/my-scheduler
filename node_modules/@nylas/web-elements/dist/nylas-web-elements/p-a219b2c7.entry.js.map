{"version":3,"names":["iconCss","GoogleLogoIconStyle0","GoogleLogoIcon","render","h","key","width","this","height","viewBox","fill","xmlns","d","id","MicrosoftLogoIconStyle0","MicrosoftLogoIcon","TabContents","formState","activeTab","calendars","eventTitle","title","eventDescription","description","eventDuration","parseInt","duration","location","slot","name","exportparts","eventDurationMinutes","eventLocation","openHours","availability","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","organizer","participants","find","p","is_organizer","organizerEmail","email","selectedCalendars","calendarIds","length","bookingCalendar","defaultBookingCalendar","defaultSelectedCalendars","defaultTimezone","buffer","availableDaysInFuture","minCancellationNotice","nylasEditorTabsCss","NylasEditorTabsStyle0","NylasEditorTabs","setError","error","message","formSubmissionHandler","async","event","preventDefault","formSubmitted","emit","valid","formRef","checkValidity","isLoading","hasUnsavedChanges","updateFormState","bookingType","selectedConfiguration","configObject","version","duration_minutes","interval_minutes","availability_rules","availability_method","before","after","default_open_hours","DEFAULT_OPEN_HOURS","round_robin_group_id","currentUser","calendar_ids","open_hours","booking","calendar_id","event_booking","toString","booking_type","scheduler","available_days_in_future","min_cancellation_notice","configObjectWithDeveloperSettings","mergeDeep","requires_session_auth","defaultRequiresSessionAuth","finalConfig","action","resetLoadingState","_e","changesSaved","setTimeout","schedulerConfigChanged","config","configChangedHandler","newConfig","debug","getFormStateFromConfig","connectedCallback","componentWillLoad","componentDidLoad","disconnectedCallback","handleValueChanged","value","detail","organizerParticipant","undefined","formData","FormData","forEach","JSON","parse","split","setActiveTab","e","tabName","Host","onSubmit","class","ref","el","noValidate","mode","tab","active","onClick","schedulerPreviewLink","type","disabled","clickHandler","previewEvent","previewButtonClicked","host","defaultPrevented","window","open","parsePreviewLink","variant","cancelButtonClick","__decorate","RegisterComponent","stateToProps","Map","eventToProps","nylasSchedulerConfigConnector","checkForErrors","response","data","schedulerConfig","updateConfiguration","createConfiguration","_","schedulerConfigStore","state","localPropsToProp","fireRegisterEvent","nylasListConfigurationsCss","NylasListConfigurationsStyle0","NylasListConfigurations","configurations","initListConfigurations","getState","setState","createButtonClick","hide","colSpan","map","editButtonClick","configuration","deleteButtonClick","connector","getConfigurations","resetSelectedConfiguration","deleteConfiguration"],"sources":["src/common/icons/icon.css?tag=google-logo-icon&encapsulation=scoped","src/common/icons/google-logo.tsx","src/common/icons/icon.css?tag=microsoft-logo-icon&encapsulation=scoped","src/common/icons/microsoft-logo.tsx","src/components/scheduler-editor/nylas-editor-tabs/tab-contents.tsx","src/components/scheduler-editor/nylas-editor-tabs/nylas-editor-tabs.scss?tag=nylas-editor-tabs&encapsulation=scoped","src/components/scheduler-editor/nylas-editor-tabs/nylas-editor-tabs.tsx","src/components/scheduler-editor/nylas-list-configurations/nylas-list-configurations.scss?tag=nylas-list-configurations&encapsulation=shadow","src/components/scheduler-editor/nylas-list-configurations/nylas-list-configurations.tsx"],"sourcesContent":[":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'google-logo-icon',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class GoogleLogoIcon {\n  @Prop() width: string = '24';\n  @Prop() height: string = '24';\n\n  render() {\n    // Spam icon svg\n    return (\n      <svg width={this.width} height={this.height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_959_12452)\">\n          <path\n            d=\"M23.745 12.27C23.745 11.48 23.675 10.73 23.555 10H12.255V14.51H18.725C18.435 15.99 17.585 17.24 16.325 18.09V21.09H20.185C22.445 19 23.745 15.92 23.745 12.27Z\"\n            fill=\"#4285F4\"\n          />\n          <path\n            d=\"M12.255 24C15.495 24 18.205 22.92 20.185 21.09L16.325 18.09C15.245 18.81 13.875 19.25 12.255 19.25C9.12504 19.25 6.47505 17.14 5.52505 14.29H1.54504V17.38C3.51504 21.3 7.56504 24 12.255 24Z\"\n            fill=\"#34A853\"\n          />\n          <path\n            d=\"M5.52501 14.2901C5.27501 13.5701 5.145 12.8001 5.145 12.0001C5.145 11.2001 5.28501 10.4301 5.52501 9.71012V6.62012H1.545C0.725004 8.24012 0.255005 10.0601 0.255005 12.0001C0.255005 13.9401 0.725004 15.7601 1.545 17.3801L5.52501 14.2901Z\"\n            fill=\"#FBBC05\"\n          />\n          <path\n            d=\"M12.255 4.75C14.025 4.75 15.605 5.36 16.855 6.55L20.275 3.13C18.205 1.19 15.495 0 12.255 0C7.56504 0 3.51504 2.7 1.54504 6.62L5.52505 9.71C6.47505 6.86 9.12504 4.75 12.255 4.75Z\"\n            fill=\"#EA4335\"\n          />\n        </g>\n        <defs>\n          <clipPath id=\"clip0_959_12452\">\n            <rect width={24} height={24} fill=\"white\" />\n          </clipPath>\n        </defs>\n      </svg>\n    );\n  }\n}\n",":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'microsoft-logo-icon',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class MicrosoftLogoIcon {\n  @Prop() width: string = '22';\n  @Prop() height: string = '22';\n\n  render() {\n    // Spam icon svg\n    return (\n      <svg width={this.width} height={this.height} viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M0.043457 0.043457H10.4782V10.4782H0.043457V0.043457Z\" fill=\"#F35325\" />\n        <path d=\"M11.5217 0.043457H21.9565V10.4782H11.5217V0.043457Z\" fill=\"#81BC06\" />\n        <path d=\"M0.043457 11.5217H10.4782V21.9565H0.043457V11.5217Z\" fill=\"#05A6F0\" />\n        <path d=\"M11.5217 11.5217H21.9565V21.9565H11.5217V11.5217Z\" fill=\"#FFBA08\" />\n      </svg>\n    );\n  }\n}\n","import { h } from '@stencil/core';\n\nexport type TabContentsProps = {\n  id: string;\n  formState: any;\n  activeTab: string;\n  calendars?: any[];\n};\n\nexport default function TabContents({ id, formState, activeTab, calendars }: TabContentsProps) {\n  switch (activeTab) {\n    case 'eventInfo':\n      const eventTitle = formState.title;\n      const eventDescription = formState.description;\n      const eventDuration = parseInt(formState.duration);\n      const location = formState.location;\n      // const eventParticipants = formState.participants;\n\n      return (\n        <div key={id}>\n          <nylas-event-info>\n            <div slot=\"inputs\">\n              <nylas-event-title name=\"title\" eventTitle={eventTitle} exportparts=\"net, net__title, net__dropdown-content\" />\n              <nylas-event-duration\n                name=\"duration\"\n                eventDurationMinutes={eventDuration}\n                exportparts=\"ned, ned__input, ned__dropdown, ned__dropdown-button, ned__dropdown-content\"\n              />\n              <nylas-location-component name=\"location\" eventLocation={location} exportparts=\"nel, nel__location, nel__dropdown, nel__dropdown-button, nel__dropdown-content\" />\n              <nylas-event-description name=\"description\" eventDescription={eventDescription} exportparts=\"nedesc, nedesc__textarea\" />\n            </div>\n          </nylas-event-info>\n          {/* <nylas-additional-participants\n              name=\"participants\"\n              eventParticipants={eventParticipants}\n              exportparts={'nap__title, nap__subtitle, nap__content, nap__input_group, nap__input_wrapper, nap__input, nap__remove-participant, nap__add-participant'}\n            /> */}\n        </div>\n      );\n    case 'availability':\n      const openHours = formState.availability.openHours;\n      const timezone = formState.availability.timezone ? formState.availability.timezone : Intl.DateTimeFormat().resolvedOptions().timeZone;\n      const organizer = formState.participants?.find(p => p.is_organizer);\n      const organizerEmail = organizer?.email ?? 'primary';\n      const selectedCalendars = formState.calendarIds.length > 0 ? formState.calendarIds : [organizerEmail];\n      const bookingCalendar = formState.bookingCalendar == 'primary' ? organizerEmail : formState.bookingCalendar;\n      return (\n        <div key={id}>\n          <nylas-booking-calendar-picker\n            name=\"booking-calendar\"\n            calendars={calendars ?? []}\n            defaultBookingCalendar={bookingCalendar}\n            exportparts={'nbcp, nbcp__header, nbcp__input-label, nbcp__dropdown, nbcp__dropdown-button, nbcp__dropdown-content'}\n          />\n          <nylas-calendar-picker\n            name=\"calendars\"\n            calendars={calendars ?? []}\n            defaultSelectedCalendars={selectedCalendars}\n            exportparts={'ncp ncp__header, ncp__dropdown, ncp__dropdown-button, ncp__dropdown-content'}\n          />\n          <nylas-availability-picker\n            name=\"availability\"\n            openHours={openHours}\n            defaultTimezone={timezone}\n            exportparts={\n              'nap__header, nap__select-timezone, nap__select-timezone-button, nap__select-timezone-dropdown-content, nap__availability, nap__day, nap__time-ranges, nap__time-range, nap__add-time-range, nap__time-picker-container, nap__time-picker-input, nap__time-picker-times'\n            }\n          />\n        </div>\n      );\n    case 'bookingOptions':\n      return (\n        <div key={id}>\n          <nylas-buffer-time\n            name=\"buffer-time\"\n            buffer={formState.buffer}\n            exportparts={\n              'nbt, nbt__header, nbt__body, nbt__dropdown-before, nbt__dropdown-button-before, nbt__dropdown-content-before, nbt__dropdown-after, nbt__dropdown-button-after, nbt__dropdown-content-after, nbt__preview'\n            }\n          />\n          {/* <nylas-custom-booking-flow\n            name=\"booking-type\"\n            bookingType={formState.bookingType}\n            exportparts={'ncbf, ncbf__header, ncbf__dropdown, ncbf__dropdown-button, ncbf__dropdown-content'}\n          /> */}\n          <nylas-event-limits>\n            <div slot=\"inputs\">\n              <nylas-limit-future-bookings\n                name=\"limit-future-bookings\"\n                availableDaysInFuture={formState.availableDaysInFuture}\n                exportparts=\"nlfb, nlfb__number-dropdown, nlfb__number-dropdown-button, nlfb__number-dropdown-content, nlfb__period-dropdown, nlfb__period-dropdown-button, nlfb__period-dropdown-content\"\n              />\n              <nylas-min-cancellation-notice\n                name=\"min-cancellation-notice\"\n                minCancellationNotice={formState.minCancellationNotice}\n                exportparts=\"nmcn, nmcn__number-dropdown, nmcn__number-dropdown-button, nmcn__number-dropdown-content, nmcn__period-dropdown, nmcn__period-dropdown-button, nmcn__period-dropdown-content\"\n              />\n            </div>\n          </nylas-event-limits>\n        </div>\n      );\n  }\n}\n","@import '../../../common/styles/variables.scss';\n@import '../../../common/mixins/buttons.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n}\n\n.scheduler-editor {\n  display: flex;\n  flex-direction: column;\n  .form-contents {\n    height: 554px;\n    display: grid;\n    grid-template-columns: minmax(224px, 25%) 1fr;\n    @media #{$mobile} {\n      display: table-column-group;\n      height: auto;\n    }\n    .tabs {\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid var(--nylas-base-200);\n      background-color: var(--nylas-base-25);\n      .tab {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        padding: 0.5rem 1rem;\n        color: var(--nylas-base-900);\n        background: var(--nylas-base-0);\n        border: none;\n        height: 56px;\n        font-family: var(--nylas-font-family);\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 24px;\n        cursor: pointer;\n        &:not(:first-of-type) {\n          margin-top: 0.25rem;\n        }\n        &.active {\n          font-weight: 600;\n          background: var(--nylas-base-0);\n          color: var(--nylas-primary);\n          border-left: 4px solid var(--nylas-primary);\n          box-shadow: 0px 1px 2px 0px #0000000f;\n          box-shadow: 0px 1px 3px 0px #0000001a;\n        }\n      }\n    }\n    .tab-content {\n      max-width: 692px;\n      overflow-y: auto;\n      nylas-event-info,\n      nylas-event-limits {\n        width: inherit;\n        div[slot='inputs'] {\n          display: flex;\n          flex-direction: column;\n          gap: 1rem;\n        }\n      }\n    }\n  }\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n  min-height: 80px;\n  padding: 0 1rem;\n  border-top: 1px solid var(--nylas-base-200);\n  @media #{$mobile} {\n    flex-direction: column;\n    height: auto;\n  }\n  .preview {\n    @media #{$mobile} {\n      margin-top: 1rem;\n      width: 100%;\n    }\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    justify-self: flex-end;\n    gap: 1rem;\n    @media #{$mobile} {\n      flex-direction: column-reverse;\n      width: 100%;\n    }\n    p {\n      max-width: 524px;\n      &.unsaved-changes {\n        color: var(--nylas-base-600);\n      }\n      &.saved-changes {\n        color: var(--nylas-success);\n      }\n      &.error {\n        color: var(--nylas-error);\n      }\n      &.error-full-width {\n        max-width: 660px;\n      }\n    }\n\n    button-component {\n      @media #{$mobile} {\n        width: 100%;\n      }\n    }\n    button {\n      @include primary-button;\n      width: 148px;\n      span {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.5rem;\n      }\n    }\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug, mergeDeep, parsePreviewLink } from '@/utils/utils';\nimport { BookingType, Calendar, Configuration, OpenHours } from '@nylas/core';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport TabContents from './tab-contents';\nimport { User } from '@/common/nylas-api-request';\nimport { DEFAULT_OPEN_HOURS } from '@/common/constants';\nimport { DataResponseReturnType } from '@/common/types';\n\ntype SchedulerEventDetail = {\n  config: Partial<Configuration>;\n  action: 'create' | 'edit';\n  resetLoadingState?: (e: CustomEvent) => void;\n  setError?: (error: Error) => void;\n};\n\n/**\n * The `nylas-editor-tabs` component is a UI component that displays the editor tabs for the scheduler editor.\n * @part nap__title - [nylas-additional-participants] The title of the component.\n * @part nap__subtitle - [nylas-additional-participants] The subtitle of the component.\n * @part nap__content - [nylas-additional-participants] The content of the component.\n * @part nap__input - [nylas-additional-participants] The input of the component.\n * @part nap__remove-participant - [nylas-additional-participants] The remove participant button of the component.\n * @part nap__add-participant - [nylas-additional-participants] The add participant button of the component.\n * @part nap__header - [nylas-availability-picker] The header of the availability picker\n * @part nap__select-timezone - [nylas-availability-picker] The timezone selection container\n * @part nap__select-timezone-button -[nylas-availability-picker]  The timezone selection button\n * @part nap__select-timezone-dropdown-content -[nylas-availability-picker] The timezone selection dropdown content\n * @part nap__availability - [nylas-availability-picker] The availability container\n * @part nap__day - [nylas-availability-picker] The day container\n * @part nap__time-ranges - [nylas-availability-picker] The time ranges container\n * @part nap__time-range - [nylas-availability-picker] The time range container\n * @part nap__add-time-range - [nylas-availability-picker] The add time range button\n * @part nap__time-picker-container -[nylas-availability-picker]  The time picker container\n * @part nap__time-picker-input - [nylas-availability-picker]  The time picker input\n * @part nap__time-picker-times - [nylas-availability-picker] The time picker times\n * @part nbcp - [nylas-booking-calendar-picker] The booking calendar picker container\n * @part nbcp__header - [nylas-booking-calendar-picker] The header of the booking calendar picker\n * @part nbcp__input-label - [nylas-booking-calendar-picker] The input label of the booking calendar picker\n * @part nbcp__dropdown - [nylas-booking-calendar-picker] The dropdown container\n * @part nbcp__dropdown-button - [nylas-booking-calendar-picker] The dropdown button\n * @part nbcp__dropdown-content - [nylas-booking-calendar-picker] The dropdown content\n * @part nbt - [nylas-buffer-time] The buffer time container\n * @part nbt__header - [nylas-buffer-time] The header of the buffer time\n * @part nbt__body - [nylas-buffer-time] The body of the buffer time\n * @part nbt__dropdown-before - [nylas-buffer-time] The before buffer dropdown container\n * @part nbt__dropdown-button-before - [nylas-buffer-time] The before buffer dropdown button\n * @part nbt__dropdown-content-before - [nylas-buffer-time] The before buffer dropdown content\n * @part nbt__dropdown-after - [nylas-buffer-time] The after buffer dropdown container\n * @part nbt__dropdown-button-after - [nylas-buffer-time] The after buffer dropdown button\n * @part nbt__dropdown-content-after - [nylas-buffer-time] The after buffer dropdown content\n * @part nbt__preview - [nylas-buffer-time] The buffer time preview\n * @part ncp - [nylas-calendar-picker] The calendar picker container\n * @part ncp__header - [nylas-calendar-picker] The header of the calendar picker\n * @part ncp__dropdown - [nylas-calendar-picker] The dropdown container\n * @part ncp__dropdown-button - [nylas-calendar-picker] The dropdown button\n * @part ncp__dropdown-content - [nylas-calendar-picker] The dropdown content\n * @part ncbf - [nylas-custom-booking-flow] The custom booking flow container\n * @part ncbf__header - [nylas-custom-booking-flow] The header of the custom booking flow\n * @part ncbf__dropdown - [nylas-custom-booking-flow] The dropdown container\n * @part ncbf__dropdown-button - [nylas-custom-booking-flow] The dropdown button\n * @part ncbf__dropdown-content - [nylas-custom-booking-flow] The dropdown content\n * @part nedesc - [nylas-event-description] The event description container\n * @part nedesc__textarea - [nylas-event-description] The event description textarea\n * @part ned - [nylas-event-duration] The event duration container\n * @part ned__input - [nylas-event-duration] The event duration input\n * @part ned__dropdown - [nylas-event-duration] The event duration dropdown\n * @part ned__dropdown-button - [nylas-event-duration] The event duration dropdown button\n * @part ned__dropdown-content - [nylas-event-duration] The event duration dropdown content\n * @part net - [nylas-event-title] The event title container\n * @part net__title - [nylas-event-title] The event title input\n * @part net__dropdown-content - [nylas-event-title] The token options container\n * @part nlfb - [nylas-limit-future-bookings] The limit future bookings container\n * @part nlfb__number-dropdown - [nylas-limit-future-bookings] The number dropdown container\n * @part nlfb__number-dropdown-button - [nylas-limit-future-bookings] The number dropdown button\n * @part nlfb__number-dropdown-content - [nylas-limit-future-bookings] The number dropdown content\n * @part nlfb__period-dropdown - [nylas-limit-future-bookings] The period dropdown container\n * @part nlfb__period-dropdown-button - [nylas-limit-future-bookings] The period dropdown button\n * @part nlfb__period-dropdown-content - [nylas-limit-future-bookings] The period dropdown content\n * @part nel - [nylas-location-component] The event location container\n * @part nel__location - [nylas-location-component] The event location input\n * @part nel__dropdown - [nylas-location-component] The dropdown container\n * @part nel__dropdown-button - [nylas-location-component] The dropdown button\n * @part nel__dropdown-content - [nylas-location-component] The dropdown content\n * @part nmcn - [nylas-min-cancellation-notice] The minimum cancellation notice container\n * @part nmcn__number-dropdown - [nylas-min-cancellation-notice] The number dropdown container\n * @part nmcn__number-dropdown-button - [nylas-min-cancellation-notice] The number dropdown button\n * @part nmcn__number-dropdown-content - [nylas-min-cancellation-notice] The number dropdown content\n * @part nmcn__period-dropdown - [nylas-min-cancellation-notice] The period dropdown container\n * @part nmcn__period-dropdown-button - [nylas-min-cancellation-notice] The period dropdown button\n * @part nmcn__period-dropdown-content - [nylas-min-cancellation-notice] The period dropdown content\n */\n@Component({\n  tag: 'nylas-editor-tabs',\n  styleUrl: 'nylas-editor-tabs.scss',\n  scoped: true,\n})\nexport class NylasEditorTabs {\n  /**\n   * The form reference to access the form data.\n   */\n  private formRef!: HTMLFormElement;\n  /**\n   * The host element.\n   */\n  @Element() host!: HTMLNylasEditorTabsElement;\n  /**\n   * The list of calendars to use in the editor when configuring availability.\n   */\n  @Prop() calendars?: Calendar[];\n  /**\n   * The selected configuration to use in the editor when editing an existing configuration or creating a new one.\n   */\n  @Prop() selectedConfiguration?: Configuration;\n  /**\n   * The default require session auth flag to used to set the default value for the requireSessionAuth\n   * property when creating a configuration. If set to true, then a session token must be provided\n   * to the <nylas-scheduling/> component. If set to false, then a session token is not required\n   * and the configuration id can passed to the <nylas-scheduling/> component instead.\n   */\n  @Prop() defaultRequiresSessionAuth: boolean = true;\n  /**\n   * The current logged in user.\n   */\n  @Prop() currentUser?: User;\n  /**\n   * The scheduler preview link to use when the user clicks on the preview button.\n   * You can use a placeholder `{config.id}` to replace the configuration id anywhere in the link.\n   */\n  @Prop({ attribute: 'scheduler-preview-link' }) schedulerPreviewLink: string = '';\n  /**\n   * The mode of the editor.\n   * - `app`: The editor is used as a standalone app.\n   * - `composable`: The editor is used as a composable component.\n   */\n  @Prop() mode?: 'app' | 'composable' = 'app';\n  /**\n   * The action to perform in the editor.\n   * - `create`: Create a new configuration.\n   * - `edit`: Edit an existing configuration.\n   */\n  @State() action: 'create' | 'edit' = 'create';\n  /**\n   * The active tab in the editor.\n   */\n  @State() activeTab: string = 'eventInfo';\n  /**\n   * The loading state of the editor.\n   */\n  @State() isLoading: boolean = false;\n  /**\n   * The unsaved changes state of the editor.\n   */\n  @State() hasUnsavedChanges: boolean = false;\n  /**\n   * The changes saved state of the editor.\n   */\n  @State() changesSaved: boolean = false;\n  /**\n   * The form state of the editor.\n   */\n  @State() formState: Partial<{\n    title: string;\n    description: string;\n    duration: string;\n    availability?: {\n      timezone: string;\n      openHours?: OpenHours[];\n    };\n    calendarIds: string[];\n    participants?: any[];\n    bookingCalendar?: string;\n    location?: string;\n    bookingType?: string;\n    buffer?: { before: number; after: number };\n    availableDaysInFuture?: number;\n    minCancellationNotice?: number;\n  }> = {};\n  /**\n   * The error state of the editor.\n   */\n  @State() error?: string = '';\n  /**\n   * Event emitted when the configuration is changed.\n   */\n  @Event() schedulerConfigChanged!: EventEmitter<SchedulerEventDetail>;\n  /**\n   * Event emitted when the user clicks the cancel button.\n   */\n  @Event() cancelButtonClick!: EventEmitter<void>;\n  /**\n   * Event emitted on form submission.\n   */\n  @Event() formSubmitted!: EventEmitter<void>;\n  /**\n   * Event emitted when the user clicks the cancel button.\n   */\n  @Event() previewButtonClicked!: EventEmitter<HTMLNylasEditorTabsElement>;\n\n  @Watch('selectedConfiguration')\n  configChangedHandler(newConfig: Configuration) {\n    debug('[nylas-editor-tabs]', 'configChangedHandler', newConfig, this.selectedConfiguration);\n    this.formState = {\n      ...this.getFormStateFromConfig(newConfig),\n    };\n\n    if (newConfig.id) {\n      this.action = 'edit';\n    } else {\n      this.action = 'create';\n    }\n  }\n\n  connectedCallback() {\n    debug('[nylas-editor-tabs]', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('[nylas-editor-tabs]', 'componentWillLoad');\n    this.formState = this.getFormStateFromConfig(this.selectedConfiguration);\n  }\n\n  componentDidLoad() {\n    debug('[nylas-editor-tabs]', 'componentDidLoad');\n  }\n\n  disconnectedCallback() {\n    debug('[nylas-editor-tabs]', 'disconnectedCallback');\n  }\n\n  @Listen('valueChanged')\n  handleValueChanged(event: CustomEvent) {\n    debug('[nylas-editor-tabs]', 'handleValueChanged', event);\n    const { name, value } = event.detail;\n    this.formState = { ...this.formState, [name]: value };\n    this.hasUnsavedChanges = true;\n    this.error = '';\n  }\n\n  getFormStateFromConfig(config?: Configuration) {\n    const organizerParticipant = config?.participants?.find(p => p.is_organizer);\n    return {\n      title: config?.event_booking?.title ?? '',\n      description: config?.event_booking?.description ?? '',\n      duration: config?.availability?.duration_minutes?.toString() ?? '10',\n      availability: {\n        timezone: config?.event_booking?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n        open_hours: organizerParticipant?.availability?.open_hours ?? undefined,\n      },\n      calendarIds: organizerParticipant?.availability?.calendar_ids ?? [],\n      participants: config?.participants ?? [],\n      bookingCalendar: organizerParticipant?.booking?.calendar_id ?? organizerParticipant?.email ?? '',\n      location: this.selectedConfiguration?.event_booking?.location ?? '',\n      bookingType: this.selectedConfiguration?.event_booking?.booking_type ?? 'booking',\n      buffer: this.selectedConfiguration?.availability?.availability_rules?.buffer ?? { before: 0, after: 0 },\n      availableDaysInFuture: this.selectedConfiguration?.scheduler?.available_days_in_future ?? 30,\n      minCancellationNotice: this.selectedConfiguration?.scheduler?.min_cancellation_notice ?? 0,\n    };\n  }\n\n  updateFormState() {\n    const formData = new FormData(this.formRef);\n    formData.forEach((value, key) => {\n      switch (key) {\n        case 'title':\n          this.formState.title = value.toString();\n          break;\n        case 'description':\n          this.formState.description = value.toString();\n          break;\n        case 'duration':\n          this.formState.duration = value.toString();\n          break;\n        case 'availability':\n          this.formState.availability = JSON.parse(value.toString());\n          break;\n        case 'participants':\n          this.formState.participants = JSON.parse(value.toString());\n          break;\n        case 'calendars':\n          this.formState.calendarIds = value.toString().split(',');\n          break;\n        case 'booking-calendar':\n          this.formState.bookingCalendar = value.toString();\n          break;\n        case 'location':\n          this.formState.location = value.toString();\n          break;\n        case 'booking-type':\n          this.formState.bookingType = value.toString();\n          break;\n        case 'buffer-time':\n          this.formState.buffer = JSON.parse(value.toString());\n          break;\n        case 'limit-future-bookings':\n          this.formState.availableDaysInFuture = parseInt(value.toString());\n          break;\n        case 'min-cancellation-notice':\n          this.formState.minCancellationNotice = parseInt(value.toString());\n          break;\n      }\n    });\n\n    this.formState = { ...this.formState };\n    return this.formState;\n  }\n\n  setActiveTab(e: Event, tabName: string) {\n    e.preventDefault();\n    this.updateFormState();\n    this.activeTab = tabName;\n  }\n\n  setError = (error: Error) => {\n    this.error = error.message;\n  };\n\n  formSubmissionHandler = async (event: Event) => {\n    event.preventDefault();\n    this.formSubmitted.emit();\n    const valid = this.formRef.checkValidity();\n    if (!valid) {\n      return;\n    }\n    this.isLoading = true;\n    this.hasUnsavedChanges = false;\n    const formState = this.updateFormState();\n    const { title, description, duration, availability, calendarIds, bookingCalendar, location, bookingType, buffer, availableDaysInFuture, minCancellationNotice } = formState;\n    const organizer = this.selectedConfiguration?.participants?.find(p => p.is_organizer);\n    const configObject: Partial<Configuration> = {\n      ...(this.selectedConfiguration?.id && { id: this.selectedConfiguration.id }),\n      version: this.selectedConfiguration?.version ?? '1.0.0',\n      availability: {\n        duration_minutes: duration ? parseInt(duration) : 0,\n        interval_minutes: duration ? parseInt(duration) : 0,\n        availability_rules: {\n          availability_method: this.selectedConfiguration?.availability?.availability_rules?.availability_method ?? 'collective',\n          buffer: buffer || { before: 0, after: 0 },\n          default_open_hours: this.selectedConfiguration?.availability?.availability_rules?.default_open_hours ?? DEFAULT_OPEN_HOURS,\n          round_robin_group_id: this.selectedConfiguration?.availability?.availability_rules?.round_robin_group_id ?? '',\n        },\n      },\n      participants: [\n        {\n          name: organizer?.name ?? organizer?.email ?? this.currentUser?.name ?? this.currentUser?.email ?? '',\n          email: organizer?.email ?? this.currentUser?.email ?? '',\n          is_organizer: true,\n          availability: {\n            calendar_ids: calendarIds?.length ? calendarIds : ['primary'],\n            open_hours: availability?.openHours ?? [],\n          },\n          booking: {\n            calendar_id: bookingCalendar && bookingCalendar !== '' ? bookingCalendar : 'primary',\n          },\n        },\n      ],\n      event_booking: {\n        title: title?.toString() ?? '',\n        description: description?.toString() ?? '',\n        location: location?.toString() ?? '',\n        booking_type: (bookingType?.toString() as BookingType) ?? 'booking',\n        timezone: availability?.timezone ?? Intl.DateTimeFormat().resolvedOptions().timeZone,\n      },\n      scheduler: {\n        available_days_in_future: availableDaysInFuture ?? 30,\n        min_cancellation_notice: minCancellationNotice ?? 0,\n      },\n    };\n\n    const configObjectWithDeveloperSettings = mergeDeep(configObject, this.selectedConfiguration);\n    // Set the requires_session_auth flag to the default value for new configurations\n    configObjectWithDeveloperSettings.requires_session_auth = this.defaultRequiresSessionAuth;\n\n    const finalConfig = this.action === 'create' ? configObjectWithDeveloperSettings : configObject;\n\n    const resetLoadingState = (_e: CustomEvent) => {\n      this.isLoading = false;\n      this.changesSaved = true;\n      setTimeout(() => {\n        this.changesSaved = false;\n      }, 5000);\n    };\n    this.schedulerConfigChanged.emit({ config: finalConfig, resetLoadingState, setError: this.setError, action: this.action });\n  };\n\n  @RegisterComponent<NylasEditorTabs, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-editor-tabs',\n    stateToProps: new Map([\n      ['schedulerConfig.calendars', 'calendars'],\n      ['schedulerConfig.selectedConfiguration', 'selectedConfiguration'],\n      ['schedulerConfig.currentUser', 'currentUser'],\n    ]),\n    eventToProps: {\n      schedulerConfigChanged: async (event: CustomEvent<SchedulerEventDetail>, nylasSchedulerConfigConnector: NylasSchedulerConfigConnector) => {\n        const { resetLoadingState, setError, action, config } = event.detail;\n        const checkForErrors = (response: DataResponseReturnType) => {\n          const [data, error] = response;\n          if (!data && error && setError) {\n            setError(error as Error);\n          }\n          if (resetLoadingState) {\n            resetLoadingState(event);\n          }\n        };\n\n        // If we have an ID, we are updating an existing configuration\n        if (action === 'edit') {\n          const response = await nylasSchedulerConfigConnector.schedulerConfig.updateConfiguration(config);\n          checkForErrors(response);\n        } else {\n          const response = await nylasSchedulerConfigConnector.schedulerConfig.createConfiguration(config);\n          checkForErrors(response);\n        }\n      },\n      cancelButtonClick: async (_, nylasSchedulerConfigConnector) => {\n        nylasSchedulerConfigConnector.schedulerConfigStore.state.action = null;\n      },\n    },\n    localPropsToProp: new Map([\n      ['schedulerPreviewLink', 'schedulerPreviewLink'],\n      ['defaultRequiresSessionAuth', 'defaultRequiresSessionAuth'],\n    ]),\n    fireRegisterEvent: true,\n  })\n  render() {\n    debug('[nylas-editor-tabs]', 'render', this.formState);\n    return (\n      <Host>\n        <form onSubmit={this.formSubmissionHandler} class=\"scheduler-editor\" ref={el => (this.formRef = el as HTMLFormElement)} noValidate>\n          {this.mode === 'app' ? (\n            <div class=\"form-contents\">\n              <div class=\"tabs\">\n                <button class={{ tab: true, active: this.activeTab == 'eventInfo' }} onClick={e => this.setActiveTab(e, 'eventInfo')}>\n                  <calendar-info-icon width=\"16\" height=\"16\" />\n                  Event Info\n                </button>\n                <button class={{ tab: true, active: this.activeTab == 'availability' }} onClick={e => this.setActiveTab(e, 'availability')}>\n                  <calendar-patterns-icon width=\"16\" height=\"16\" />\n                  Availability\n                </button>\n                <button class={{ tab: true, active: this.activeTab == 'bookingOptions' }} onClick={e => this.setActiveTab(e, 'bookingOptions')}>\n                  <flow-icon width=\"16\" height=\"16\" />\n                  Booking Options\n                </button>\n              </div>\n              <div class=\"tab-content\">\n                <TabContents formState={this.formState} activeTab={this.activeTab} calendars={this.calendars} id={this.selectedConfiguration?.id ?? 'new'} />\n              </div>\n            </div>\n          ) : (\n            <slot></slot>\n          )}\n\n          <div class=\"footer\">\n            <div class=\"preview\">\n              {this.schedulerPreviewLink !== '' && this.action === 'edit' && (\n                <button-component\n                  type=\"button\"\n                  disabled={this.isLoading}\n                  clickHandler={event => {\n                    event.preventDefault();\n                    const previewEvent = this.previewButtonClicked.emit(this.host);\n                    if (!previewEvent.defaultPrevented) {\n                      window.open(parsePreviewLink(this.schedulerPreviewLink, this.selectedConfiguration), '_blank');\n                    }\n                  }}\n                  variant={'basic'}\n                >\n                  Preview\n                </button-component>\n              )}\n            </div>\n            <div class=\"buttons\">\n              <p\n                class={{\n                  'unsaved-changes': this.hasUnsavedChanges && !this.changesSaved,\n                  'saved-changes': this.changesSaved,\n                  'error': this.error !== '',\n                  'error-full-width': this.error !== '' && this.action === 'create',\n                }}\n              >\n                {this.error !== '' ? this.error : ''}\n                {this.error == '' && this.hasUnsavedChanges && !this.changesSaved ? 'Unsaved changes' : this.error == '' && this.changesSaved ? 'Changes saved!' : ''}\n              </p>\n              <button-component\n                type=\"button\"\n                disabled={this.isLoading}\n                clickHandler={event => {\n                  event.preventDefault();\n                  this.cancelButtonClick.emit();\n                  this.error = '';\n                }}\n                variant={'basic'}\n              >\n                Cancel\n              </button-component>\n              <button-component type=\"submit\" disabled={this.isLoading}>\n                {this.isLoading ? (\n                  <span>\n                    Saving\n                    <loading-icon />{' '}\n                  </span>\n                ) : this.action == 'create' ? (\n                  'Create'\n                ) : (\n                  'Save changes'\n                )}\n              </button-component>\n            </div>\n          </div>\n        </form>\n      </Host>\n    );\n  }\n}\n","@import '../../../common/styles/variables.scss';\n@import '../../../common/mixins/buttons.scss';\n\n:host {\n  display: grid;\n  grid-auto-flow: row;\n  width: 100%;\n  font-family: inherit;\n  font-optical-sizing: auto;\n  @include default-css-variables;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  gap: 1rem;\n  @media #{$mobile} {\n    flex-direction: column;\n    gap: 0.5rem;\n    align-items: unset;\n  }\n  h2 {\n    margin: 0;\n    font-size: 1.25rem;\n    color: var(--nylas-base-900);\n    font-weight: 600;\n  }\n\n  p {\n    margin: 0;\n    font-size: 1rem;\n    color: var(--nylas-base-700);\n  }\n\n  .actions {\n    justify-self: end;\n\n    @media #{$mobile} {\n      width: 100%;\n    }\n  }\n}\n\n.configurations {\n  border: 1px solid var(--nylas-base-200);\n  border-radius: var(--nylas-border-radius-2x);\n  background: var(--nylas-base-0);\n  height: 100%;\n  display: flex;\n  overflow-y: auto;\n  table {\n    width: 100%;\n    border-spacing: 0;\n    border-collapse: collapse;\n    font-family: inherit;\n    height: max-content;\n\n    &.no-configurations {\n      height: 100%;\n    }\n\n    tr {\n      color: var(--nylas-base-800);\n      border-bottom: 1px solid var(--nylas-base-200);\n      font-family: inherit;\n      &:last-of-type {\n        border-bottom: 0;\n      }\n\n      &.hide {\n        display: none;\n      }\n    }\n\n    th {\n      font-weight: 600;\n      text-transform: uppercase;\n      &.actions-header {\n        text-align: right;\n      }\n    }\n\n    tr.no-configurations {\n      td {\n        > div {\n          display: flex;\n          height: 100%;\n          justify-content: center;\n          align-items: center;\n          flex-direction: column;\n\n          padding: var(--nylas-border-radius-3x);\n\n          h3 {\n            margin: 0 0 1rem 0;\n            color: var(--nylas-base-700);\n          }\n\n          p {\n            margin: 0 0 1rem 0;\n            color: var(--nylas-base-600);\n          }\n\n          calendar-icon {\n            margin-bottom: 1rem;\n            color: var(--nylas-base-200);\n          }\n        }\n      }\n    }\n\n    th,\n    td {\n      text-align: left;\n      padding: 1rem;\n      font-family: inherit;\n    }\n\n    .actions {\n      text-align: right;\n    }\n\n    .actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      @media #{$mobile} {\n        flex-direction: column;\n        gap: 0.5rem;\n      }\n    }\n\n    .title {\n      display: flex;\n      flex-direction: column;\n\n      .config-event-title {\n        font-weight: 600;\n      }\n\n      .config-event-description {\n        font-size: 0.75rem;\n      }\n    }\n  }\n}\n\n.error-container {\n  margin-top: 1.5rem;\n  .error {\n    color: var(--nylas-error);\n    padding: 0.5rem 0;\n    margin: 1rem 0 0;\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug, parsePreviewLink } from '@/utils/utils';\nimport { Component, Element, Event, EventEmitter, Host, Method, Prop, State, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\nimport { Configuration } from '@nylas/core';\n\n/**\n * The `nylas-list-configurations` component displays a list of scheduling pages.\n */\n@Component({\n  tag: 'nylas-list-configurations',\n  styleUrl: 'nylas-list-configurations.scss',\n  shadow: true,\n})\nexport class NylasListConfigurations {\n  /**\n   * The host element.\n   */\n  @Element() host!: HTMLNylasListConfigurationsElement;\n\n  /**\n   * The list of configurations to display.\n   */\n  @Prop() configurations: Configuration[] = [];\n\n  /**\n   * The scheduler preview link to use when the user clicks on the preview button.\n   * You can use a placeholder `{config.id}` to replace the configuration id anywhere in the link.\n   */\n  @Prop({ attribute: 'scheduler-preview-link' }) schedulerPreviewLink: string = '';\n\n  /**\n   * Event emitted when the component is initialized.\n   */\n  @Event() initListConfigurations!: EventEmitter<HTMLNylasListConfigurationsElement>;\n\n  /**\n   * Event emitted when the user clicks the create event button.\n   */\n  @Event() createButtonClick!: EventEmitter<HTMLNylasListConfigurationsElement>;\n\n  /**\n   * Event emitted when the user clicks the edit event button.\n   */\n  @Event() editButtonClick!: EventEmitter<{\n    host: HTMLNylasListConfigurationsElement;\n    configuration: Configuration;\n  }>;\n\n  /**\n   * Event emitted when the user clicks the delete event button.\n   */\n  @Event() deleteButtonClick!: EventEmitter<{\n    host: HTMLNylasListConfigurationsElement;\n    configuration: Configuration;\n  }>;\n\n  /**\n   * The current state of the component.\n   */\n  @State() private state: 'loading' | 'loaded' | 'error' = 'loading';\n\n  /**\n   * The error message to display.\n   */\n  @State() private error: string = '';\n\n  connectedCallback() {\n    debug('[nylas-list-configurations]', 'connectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('[nylas-list-configurations]', 'componentWillLoad');\n\n    // If we have configurations, we will set the state to loaded.\n    if (this.configurations && this.configurations.length > 0) {\n      this.state = 'loaded';\n    }\n  }\n\n  componentDidLoad() {\n    debug('[nylas-list-configurations]', 'componentDidLoad');\n\n    // Fire the init event. By default, we will fetch the configurations.\n    // This is defined in the eventToProps object in the RegisterComponent decorator.\n    this.initListConfigurations.emit(this.host);\n  }\n\n  disconnectedCallback() {\n    debug('[nylas-list-configurations]', 'disconnectedCallback');\n  }\n\n  @Method()\n  async getState() {\n    return this.state;\n  }\n\n  @Method()\n  async setState(state: 'loading' | 'loaded' | 'error') {\n    this.state = state;\n  }\n\n  @Method()\n  async setError(error: string) {\n    this.error = error;\n  }\n\n  @RegisterComponent<NylasListConfigurations, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-list-configurations',\n    stateToProps: new Map([['schedulerConfig.configurations', 'configurations']]),\n    localPropsToProp: new Map([['schedulerPreviewLink', 'schedulerPreviewLink']]),\n    eventToProps: {\n      initListConfigurations: async (event, connector) => {\n        const host = event.detail;\n        await host.setState('loading');\n        const [data, error] = await connector.schedulerConfig.getConfigurations();\n        if (!data && error && error.message) {\n          await host.setState('error');\n          await host.setError(error.message);\n          return;\n        }\n        await host.setState('loaded');\n      },\n      createButtonClick: async (_, connector) => {\n        connector.schedulerConfigStore.resetSelectedConfiguration();\n        connector.schedulerConfigStore.state.action = 'create';\n      },\n      deleteButtonClick: async (event, connector) => {\n        const { host, configuration } = event.detail;\n        const [data, error] = await connector.schedulerConfig.deleteConfiguration(configuration.id);\n        if (!data && error && error.message) {\n          await host.setState('error');\n          await host.setError(error.message);\n        }\n      },\n      editButtonClick: async (event, connector) => {\n        const { configuration } = event.detail;\n        connector.schedulerConfigStore.state.selectedConfiguration = configuration;\n        connector.schedulerConfigStore.state.action = 'edit';\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <div class=\"header\">\n          <div class=\"description\">\n            <h2>All scheduling pages</h2>\n            <p>Create, edit and manage all your scheduling pages.</p>\n          </div>\n          {this.configurations && this.configurations.length > 0 && (\n            <div class=\"actions\">\n              <button-component\n                clickHandler={() => {\n                  this.createButtonClick.emit(this.host);\n                }}\n              >\n                Create new\n              </button-component>\n            </div>\n          )}\n        </div>\n        <div class=\"configurations\">\n          <table\n            class={{\n              'no-configurations': this.state !== 'loading' && (!this.configurations || this.configurations.length === 0),\n            }}\n          >\n            <tr\n              class={{\n                hide: this.state === 'loading' || (this.configurations && this.configurations.length === 0),\n              }}\n            >\n              <th>Scheduling page event title</th>\n              <th>Duration</th>\n              <th class=\"actions-header\">Actions</th>\n            </tr>\n            {this.state === 'loading' && (\n              <tr class=\"no-configurations\">\n                <td colSpan={3}>\n                  <div>\n                    <h3>Loading...</h3>\n                    <p>Please wait while we fetch the scheduling pages</p>\n                  </div>\n                </td>\n              </tr>\n            )}\n            {this.state !== 'loading' && (!this.configurations || this.configurations.length === 0) && (\n              <tr class=\"no-configurations\">\n                <td colSpan={3}>\n                  <div>\n                    <calendar-icon width=\"48\" height=\"48\"></calendar-icon>\n                    <h3>No scheduling pages found</h3>\n                    <p>Get started with creating your first scheduling page</p>\n                    <button-component\n                      clickHandler={() => {\n                        this.createButtonClick.emit(this.host);\n                      }}\n                    >\n                      Create new\n                    </button-component>\n                  </div>\n                </td>\n              </tr>\n            )}\n            {this.state !== 'loading' &&\n              this.configurations.map(config => (\n                <tr key={config.id}>\n                  <td>\n                    <div class=\"title\">\n                      <span class={'config-event-title'}>{config.event_booking.title}</span>\n                      <span class={'config-event-description'}>{config.event_booking.description}</span>\n                    </div>\n                  </td>\n                  <td>\n                    <div>{config.availability.duration_minutes} mins</div>\n                  </td>\n                  <td>\n                    <div class=\"actions\">\n                      <button-component\n                        variant={'basic'}\n                        clickHandler={event => {\n                          event.preventDefault();\n                          window.open(parsePreviewLink(this.schedulerPreviewLink, config), '_blank');\n                        }}\n                      >\n                        Preview\n                      </button-component>\n                      <button-component\n                        variant={'basic'}\n                        clickHandler={event => {\n                          event.preventDefault();\n                          this.editButtonClick.emit({ host: this.host, configuration: config });\n                        }}\n                      >\n                        Edit\n                      </button-component>\n                      <button-component\n                        variant={'basic'}\n                        clickHandler={event => {\n                          event.preventDefault();\n                          this.deleteButtonClick.emit({ host: this.host, configuration: config });\n                        }}\n                      >\n                        Delete\n                      </button-component>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n          </table>\n        </div>\n        {this.state === 'error' && (\n          <div class=\"error-container\">\n            <p class={'error'}>{this.error}</p>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}