{"version":3,"names":["nylasBookedEventCardCss","NylasBookedEventCardStyle0","NylasBookedEventCard","this","handleCancelBookingButtonClicked","today","Date","minCancellationNotice","configSettings","scheduler","min_cancellation_notice","dateTillCancellation","addMinutesToCurrentTime","getTime","cancelBookedEventValidationError","emit","error","title","message","cancelBookingButtonClicked","bookingId","eventInfo","booking_id","handleRescheduleButtonClicked","errorHandler","rescheduleBookedEventError","rescheduleButtonClicked","getOrganizer","organizer","getPaticipantType","type","Intl","DateTimeFormat","resolvedOptions","timeZone","connectedCallback","disconnectedCallback","componentWillLoad","debug","componentDidLoad","render","h","Host","key","part","theme","color","scale","class","TIMEZONE_MAP","selectedTimezone","slot","rescheduleBookingId","name","email","bookingInfo","primaryParticipant","selectedTimeslot","start_time","toLocaleDateString","undefined","dateStyle","toLocaleTimeString","timeStyle","end_time","variant","treatment","onClick","__decorate","RegisterComponent","stateToProps","Map","eventToProps","async","event","nylasSchedulerConnector","setCancel","detail","result","setReschedule","fireRegisterEvent","nylasBookingFormCss","NylasBookingFormStyle0","emailRegex","NylasBookingForm","handleGuestChange","guestIndex","resetGuestEmailError","guests","guestEmails","handleGuestBlur","guestEmailErrors","test","addGuestButtonClickedHandler","removeGuestButtonClickHandler","e","preventDefault","splice","handleBackButtonClicked","backButtonClicked","bookButtonClickedHandler","isNameValid","validationError","bookingFormError","description","isEmailValid","length","hasError","forEach","i","map","trim","detailsConfirmed","additionalFields","bookingInfoChangedHandler","newValue","changeName","nameChanged","changeEmail","emailChanged","errors","onSubmit","noValidate","htmlFor","id","placeholder","value","input","onInput","target","isLoading","_event","toggleAdditionalData","setParticipantName","setParticipantEmail","nylasCancelBookingFormCss","NylasCancelBookingFormStyle0","NylasCancelBookingForm","handleGoBackClicked","goBackButtonClicked","handleSubmitCancelBooking","cancellationReason","cancellationError","cancelBookingFormError","cancelBookedEventError","cancelBookingFormSubmitted","cancelBookingId","reason","handleOnChangeCancellationReason","for","multiline","onFocus","invalid","cancelBooking","nylasCancelledEventCardCss","NylasCancelledEventCardStyle0","NylasCancelledEventCard","handleCloseClicked","isClosing","cancelledEventCardError","closeCancelEventCardClicked","disabled","_","nylasschedulerconnector","resetCancel","t0","t1","timeInterval","floori","offseti","count","field","interval","date","arguments","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","setTime","end","every","isFinite","d","durationSecond","durationMinute","durationHour","durationDay","timeDay","setHours","setDate","getDate","getTimezoneOffset","setUTCHours","setUTCDate","getUTCDate","nylasDatePickerCss","NylasDatePickerStyle0","NylasDatePicker","selectedDate","getDates","lastDayOfMonth","getLastDayOfMonth","month","firstDayOfMonth","getFirstDayOfMonth","getDay","selectDate","dateSelected","changeMonth","change","getFullYear","getMonth","nextMonth","availableDaysInFuture","available_days_in_future","endDate","addDaysToCurrentDate","disableNextMonthButton","dates","monthChanged","isSelected","selectableDates","isSameDay","isDisabled","find","year","button","day","isSameMonth","style","animationDelay","selected","nylasLocaleSwitchCss","NylasLocaleSwitchStyle0","NylasLocaleSwitch","navigator","language","changeTimezone","timezone","timezoneChanged","changeLanguage","selectedLanguage","languageChanged","selectedOptionChangedHandler","getTimezoneLabelHTML","display","alignItems","justifyContent","width","fontSize","fontWeight","timezoneOptions","Object","keys","labelHTML","label","languageOptions","LANGUAGE_MAP","options","defaultSelectedOption","op","height","lang","selectTimezone","iconCss","NylasLogoStyle0","NylasLogo","viewBox","fill","xmlns","transform","nylasNotificationCss","NylasNotificationStyle0","NylasNotification","onError","handleNotification","onWarning","onInfo","onSuccess","defaultPrevented","ttl","allowedCategories","includes","category","notifications","window","setTimeout","notif","dismissNotification","Fragment","nylasSelectedEventCardCss","NylasSelectedEventCardStyle0","NylasSelectedEventCard","handleSelectedTimeslotChange","startTime","toLocaleString","endTime","nylasTimeslotPickerCss","NylasTimeslotPickerStyle0","NylasTimeslotPicker","handleConfirmedTimeslot","timeslot","timeslotConfirmed","handleMouseEnter","index","hoveredTimeslotIndex","handleMouseLeave","availableTimes","availability","times","getTimeslotId","onClickSelectTime","selectedTimeslotIndex","timeslotSelected","getTimeSlotLabel","timeFormat","hour","minute","format","selectedDateChanged","newVal","availabilityChanged","Array","time","onMouseEnter","onMouseLeave","selectTime"],"sources":["src/components/scheduler/nylas-booked-event-card/nylas-booked-event-card.scss?tag=nylas-booked-event-card&encapsulation=shadow","src/components/scheduler/nylas-booked-event-card/nylas-booked-event-card.tsx","src/components/scheduler/nylas-booking-form/nylas-booking-form.scss?tag=nylas-booking-form&encapsulation=shadow","src/components/scheduler/nylas-booking-form/nylas-booking-form.tsx","src/components/scheduler/nylas-cancel-booking-form/nylas-cancel-booking-form.scss?tag=nylas-cancel-booking-form&encapsulation=shadow","src/components/scheduler/nylas-cancel-booking-form/nylas-cancel-booking-form.tsx","src/components/scheduler/nylas-cancelled-event-card/nylas-cancelled-event-card.scss?tag=nylas-cancelled-event-card&encapsulation=shadow","src/components/scheduler/nylas-cancelled-event-card/nylas-cancelled-event-card.tsx","../../node_modules/.pnpm/d3-time@3.1.0/node_modules/d3-time/src/interval.js","../../node_modules/.pnpm/d3-time@3.1.0/node_modules/d3-time/src/duration.js","../../node_modules/.pnpm/d3-time@3.1.0/node_modules/d3-time/src/day.js","src/components/scheduler/nylas-date-picker/nylas-date-picker.scss?tag=nylas-date-picker&encapsulation=shadow","src/components/scheduler/nylas-date-picker/nylas-date-picker.tsx","src/components/scheduler/nylas-locale-switch/nylas-locale-switch.scss?tag=nylas-locale-switch&encapsulation=shadow","src/components/scheduler/nylas-locale-switch/nylas-locale-switch.tsx","src/common/icons/icon.css?tag=nylas-logo&encapsulation=scoped","src/common/icons/nylas-logo.tsx","src/components/scheduler/nylas-notification/nylas-notification.scss?tag=nylas-notification&encapsulation=shadow","src/components/scheduler/nylas-notification/nylas-notification.tsx","src/components/scheduler/nylas-selected-event-card/nylas-selected-event-card.scss?tag=nylas-selected-event-card&encapsulation=shadow","src/components/scheduler/nylas-selected-event-card/nylas-selected-event-card.tsx","src/components/scheduler/nylas-timeslot-picker/nylas-timeslot-picker.scss?tag=nylas-timeslot-picker&encapsulation=shadow","src/components/scheduler/nylas-timeslot-picker/nylas-timeslot-picker.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n}\n\nsp-theme {\n  height: inherit;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  font-family: var(--nylas-font-family);\n}\n\n.event-card-wrapper {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-900);\n  border-radius: var(--nylas-border-radius-3x);\n  position: relative;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n  width: 424px;\n  @media #{$mobile} {\n    width: 100%;\n    border-radius: 0px;\n  }\n  box-shadow:\n    0px 1px 4px rgba(0, 0, 0, 0.1),\n    0px 3px 6px rgba(0, 0, 0, 0.06);\n}\n\n.calendar-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  position: absolute;\n  top: -1.25rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: var(--nylas-base-0);\n  border: 1px solid var(--nylas-base-200);\n  color: var(--nylas-base-700);\n}\n\n.booked-event-header {\n  margin: 1.5rem 4rem;\n  overflow-wrap: anywhere;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  font-size: 1rem;\n  font-weight: 400;\n\n  h2 {\n    color: var(--nylas-base-600);\n    margin-top: 1.5rem;\n    margin-bottom: 0.25rem;\n    font-size: 1.125rem;\n    font-weight: 600;\n  }\n}\n\n.booking-date-time,\n.booking-participants {\n  padding: 0 1rem;\n  margin-top: 1.5rem;\n  margin-left: 3rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-self: flex-start;\n  position: relative;\n\n  svg {\n    color: var(--nylas-base-700);\n    position: absolute;\n    left: -10px;\n  }\n\n  .block {\n    display: block;\n  }\n\n  h3 {\n    color: var(--nylas-base-600);\n    margin: 0;\n    font-size: 1rem;\n    font-weight: 600;\n    line-height: 1.25rem;\n    text-align: justify;\n    margin-bottom: 4px;\n  }\n  p {\n    font-size: 16px;\n    margin: 0;\n    font-weight: 400;\n    text-align: justify;\n    color: var(--nylas-base-800);\n  }\n}\n\n.booking-participants {\n  margin-bottom: 1.5rem;\n}\n\n.booked-event-timezone {\n  display: flex;\n  color: var(--nylas-base-600);\n  margin-bottom: 1.5rem;\n  gap: 4px;\n  margin: 2rem;\n  align-items: center;\n  align-self: flex-end;\n}\n\n.footer {\n  padding: 0.5rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 0.5rem;\n  box-sizing: border-box;\n  background-color: var(--nylas-base-25);\n  width: 100%;\n  border-radius: 0 0 var(--nylas-border-radius-2x) var(--nylas-border-radius-2x);\n}\n\nsp-button {\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-700);\n  border: 1px solid var(--nylas-base-200);\n  border-radius: var(--nylas-border-radius-2x);\n  font-size: 16px;\n  padding: 8px;\n  font-family: var(--nylas-font-family);\n  font-weight: 600;\n  height: 48px;\n  line-height: 24px;\n  &.cancel {\n    color: var(--nylas-error);\n    &:hover,\n    &:focus {\n      border-color: var(--nylas-error);\n    }\n    &:active {\n      color: var(--nylas-error-pressed);\n      border-color: var(--nylas-error-pressed);\n    }\n  }\n  &.reschedule {\n    &:hover,\n    &:focus {\n      border-color: var(--nylas-primary);\n    }\n    &:active {\n      border-color: var(--nylas-base-600);\n    }\n  }\n}\n\nsp-divider {\n  background-color: var(--nylas-base-200);\n  height: 1px;\n}\n\ncalendar-check-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { Component, EventEmitter, h, Host, Prop } from '@stencil/core';\nimport { ConfigSettings, NylasSchedulerBookingData, NylasSchedulerConnector } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\nimport { addMinutesToCurrentTime, debug } from '@/utils/utils';\nimport { TIMEZONE_MAP } from '@/common/constants';\nimport { NylasEvent } from '@/common/types';\nimport { Event } from '@stencil/core';\nimport { NylasSchedulerErrorResponse, Timeslot } from '@nylas/core';\n\n/**\n * The `nylas-booked-event-card` component is a UI component that displays the booked event card.\n *\n * @part nbec - The booked event card host.\n * @part nbec__card - The booked event card.\n * @part nbec__title - The title of the booked event card.\n * @part nbec__description - The description of the booked event card.\n * @part nbec__button-outline - The cancel & reschedule button CTA.\n * @part nbec__cancel-cta - The cancel button CTA.\n * @part nbec__reschedule-cta - The reschedule button CTA.\n */\n@Component({\n  tag: 'nylas-booked-event-card',\n  styleUrl: 'nylas-booked-event-card.scss',\n  shadow: true,\n})\nexport class NylasBookedEventCard {\n  /**\n   * The booked event.\n   */\n  @Prop() readonly eventInfo!: NylasEvent;\n\n  /**\n   * Booking flow type.\n   */\n  @Prop() readonly rescheduleBookingId?: string;\n\n  /**\n   * The booking info used to book / reschedule the event.\n   */\n  @Prop() readonly bookingInfo?: NylasSchedulerBookingData;\n\n  /**\n   * The selected timezone.\n   */\n  @Prop() readonly selectedTimezone: string = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  /**\n   * The selected timeslot.\n   */\n  @Prop() readonly selectedTimeslot!: Timeslot;\n\n  /**\n   * The config settings for the scheduler.\n   */\n  @Prop() readonly configSettings?: ConfigSettings;\n\n  /**\n   * Cancel booking button clicked event.\n   */\n  @Event() readonly cancelBookingButtonClicked!: EventEmitter<{ bookingId: string }>;\n\n  /**\n   * Reschedule button clicked event.\n   * */\n  @Event() readonly rescheduleButtonClicked!: EventEmitter<{ bookingId: string; errorHandler?: (error: NylasSchedulerErrorResponse) => void }>;\n\n  /**\n   * This event is fired when an error occurs while rescheduling the booking.\n   */\n  @Event() readonly rescheduleBookedEventError!: EventEmitter<NylasSchedulerErrorResponse>;\n\n  /**\n   * This event is fired when an error occurs while cancelling the booking.\n   */\n  @Event() readonly cancelBookedEventValidationError!: EventEmitter<{\n    error: {\n      title: string;\n      message: string;\n    };\n  }>;\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  async componentWillLoad() {\n    debug(`[nylas-booked-event-card] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-booked-event-card] Component did load`);\n  }\n\n  private handleCancelBookingButtonClicked = () => {\n    const today = new Date();\n    const minCancellationNotice = this.configSettings?.scheduler.min_cancellation_notice;\n    const dateTillCancellation = addMinutesToCurrentTime(today, minCancellationNotice);\n    if (today.getTime() < dateTillCancellation.getTime()) {\n      this.cancelBookedEventValidationError.emit({\n        error: {\n          title: 'Cancellation Error',\n          message: `You cannot cancel the booking within ${minCancellationNotice} minutes of the event.`,\n        },\n      });\n    } else {\n      this.cancelBookingButtonClicked.emit({ bookingId: this.eventInfo.booking_id });\n    }\n  };\n\n  private handleRescheduleButtonClicked = () => {\n    const errorHandler = (error: NylasSchedulerErrorResponse) => {\n      this.rescheduleBookedEventError.emit(error);\n    };\n    this.rescheduleButtonClicked.emit({ bookingId: this.eventInfo.booking_id, errorHandler });\n  };\n\n  private getOrganizer = (eventInfo: NylasEvent) => {\n    const organizer = eventInfo?.organizer;\n    return organizer;\n  };\n\n  getPaticipantType = (type: string) => {\n    switch (type) {\n      case 'host':\n        return 'Host';\n      case 'you':\n        return 'You';\n      default:\n        return '';\n    }\n  };\n\n  @RegisterComponent<NylasBookedEventCard, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-booked-event-card',\n    stateToProps: new Map([\n      ['scheduler.bookingInfo', 'bookingInfo'],\n      ['scheduler.rescheduleBookingId', 'rescheduleBookingId'],\n      ['scheduler.selectedTimezone', 'selectedTimezone'],\n      ['scheduler.selectedTimeslot', 'selectedTimeslot'],\n      ['scheduler.configSettings', 'configSettings'],\n    ]),\n    eventToProps: {\n      cancelBookingButtonClicked: async (event: CustomEvent<{ bookingId: string }>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.setCancel(event.detail.bookingId);\n      },\n      rescheduleButtonClicked: async (\n        event: CustomEvent<{ bookingId: string; errorHandler?: (error: NylasSchedulerErrorResponse) => void }>,\n        nylasSchedulerConnector: NylasSchedulerConnector,\n      ) => {\n        const result = await nylasSchedulerConnector.scheduler.setReschedule(event.detail.bookingId);\n        const { errorHandler } = event.detail;\n        if (errorHandler && (!result || 'error' in result)) {\n          errorHandler(result);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host part=\"nbec\">\n        <sp-theme theme=\"spectrum\" color=\"dark\" scale=\"medium\">\n          <div class=\"booked-event-timezone\">\n            <globe-icon></globe-icon>\n            {TIMEZONE_MAP[this.selectedTimezone]}\n          </div>\n          <div class=\"event-card-wrapper\" part=\"nbec__card\">\n            <div class=\"calendar-icon\">\n              <calendar-check-icon />\n            </div>\n            <div class=\"booked-event-header\">\n              <h2 slot=\"card-title\" part=\"nbec__title\">\n                Booking {!!this.rescheduleBookingId ? 'rescheduled' : 'confirmed'}!\n              </h2>\n              <div part=\"nbec__description\">\n                {this.getOrganizer(this.eventInfo)?.name || this.getOrganizer(this.eventInfo)?.email}&nbsp;&amp;&nbsp;\n                {this.bookingInfo?.primaryParticipant?.name || this.bookingInfo?.primaryParticipant?.email}\n              </div>\n            </div>\n            <sp-divider></sp-divider>\n            <div class=\"booking-date-time\">\n              <checkmark-circle-icon></checkmark-circle-icon>\n              <h3>Booking date and time</h3>\n              <p>\n                {new Date(this.selectedTimeslot?.start_time).toLocaleDateString(undefined, { dateStyle: 'full' })} <br />\n                {new Date(this.selectedTimeslot?.start_time).toLocaleTimeString(undefined, { timeStyle: 'short' })} -{' '}\n                {new Date(this.selectedTimeslot?.end_time).toLocaleTimeString(undefined, { timeStyle: 'short' })}\n              </p>\n            </div>\n            <div class=\"booking-participants\">\n              {/* <people-icon></people-icon>\n              <h3>All participants</h3>\n              {this.eventInfo?.participants && (\n                <p>\n                  {this.eventInfo?.participants?.map((participant: NylasEvent['participants'][0]) => {\n                    return (\n                      <span class=\"block\">\n                        {participant.email} {this.getPaticipantType(participant.type) && `(${this.getPaticipantType(participant.type)})`}\n                      </span>\n                    );\n                  })}\n                </p>\n              )} */}\n            </div>\n            <sp-divider></sp-divider>\n            <div class=\"footer\">\n              <sp-button variant=\"secondary\" treatment=\"outline\" class=\"cancel\" onClick={this.handleCancelBookingButtonClicked} part=\"nbec__button-outline nbec__cancel-cta\">\n                Cancel booking\n              </sp-button>\n              <sp-button variant=\"secondary\" treatment=\"outline\" class=\"reschedule\" onClick={this.handleRescheduleButtonClicked} part=\"nbec__button-outline nbec__reschedule-cta\">\n                Reschedule\n              </sp-button>\n            </div>\n          </div>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n","@import '../../../common/mixins/inputs.scss';\n@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  height: 100%;\n  @include default-css-variables;\n}\n\n.nylas-booking-form {\n  width: 100%;\n  padding: 1.5rem;\n  box-sizing: border-box;\n  height: 450px;\n  overflow-y: auto;\n  height: 100%;\n}\n\nform {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n}\n\nsp-textfield {\n  --spectrum-corner-radius-100: var(--nylas-border-radius-2x); // Set guest input radius\n  --spectrum-textfield-border-color: var(--nylas-base-300);\n  position: relative;\n  width: 100%;\n  height: 48px;\n  margin-bottom: 16px;\n  color: var(--nylas-base-500);\n}\n\n.cta {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  @media #{$mobile} {\n    flex-direction: column-reverse;\n  }\n  align-items: flex-start;\n  justify-content: space-between;\n  gap: 0.5rem;\n  padding: 10px;\n  box-sizing: border-box;\n  border-top: 1px solid var(--nylas-base-200);\n}\n\nsp-button {\n  background-color: transparent;\n  color: var(--nylas-base-800);\n  border-radius: var(--nylas-border-radius-2x);\n  --button-width: 50%;\n  font-family: var(--nylas-font-family);\n  font-size: 16px;\n  font-weight: 600;\n  border: none;\n  height: 48px;\n  padding: 14px;\n  @media #{$mobile} {\n    --button-width: 100%;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--nylas-base-100);\n    color: var(--nylas-primary);\n    border-radius: var(--nylas-border-radius-2x);\n  }\n  &:active {\n    background-color: var(--nylas-base-200);\n    color: var(--nylas-base-800);\n  }\n\n  &.back {\n    width: var(--button-width);\n    background-color: transparent;\n    color: var(--nylas-base-700);\n    outline: 1px solid var(--nylas-base-300);\n    &:hover,\n    &:focus {\n      outline-color: var(--nylas-primary);\n    }\n    &:active {\n      outline: 2px solid var(--nylas-base-600);\n    }\n  }\n\n  &.book {\n    width: var(--button-width);\n    background-color: var(--nylas-primary);\n    color: var(--nylas-base-0);\n    &:hover,\n    &:focus {\n      background-color: var(--nylas-base-600);\n    }\n    &:active {\n      background-color: var(--nylas-base-800);\n    }\n  }\n}\n\n.input-wrapper {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 4px;\n  margin-bottom: 1rem;\n  input::placeholder {\n    color: var(--nylas-base-300);\n  }\n  label,\n  input {\n    font-family: var(--nylas-font-family);\n  }\n  .help-text {\n    margin: 0;\n    color: var(--nylas-error);\n  }\n}\n\n.button-wrapper {\n  width: 100%;\n  align-items: flex-start;\n  height: max-content;\n  position: relative;\n}\n\nsp-infield-button {\n  --spectrum-infield-button-background-color: transparent;\n  --spectrum-infield-button-background-color-hover: transparent;\n  --spectrum-infield-button-background-color-active: transparent;\n  --spectrum-infield-button-border-color: transparent;\n  --spectrum-infield-button-border-width: 1px;\n  --spectrum-infield-button-border-radius: 0;\n  color: var(--nylas-base-600);\n  background: transparent;\n  border: none;\n  outline: 1px solid var(--nylas-base-300);\n  border-radius: 0 var(--nylas-border-radius-2x) var(--nylas-border-radius-2x) 0;\n  height: 52px;\n  width: 52px;\n  display: flex;\n  position: absolute;\n  right: 0;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  sp-icon-cross300 {\n    color: var(--nylas-base-600);\n  }\n  &.error {\n    border-width: 2px;\n    border-color: var(--nylas-error);\n  }\n}\n\ninput[type='text'],\ninput[type='email'] {\n  @include textfield;\n  &.guest-email {\n    color: var(--nylas-base-900);\n    padding-right: 52px; // Infield button width\n  }\n}\n\nlabel {\n  @include input-label;\n}\n","import { Component, Element, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConnector } from '../../..';\nimport type { NylasEvent, NylasSchedulerBookingData } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\nimport { debug } from '@/utils/utils';\nimport { Notification, NylasSchedulerBookingParticipant } from '@nylas/core';\n\nconst emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\n/**\n * The `nylas-booking-form` component is a UI component that allows users to book an event.\n *\n * The booking form component.\n * @part nbf - The booking form host.\n * @part nbf__input-label - The input label.\n * @part nbf__input-textfield - The input textfield.\n * @part nbf__button-ghost - The ghost button for adding guests.\n * @part nbf__button-primary - The primary button for booking.\n * @part nbf__button-outline - The outline button for canceling.\n * @slot custom-booking-form - The custom booking form.\n */\n@Component({\n  tag: 'nylas-booking-form',\n  styleUrl: 'nylas-booking-form.scss',\n  shadow: true,\n})\nexport class NylasBookingForm {\n  /**\n   * The host element\n   */\n  @Element() readonly host!: HTMLElement;\n\n  /**\n   * The loading state.\n   */\n  @Prop() readonly isLoading?: boolean;\n\n  /**\n   * The booking info.\n   */\n  @Prop() readonly bookingInfo?: NylasSchedulerBookingData;\n\n  /**\n   * The booked event (Used to track if a booking is created in an eventOverride).\n   */\n  @Prop() readonly eventInfo?: NylasEvent;\n\n  /**\n   * This event is fired when the name is changed.\n   */\n  @Event() nameChanged!: EventEmitter<string>;\n\n  /**\n   * This event is fired when the email is changed.\n   */\n  @Event() emailChanged!: EventEmitter<string>;\n\n  /**\n   * This event is fired when the cancel button is clicked.\n   */\n  @Event() backButtonClicked!: EventEmitter<boolean>;\n\n  /**\n   * This event is fired when the book button is clicked.\n   */\n  @Event() detailsConfirmed!: EventEmitter<NylasSchedulerBookingData>;\n\n  /**\n   * This event is fired when an error occurs in the booking form.\n   */\n  @Event() bookingFormError!: EventEmitter<Partial<Notification>>;\n\n  /**\n   * The name of the user.\n   */\n  @State() name: string = '';\n\n  /**\n   * The email address of the user.\n   */\n  @State() email: string = '';\n\n  /**\n   * The guests of the user.\n   */\n  @State() guestEmails: string[] = [];\n\n  /**\n   * Guest email input errors.\n   */\n  @State() guestEmailErrors: { [key: number]: string } = {};\n\n  /**\n   * State to check if name is valid.\n   */\n  @State() isNameValid: boolean = true;\n\n  /**\n   * State to check if email is valid.\n   */\n  @State() isEmailValid: boolean = true;\n\n  /**\n   * Error message state.\n   */\n  @State() validationError: { name: string; email: string } = { name: '', email: '' };\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  componentWillLoad() {\n    debug('nylas-booking-form', 'componentWillLoad', this.bookingInfo);\n    if (this.bookingInfo) {\n      this.name = this.bookingInfo.primaryParticipant?.name;\n      this.email = this.bookingInfo.primaryParticipant?.email;\n    }\n  }\n\n  @Watch('bookingInfo')\n  bookingInfoChangedHandler(newValue: NylasSchedulerBookingData | undefined) {\n    if (newValue && newValue.primaryParticipant) {\n      this.name = newValue.primaryParticipant.name;\n      this.email = newValue.primaryParticipant.email;\n    }\n  }\n\n  /**\n   * Change the name.\n   * @param name The name to select.\n   */\n  changeName(name: string) {\n    // Reset the validation error\n    this.isNameValid = true;\n    this.validationError.name = '';\n\n    this.name = name;\n    this.nameChanged.emit(name);\n  }\n\n  /**\n   * Change the email.\n   * @param email The email to select.\n   */\n  changeEmail(email: string) {\n    // Reset the validation error\n    this.isEmailValid = true;\n    this.validationError.email = '';\n\n    this.email = email;\n    this.emailChanged.emit(email);\n  }\n\n  resetGuestEmailError(guestIndex: number) {\n    const errors = { ...this.guestEmailErrors };\n    delete errors[guestIndex];\n    this.guestEmailErrors = { ...errors };\n  }\n\n  /**\n   * Handle guest emails changed.\n   */\n  handleGuestChange = (guestIndex: number, email: string) => {\n    // Reset the validation error\n    this.resetGuestEmailError(guestIndex);\n    const guests = [...this.guestEmails];\n    guests[guestIndex] = email;\n    this.guestEmails = [...guests];\n  };\n\n  /**\n   * Handle guest input blur.\n   */\n  handleGuestBlur = (guestIndex: number, email: string) => {\n    this.resetGuestEmailError(guestIndex);\n\n    if (email === '') {\n      this.guestEmailErrors[guestIndex] = 'Email is required';\n      return;\n    }\n    if (!emailRegex.test(email)) {\n      this.guestEmailErrors[guestIndex] = 'Enter a valid email address';\n      return;\n    }\n    this.handleGuestChange(guestIndex, email);\n  };\n\n  /**\n   * Handle add guest button clicked.\n   */\n  addGuestButtonClickedHandler = () => {\n    this.guestEmails = [...this.guestEmails, ''];\n  };\n\n  /**\n   * Handle remove guest button clicked.\n   */\n  removeGuestButtonClickHandler = (e: Event, guestIndex: number) => {\n    e.preventDefault();\n    this.resetGuestEmailError(guestIndex);\n\n    const guests = [...this.guestEmails];\n    guests.splice(guestIndex, 1);\n    this.guestEmails = [...guests];\n  };\n\n  /**\n   * Handle back button clicked.\n   */\n  handleBackButtonClicked = () => {\n    this.backButtonClicked.emit();\n  };\n\n  /**\n   *\n   * Handle book button clicked.\n   */\n  bookButtonClickedHandler = async (e: Event) => {\n    e.preventDefault();\n    debug('nylas-booking-form', 'bookButtonClickedHandler', this.bookingInfo);\n    const name = this.name || this.bookingInfo?.primaryParticipant?.name;\n    const email = this.email || this.bookingInfo?.primaryParticipant?.email;\n\n    if (!name || name === '') {\n      this.isNameValid = false;\n      this.validationError.name = 'Name is required';\n      this.bookingFormError.emit({\n        title: 'Booking form error',\n        description: 'Name is required',\n      });\n      return;\n    }\n    if (!email || email === '') {\n      this.isEmailValid = false;\n      this.validationError.email = 'Email is required';\n      this.bookingFormError.emit({\n        title: 'Booking form error',\n        description: 'Email is required',\n      });\n      return;\n    }\n    if (!emailRegex.test(email)) {\n      this.isEmailValid = false;\n      this.validationError.email = 'Enter a valid email address';\n      this.bookingFormError.emit({\n        title: 'Booking form error',\n        description: 'Invalid email',\n      });\n      return;\n    }\n\n    let guests: NylasSchedulerBookingParticipant[] = [];\n    if (this.guestEmails.length > 0) {\n      let hasError = false;\n      this.guestEmails.forEach((email: string, i: number) => {\n        if (email === '') {\n          hasError = true;\n          this.guestEmailErrors = { ...this.guestEmailErrors, [i]: 'Email is required' };\n        } else if (!emailRegex.test(email)) {\n          hasError = true;\n          this.guestEmailErrors = { ...this.guestEmailErrors, [i]: 'Enter a valid email address' };\n        }\n      });\n      if (hasError) {\n        this.bookingFormError.emit({\n          title: 'Booking form error',\n          description: 'Invalid guest email',\n        });\n        return;\n      }\n      guests = this.guestEmails.map((email: string) => ({ name: '', email: email.trim() }));\n    } else if (this.bookingInfo?.guests) {\n      guests = this.bookingInfo?.guests;\n    }\n\n    this.detailsConfirmed.emit({\n      primaryParticipant: {\n        name: name,\n        email: email,\n      },\n      guests: guests,\n      additionalFields: {\n        ...this.bookingInfo?.additionalFields,\n      },\n    });\n  };\n\n  @RegisterComponent<NylasBookingForm, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-booking-form',\n    stateToProps: new Map([\n      ['scheduler.isLoading', 'isLoading'],\n      ['scheduler.bookingInfo', 'bookingInfo'],\n      ['scheduler.eventInfo', 'eventInfo'],\n    ]),\n    eventToProps: {\n      backButtonClicked: async (_event: CustomEvent<boolean>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.toggleAdditionalData(false);\n      },\n      nameChanged: async (event: CustomEvent<string>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.setParticipantName(event.detail);\n      },\n      emailChanged: async (event: CustomEvent<string>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.setParticipantEmail(event.detail);\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <form onSubmit={e => this.bookButtonClickedHandler(e)} noValidate>\n          <div class=\"nylas-booking-form\">\n            <slot name=\"custom-booking-form\">\n              <div class=\"input-wrapper\">\n                <label htmlFor=\"name\" class={{ 'input-label': true, 'error': !this.isNameValid }} part=\"nbf__input-label\">\n                  Name <span class=\"required\">*</span>\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  value={this.name}\n                  class={{\n                    input: true,\n                    error: !this.isNameValid,\n                  }}\n                  part=\"nbf__input-textfield\"\n                  onInput={(e: Event) => this.changeName((e.target as HTMLInputElement)?.value)}\n                ></input>\n                <p class=\"help-text\">{this.validationError.name}</p>\n              </div>\n              <div class=\"input-wrapper\">\n                <label htmlFor=\"email\" class={{ 'input-label': true, 'error': !this.isEmailValid }} part=\"nbf__input-label\">\n                  Email <span class=\"required\">*</span>\n                </label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  value={this.email}\n                  class={{\n                    input: true,\n                    error: !this.isEmailValid,\n                  }}\n                  part=\"nbf__input-textfield\"\n                  onInput={(e: Event) => this.changeEmail((e.target as HTMLInputElement)?.value)}\n                ></input>\n                <p class=\"help-text\">{this.validationError.email}</p>\n              </div>\n              {/* <div class=\"input-wrapper\">\n                  <sp-button class=\"add-guest\" variant=\"primary\" part=\"nbf__button-ghost\" onClick={this.addGuestButtonClickedHandler}>\n                    <add-circle-icon slot=\"icon\"></add-circle-icon>\n                    Add guest\n                  </sp-button>\n                  {this.guestEmails.map((email, index) => (\n                    <div class=\"input-wrapper button-wrapper\">\n                      <input\n                        type=\"email\"\n                        id={`guest-email-${index}`}\n                        class={{\n                          'guest-email': true,\n                          'error': !!this.guestEmailErrors[index],\n                        }}\n                        placeholder=\"Enter guest email\"\n                        value={email}\n                        data-index={index}\n                        part=\"nbf__input-textfield\"\n                        onBlur={(e: Event) => this.handleGuestBlur(index, (e.target as HTMLInputElement)?.value)}\n                        onInput={(e: Event) => this.handleGuestChange(index, (e.target as HTMLInputElement)?.value)}\n                      ></input>\n                      <sp-infield-button\n                        size=\"s\"\n                        class={{\n                          'remove-guest': true,\n                          'error': !!this.guestEmailErrors[index],\n                        }}\n                        treatment=\"outline\"\n                        inline=\"end\"\n                        onClick={(e: Event) => this.removeGuestButtonClickHandler(e, index)}\n                      >\n                        <sp-icon-cross300 size=\"s\"></sp-icon-cross300>\n                      </sp-infield-button>\n                      <p class=\"help-text\">{this.guestEmailErrors[index]}</p>\n                    </div>\n                  ))}\n                </div> */}\n            </slot>\n          </div>\n          <div class=\"cta\">\n            <sp-button treatment=\"outline\" variant=\"secondary\" class={'back'} part=\"nbf__button-outline\" onClick={this.handleBackButtonClicked}>\n              <slot name=\"booking-form-back-label\">Back</slot>\n            </sp-button>\n            <sp-button variant=\"primary\" class={'book'} part=\"nbf__button-primary\" type=\"submit\">\n              {this.isLoading && <loading-icon slot=\"icon\"></loading-icon>}\n              <slot name=\"booking-form-book-label\">Book now</slot>\n            </sp-button>\n          </div>\n        </form>\n      </Host>\n    );\n  }\n}\n","@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  width: 400px;\n  @include default-css-variables;\n}\n\nsp-theme {\n  height: inherit;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  font-family: var(--nylas-font-family);\n}\n\n.nylas-cancel-booking-form {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-800);\n  border-radius: var(--nylas-border-radius-2x);\n  padding: 1.5rem;\n  position: relative;\n  box-shadow:\n    0px 1px 4px rgba(0, 0, 0, 0.1),\n    0px 3px 6px rgba(0, 0, 0, 0.06);\n}\n\n.nylas-cancel-booking-form__title {\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 0;\n  color: var(--nylas-base-900);\n}\n\n.nylas-cancel-booking-form__description {\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 140%;\n  color: var(--nylas-base-600);\n}\n\n.nylas-cancel-booking-form__calendar-icon {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  position: absolute;\n  top: -1.25rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: var(--nylas-base-0);\n  border: 1px solid var(--nylas-base-200);\n}\n\ncalendar-cancel-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\nsp-button {\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-700);\n  border: 1px solid var(--nylas-base-200);\n  border-radius: var(--nylas-border-radius-2x);\n  font-size: 16px;\n  font-weight: 600;\n  width: 100%;\n  height: 48px;\n  padding: 8px;\n  line-height: 24px;\n  font-family: var(--nylas-font-family);\n  &.cancel {\n    margin-top: 1.25rem;\n    background-color: var(--nylas-primary);\n    color: var(--nylas-base-0);\n    &:hover,\n    &:focus {\n      background-color: var(--nylas-base-600);\n    }\n    &:active {\n      background-color: var(--nylas-base-800);\n    }\n  }\n  &.back {\n    margin-top: 0.5rem;\n    &:hover,\n    &:focus {\n      border-color: var(--nylas-primary);\n    }\n    &:active {\n      border-color: var(--nylas-base-600);\n    }\n  }\n}\n\nsp-field-label {\n  margin-top: 1rem;\n  display: flex;\n  color: var(--nylas-base-800);\n  font-size: 14px;\n  &.error {\n    color: var(--nylas-error);\n  }\n  span.required {\n    color: var(--nylas-error);\n  }\n}\nsp-textfield {\n  --spectrum-textfield-border-color: var(--nylas-base-300);\n  --spectrum-textfield-icon-color-invalid: var(--nylas-error);\n  position: relative;\n  width: 100%;\n  height: 48px;\n  margin-bottom: 16px;\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-500);\n  &.error {\n    --spectrum-textfield-border-color: var(--nylas-error);\n  }\n}\n\nsp-help-text {\n  margin: 0.25rem 0 1rem 0;\n  color: var(--nylas-error);\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { Component, Event, EventEmitter, h, Host, Prop, State } from '@stencil/core';\nimport { NylasSchedulerConnector } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\nimport { debug } from '@/utils/utils';\nimport { Notification, NylasSchedulerErrorResponse } from '@nylas/core';\n\n/**\n * The `nylas-cancel-booking-form` component is a UI component that allows users to cancel a booking.\n */\n@Component({\n  tag: 'nylas-cancel-booking-form',\n  styleUrl: 'nylas-cancel-booking-form.scss',\n  shadow: true,\n})\nexport class NylasCancelBookingForm {\n  /**\n   * The booking ID to cancel.\n   */\n  @Prop() readonly cancelBookingId!: string;\n\n  /**\n   * This event is fired when the Go back button is clicked on the cancel booking form.\n   */\n  @Event() readonly goBackButtonClicked!: EventEmitter<void>;\n\n  /**\n   * This event is fired when the cancel booking form is submitted.\n   */\n  @Event() readonly cancelBookingFormSubmitted!: EventEmitter<{ bookingId: string; reason: string; errorHandler?: (error: NylasSchedulerErrorResponse) => void }>;\n\n  /**\n   * This event is fired when an error occurs while cancelling the booking.\n   */\n  @Event() readonly cancelBookedEventError!: EventEmitter<NylasSchedulerErrorResponse>;\n\n  /**\n   * This event is fired when an error occurs in the booking form.\n   */\n  @Event() cancelBookingFormError!: EventEmitter<Partial<Notification>>;\n\n  /**\n   * The reason for cancellation.\n   */\n  @State() cancellationReason: string = '';\n\n  @State() cancellationError: string = '';\n\n  connectedCallback() {\n    debug(`[nylas-cancel-booking-form] Component connected`);\n  }\n\n  async componentWillLoad() {\n    debug(`[nylas-cancel-booking-form] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-cancel-booking-form] Component did load`);\n  }\n\n  disconnectedCallback() {\n    debug(`[nylas-cancel-booking-form] Component disconnected`);\n  }\n\n  private handleGoBackClicked = () => {\n    this.goBackButtonClicked.emit();\n  };\n\n  private handleSubmitCancelBooking = (event: Event) => {\n    event.preventDefault();\n    if (!this.cancellationReason) {\n      this.cancellationError = 'Please provide a reason for cancellation.';\n      this.cancelBookingFormError.emit({ title: 'Cancel booking form error', description: 'Please provide a reason for cancellation.' });\n      return;\n    }\n\n    debug(`[nylas-cancel-booking-form] Cancel booking form submitted with reason: ${this.cancellationReason}`);\n    const errorHandler = (error: NylasSchedulerErrorResponse) => {\n      this.cancelBookedEventError.emit(error);\n    };\n    this.cancelBookingFormSubmitted.emit({ bookingId: this.cancelBookingId, reason: this.cancellationReason, errorHandler });\n  };\n\n  private handleOnChangeCancellationReason = (event: Event) => {\n    this.cancellationError = '';\n    this.cancellationReason = (event.target as HTMLInputElement).value;\n  };\n\n  @RegisterComponent<NylasCancelBookingForm, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-cancel-booking-form',\n    eventToProps: {\n      cancelBookingFormSubmitted: async (\n        event: CustomEvent<{ bookingId: string; reason: string; errorHandler?: (error: NylasSchedulerErrorResponse) => void }>,\n        nylasSchedulerConnector: NylasSchedulerConnector,\n      ) => {\n        const result = await nylasSchedulerConnector.scheduler.cancelBooking(event.detail.bookingId);\n        const { errorHandler } = event.detail;\n        if (errorHandler && (!result || 'error' in result)) {\n          errorHandler(result);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host part=\"ncec\">\n        <sp-theme theme=\"spectrum\" scale=\"medium\">\n          <div class=\"nylas-cancel-booking-form\" part=\"ncec__card\">\n            <div class=\"nylas-cancel-booking-form__calendar-icon\" part=\"ncec__icon\">\n              <calendar-cancel-icon />\n            </div>\n            <h3 class=\"nylas-cancel-booking-form__title\" part=\"ncec__title\">\n              Cancel booking?\n            </h3>\n            <div class=\"nylas-cancel-booking-form__description\" part=\"ncec__description\">\n              Your current timeslot will become available to others.\n            </div>\n            <form onSubmit={this.handleSubmitCancelBooking}>\n              <sp-field-label for=\"cancel-reason\" class={this.cancellationError ? 'error' : ''}>\n                Reason for cancellation <span class=\"required\">*</span>\n              </sp-field-label>\n              <sp-textfield\n                id=\"cancel-reason\"\n                class={this.cancellationError ? 'error' : ''}\n                part=\"ncec__reason-textarea\"\n                multiline\n                value={this.cancellationReason}\n                onInput={this.handleOnChangeCancellationReason}\n                onFocus={this.handleOnChangeCancellationReason}\n                invalid={!!this.cancellationError}\n              >\n                <sp-help-text slot=\"negative-help-text\">{this.cancellationError}</sp-help-text>\n              </sp-textfield>\n              <sp-button variant=\"primary\" class=\"cancel\" type=\"submit\" part=\"ncec__button-cta\">\n                Cancel booking\n              </sp-button>\n              <sp-button variant=\"secondary\" class=\"back\" treatment=\"outline\" part=\"ncec__button-outline\" onClick={this.handleGoBackClicked}>\n                Go back\n              </sp-button>\n            </form>\n          </div>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n","@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n}\n\nsp-theme {\n  height: inherit;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  font-family: var(--nylas-font-family);\n}\n\n.nylas-cancelled-event-card {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 400px;\n  @media #{$mobile} {\n    width: inherit;\n  }\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-800);\n  border-radius: var(--nylas-border-radius-2x);\n  padding: 1.5rem;\n  position: relative;\n  box-shadow:\n    0px 1px 4px rgba(0, 0, 0, 0.1),\n    0px 3px 6px rgba(0, 0, 0, 0.06);\n}\n\n.nylas-cancelled-event-card__title {\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 24px;\n  color: var(--nylas-base-900);\n  text-align: center;\n}\n\n.nylas-cancelled-event-description {\n  font-size: 16px;\n  font-weight: 500;\n  color: var(--nylas-base-600);\n}\n\n.nylas-cancelled-event-card__calendar-icon {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  position: absolute;\n  top: -1.25rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: var(--nylas-base-0);\n  border: 1px solid var(--nylas-base-200);\n}\n\n.nylas-cancelled-event-card__cta {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-top: 1rem;\n}\n\ncalendar-cancel-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\nsp-button {\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-700);\n  border: 1px solid var(--nylas-base-200);\n  border-radius: var(--nylas-border-radius-2x);\n  font-size: 1rem;\n  height: 48px;\n  padding: 8px;\n  line-height: 24px;\n  width: 100%;\n  &:hover,\n  &:focus {\n    border-color: var(--nylas-primary);\n  }\n  &:active {\n    border-color: var(--nylas-base-600);\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { Component, Event, EventEmitter, h, Host, Prop, State } from '@stencil/core';\nimport { NylasEvent, NylasSchedulerConnector, NylasSchedulerErrorResponse } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\nimport { debug } from '@/utils/utils';\nimport { ConfigSettings } from '@/stores/scheduler-store';\n\n/**\n * The `nylas-cancelled-event-card` component is a UI component that displays the cancelled event card.\n *\n * @part ncec - The cancelled event card host.\n * @part ncec__icon - The calendar icon.\n * @part ncec__title - The title of the cancelled event card.\n * @part ncec__description - The description of the cancelled event card.\n * @part ncec__button-outline - The close button CTA.\n * @part ncec__card - The cancelled event card.\n */\n@Component({\n  tag: 'nylas-cancelled-event-card',\n  styleUrl: 'nylas-cancelled-event-card.scss',\n  shadow: true,\n})\nexport class NylasCancelledEventCard {\n  /**\n   * The participant's name who booked the event / is logged in.\n   */\n  @Prop() readonly cancelledEventInfo!: Partial<NylasEvent>;\n\n  /**\n   * Closing state of the cancelled event card button.\n   */\n  @State() isClosing: boolean = false;\n\n  /**\n   * The config settings for the scheduler.\n   */\n  @Prop() readonly configSettings?: ConfigSettings;\n\n  /**\n   * This event is fired when the close button is clicked on the cancelled event card.\n   */\n  @Event() readonly closeCancelEventCardClicked!: EventEmitter<{ errorHandler?: (error: NylasSchedulerErrorResponse) => void }>;\n\n  /**\n   * This event is fired when an error occurs.\n   */\n  @Event() readonly cancelledEventCardError!: EventEmitter<NylasSchedulerErrorResponse>;\n\n  connectedCallback() {\n    debug(`[nylas-cancelled-event-card] Component connected`);\n  }\n\n  async componentWillLoad() {\n    debug(`[nylas-cancelled-event-card] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-cancelled-event-card] Component did load`);\n  }\n\n  disconnectedCallback() {\n    debug(`[nylas-cancelled-event-card] Component disconnected`);\n  }\n\n  private handleCloseClicked = () => {\n    this.isClosing = true;\n    const errorHandler = (error: NylasSchedulerErrorResponse) => {\n      this.cancelledEventCardError.emit(error);\n      this.isClosing = false;\n    };\n    this.closeCancelEventCardClicked.emit({ errorHandler });\n  };\n\n  @RegisterComponent<NylasCancelledEventCard, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-cancelled-event-card',\n    stateToProps: new Map([['scheduler.configSettings', 'configSettings']]),\n    eventToProps: {\n      closeCancelEventCardClicked: async (_: CustomEvent<{ errorHandler?: (error: NylasSchedulerErrorResponse) => void }>, nylasschedulerconnector: NylasSchedulerConnector) => {\n        const result = await nylasschedulerconnector.scheduler.resetCancel();\n\n        const { errorHandler } = _.detail;\n        if (errorHandler && (!result || 'error' in result)) {\n          errorHandler(result);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host part=\"ncec\">\n        <sp-theme theme=\"spectrum\" color=\"dark\" scale=\"medium\">\n          <div class=\"nylas-cancelled-event-card\" part=\"ncec__card\">\n            <div class=\"nylas-cancelled-event-card__calendar-icon\" part=\"ncec__icon\">\n              <calendar-cancel-icon />\n            </div>\n            <h3 class=\"nylas-cancelled-event-card__title\" part=\"ncec__title\">\n              Your booking has been cancelled successfully!\n            </h3>\n            <div class=\"nylas-cancelled-event-card__description\" part=\"ncec__description\">\n              A cancellation email has been sent to {this.configSettings?.organizer?.name || 'the participants'}.\n            </div>\n            <div class=\"nylas-cancelled-event-card__cta\">\n              <sp-button variant=\"secondary\" treatment=\"outline\" disabled={this.isClosing} part=\"ncec__button-outline\" onClick={this.handleCloseClicked}>\n                {this.isClosing ? 'Closing...' : 'Close'}\n              </sp-button>\n            </div>\n          </div>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n","const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","import {timeInterval} from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nexport const timeDay = timeInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport const timeDays = timeDay.range;\n\nexport const utcDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return date.getUTCDate() - 1;\n});\n\nexport const utcDays = utcDay.range;\n\nexport const unixDay = timeInterval((date) => {\n  date.setUTCHours(0, 0, 0, 0);\n}, (date, step) => {\n  date.setUTCDate(date.getUTCDate() + step);\n}, (start, end) => {\n  return (end - start) / durationDay;\n}, (date) => {\n  return Math.floor(date / durationDay);\n});\n\nexport const unixDays = unixDay.range;\n","@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  min-height: 444px;\n  @media #{$mobile} {\n    min-height: auto;\n  }\n  @include default-css-variables;\n}\n\n.nylas-date-picker {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n.header {\n  margin: 0 0.5rem;\n  height: 48px;\n  h2 {\n    font-size: 1.3125rem;\n    font-weight: 400;\n    line-height: 1rem;\n    color: var(--nylas-base-800);\n\n    strong {\n      font-weight: 600;\n    }\n  }\n}\n\n@keyframes pulsate {\n  0% {\n    background-color: var(--nylas-base-50);\n  }\n  50% {\n    background-color: var(--nylas-base-100);\n  }\n  100% {\n    background-color: var(--nylas-base-50);\n  }\n}\n\n.dates {\n  display: grid;\n  justify-items: center;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n\n  .date {\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    height: 48px;\n    width: 48px;\n    min-width: 2rem;\n    min-height: 2rem;\n    cursor: pointer;\n    border-radius: var(--nylas-border-radius-2x);\n    font-size: 16px;\n    font-weight: 600;\n    font-family: inherit;\n    @media #{$x-small-mobile} {\n      width: 38px;\n      height: 38px;\n      min-width: none;\n    }\n\n    color: var(--nylas-base-text);\n    background-color: var(--nylas-base-100);\n    cursor: pointer;\n\n    &:hover:not(:disabled) {\n      box-shadow: 0 0 0 2px var(--nylas-base-500) inset;\n    }\n\n    border: none;\n\n    &.date.current-month {\n      color: var(--nylas-base-800);\n    }\n\n    &.date.selected {\n      background-color: var(--nylas-primary);\n      color: var(--nylas-base-0);\n      font-weight: 700;\n    }\n\n    &.date.day-skeleton {\n      color: var(--nylas-base-300);\n    }\n\n    &:disabled {\n      color: var(--nylas-base-300);\n      background-color: transparent;\n      font-weight: 400;\n      cursor: not-allowed;\n    }\n  }\n  .day {\n    font-size: 12px;\n    color: var(--nylas-base-800);\n    font-weight: 600;\n    letter-spacing: 0.5px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    @media #{$mobile} {\n      font-size: 14px;\n    }\n  }\n\n  .date.day-skeleton {\n    height: 48px;\n    width: 48px;\n    @media #{$x-small-mobile} {\n      width: 38px;\n      height: 38px;\n      min-width: none;\n    }\n    border-radius: var(--nylas-border-radius-2x);\n    animation: pulsate 1.5s infinite ease-in-out;\n    background-color: var(--nylas-base-50);\n  }\n\n  .date.current-day::after {\n    content: '';\n    position: absolute;\n    bottom: 6px;\n    left: 50%;\n    transform: translateX(-50%);\n    width: 6px;\n    height: 6px;\n    border-radius: 50%;\n    background-color: var(--nylas-base-500);\n  }\n  .date.current-day.selected::after {\n    background-color: var(--nylas-base-100);\n  }\n}\n\n.pagination {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  min-width: 92px;\n  .chevron-right {\n    transform: rotate(180deg);\n  }\n  .button {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    height: 3vh;\n    width: 3vh;\n    min-width: 3em;\n    min-height: 3em;\n    cursor: pointer;\n    border-radius: var(--nylas-border-radius-2x);\n\n    background-color: transparent;\n    color: var(--nylas-base-800);\n    cursor: pointer;\n\n    &:hover {\n      background-color: var(--nylas-base-50);\n    }\n\n    border: none;\n\n    &:active {\n      background-color: var(--nylas-base-100);\n    }\n\n    &:disabled {\n      background-color: transparent;\n      color: var(--nylas-base-300);\n      cursor: not-allowed;\n    }\n  }\n}\n\n.flex-row {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--nylas-base-500);\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { addDaysToCurrentDate, getFirstDayOfMonth, getLastDayOfMonth, isSameDay, isSameMonth } from '@/utils/utils';\nimport { Component, Event, EventEmitter, Host, Prop, State, h } from '@stencil/core';\nimport { timeDay } from 'd3-time';\nimport { NylasSchedulerConnector } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\nimport { ConfigSettings } from '@/stores/scheduler-store';\n\n/**\n * The `nylas-date-picker` component is a UI component that allows users to select a date.\n *\n * @part ndp - The date picker host.\n * @part ndp__month-header - The month header.\n * @part ndp__month-button - The month button.\n * @part ndp__day - The day.\n * @part ndp__date - The date.\n * @part ndp__date--selected - The selected date.\n * @part ndp__date--current-day - The current day.\n * @part ndp__date--current-month - The dates in the current month.\n */\n@Component({\n  tag: 'nylas-date-picker',\n  styleUrl: 'nylas-date-picker.scss',\n  shadow: true,\n})\nexport class NylasDatePicker {\n  /**\n   * The dates that are selectable.\n   */\n  @Prop() selectableDates?: Date[];\n\n  /**\n   * The selected date.\n   */\n  @Prop() selectedDate?: Date;\n\n  /**\n   * The config settings.\n   */\n  @Prop() configSettings?: ConfigSettings;\n\n  /**\n   * The loading state.\n   */\n  @Prop() readonly isLoading?: boolean;\n\n  /**\n   * The month to display.\n   */\n  @State() month: Date = this.selectedDate || new Date();\n\n  /**\n   * The dates to render.\n   */\n  @State() dates: Date[] = this.getDates();\n\n  /**\n   * The state to disable the next month button.\n   */\n  @State() disableNextMonthButton: boolean = false;\n\n  /**\n   * This event is fired when a date is selected.\n   */\n  @Event() dateSelected!: EventEmitter<Date>;\n\n  /**\n   * This event is fired when the month is changed.\n   */\n  @Event() monthChanged!: EventEmitter<Date>;\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  componentWillLoad() {}\n\n  /**\n   * Get the dates to render, including the days from the previous and next months.\n   * @returns The dates to render.\n   */\n  private getDates() {\n    const lastDayOfMonth = getLastDayOfMonth(this.month);\n    const firstDayOfMonth = getFirstDayOfMonth(this.month);\n\n    return timeDay.range(timeDay.offset(firstDayOfMonth, -firstDayOfMonth.getDay()), timeDay.offset(lastDayOfMonth, 7 - lastDayOfMonth.getDay()));\n  }\n\n  /**\n   * Select a date.\n   * @param date The date to select.\n   */\n  private selectDate(date?: Date) {\n    this.dateSelected.emit(date);\n  }\n\n  /**\n   * Change the month.\n   * @param change The change in months.\n   */\n  private changeMonth(change: number) {\n    this.month = new Date(this.month.getFullYear(), this.month.getMonth() + change, 1);\n    const nextMonth = new Date(this.month.getFullYear(), this.month.getMonth() + 1, 1);\n    const availableDaysInFuture = this.configSettings?.scheduler?.available_days_in_future;\n    const endDate = addDaysToCurrentDate(new Date(), availableDaysInFuture);\n    if (endDate.getTime() < nextMonth.getTime()) {\n      this.disableNextMonthButton = true;\n    } else {\n      this.disableNextMonthButton = false;\n    }\n    this.dates = this.getDates();\n    this.monthChanged.emit(this.month);\n    // unset selected date when changing month\n    this.selectDate();\n  }\n\n  private isSelected(date: Date | undefined, selectedDate: Date | undefined, selectableDates: Date[] | undefined) {\n    return date && selectedDate && isSameDay(date, selectedDate) && selectableDates && selectableDates?.length > 0;\n  }\n\n  private isDisabled(date: Date | undefined, selectableDates: Date[] | undefined) {\n    return date && selectableDates?.find(d => isSameDay(d, date)) === undefined;\n  }\n\n  @RegisterComponent<NylasDatePicker, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-date-picker',\n    stateToProps: new Map([\n      ['scheduler.selectableDates', 'selectableDates'],\n      ['scheduler.selectedDate', 'selectedDate'],\n      ['scheduler.isLoading', 'isLoading'],\n      ['scheduler.configSettings', 'configSettings'],\n    ]),\n    eventToProps: {\n      dateSelected: async (event: CustomEvent<Date>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.selectDate(event.detail);\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host part=\"ndp\">\n        <div class=\"nylas-date-picker\">\n          <div class={'header flex-row'}>\n            <h2 part={'ndp__month-header'}>\n              <strong>{this.month.toLocaleDateString(undefined, { month: 'long' })}</strong>\n              &nbsp;\n              {this.month.toLocaleDateString(undefined, { year: 'numeric' })}\n            </h2>\n            <div class={'pagination'}>\n              <button\n                onClick={() => this.changeMonth(-1)}\n                class={{ 'chevron-left': true, 'button': true }}\n                disabled={!this.selectableDates?.length || this.month <= new Date()}\n                part=\"ndp__month-button\"\n              >\n                <chevron-icon />\n              </button>\n              <button\n                onClick={() => this.changeMonth(1)}\n                class={{ 'chevron-right': true, 'button': true }}\n                disabled={!this.selectableDates?.length || this.disableNextMonthButton}\n                part=\"ndp__month-button\"\n              >\n                <chevron-icon />\n              </button>\n            </div>\n          </div>\n\n          <div class={'dates'}>\n            {['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'].map(day => {\n              return (\n                <div class={'day'} part=\"ndp__day\">\n                  {day}\n                </div>\n              );\n            })}\n            {this.dates.map((date, i) => {\n              const isDisabled = this.isDisabled(date, this.selectableDates);\n\n              if (this.isLoading) {\n                return (\n                  <button\n                    disabled\n                    class={{\n                      'date day-skeleton': true,\n                      'current-month': isSameMonth(date, this.month),\n                    }}\n                    style={{ animationDelay: `${i * 20}ms` }}\n                    part={'ndp__date'}\n                  >\n                    {date.getDate()}\n                  </button>\n                );\n              }\n              return (\n                <button\n                  class={{\n                    'date': true,\n                    'selected': !!(this.selectedDate && isSameDay(date, this.selectedDate) && this.selectableDates && this.selectableDates?.length > 0),\n                    'current-day': isSameDay(date, new Date()),\n                    'current-month': isSameMonth(date, this.month),\n                  }}\n                  aria-lang={date.toLocaleDateString(undefined, { dateStyle: 'full' })}\n                  disabled={isDisabled}\n                  onClick={() => this.selectDate(date)}\n                  part={`ndp__date ${this.isSelected(date, this.selectedDate, this.selectableDates) ? 'ndp__date--selected' : ''} ${isSameDay(date, new Date()) ? 'ndp__date--current-day' : ''} ${isSameMonth(date, this.month) ? 'ndp__date--current-month' : ''}`}\n                >\n                  {date.getDate()}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n","@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n}\n\n.nylas-locale-switch {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 68px;\n  border-left: none;\n  border-right: none;\n  color: var(--nylas-base-50);\n  font-size: 14px;\n  @media #{$mobile} {\n    font-size: 16px;\n  }\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  font-family: inherit;\n}\n\n.select-wrapper {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\nselect {\n  border: none;\n  background: transparent;\n  cursor: pointer;\n  outline: none;\n  background-color: transparent;\n  margin: 0 0 1px;\n  padding: 4px;\n  vertical-align: middle;\n  &#timezone {\n    width: 140px;\n  }\n  &#language {\n    width: 80px;\n  }\n}\n\nspan.timezone-label {\n  display: flex;\n  width: -webkit-fill-available;\n  justify-content: space-between;\n}\n","import { LANGUAGE_MAP, TIMEZONE_MAP, getTimezoneOffset } from '@/common/constants';\nimport { RegisterComponent } from '@/common/register-component';\nimport { Component, Event, EventEmitter, Host, Listen, Prop, h } from '@stencil/core';\nimport { NylasSchedulerConnector } from '../../../components';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\n\n/**\n * The `nylas-locale-switch` component is a UI component that allows users to select a timezone and language.\n */\n@Component({\n  tag: 'nylas-locale-switch',\n  styleUrl: 'nylas-locale-switch.scss',\n  shadow: true,\n})\nexport class NylasLocaleSwitch {\n  /**\n   * The selected timezone.\n   */\n  @Prop({ mutable: true }) selectedTimezone: string = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  /**\n   * The selected language.\n   */\n  @Prop({ mutable: true }) selectedLanguage: string = navigator.language;\n\n  /**\n   * This event is fired when the timezone is changed.\n   */\n  @Event() timezoneChanged!: EventEmitter<string>;\n\n  /**\n   * This event is fired when the language is changed.\n   */\n  @Event() languageChanged!: EventEmitter<string>;\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  componentWillLoad() {}\n\n  /**\n   * Change the timezone.\n   * @param timezone The timezone to select.\n   */\n  private changeTimezone(timezone: string) {\n    this.selectedTimezone = timezone;\n    this.timezoneChanged.emit(timezone);\n  }\n\n  /**\n   * Change the language.\n   * @param language The language to select.\n   */\n  private changeLanguage(language: string) {\n    this.selectedLanguage = language;\n    this.languageChanged.emit(language);\n  }\n\n  @Listen('selectedOptionChanged')\n  selectedOptionChangedHandler(\n    event: CustomEvent<{\n      value: string;\n      name: string;\n    }>,\n  ) {\n    const { name, value } = event.detail;\n    if (name === 'timezone') {\n      this.changeTimezone(value);\n    } else if (name === 'language') {\n      this.changeLanguage(value);\n    }\n  }\n\n  getTimezoneLabelHTML(timezone: string) {\n    const offset = getTimezoneOffset(timezone);\n    return (\n      <span\n        class=\"timezone-label\"\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          width: '-webkit-fill-available',\n        }}\n      >\n        {TIMEZONE_MAP[timezone]}{' '}\n        <span\n          class=\"timezone-offset\"\n          style={{\n            fontSize: '14px',\n            fontWeight: '400',\n            color: 'var(--nylas-base-500)',\n          }}\n        >\n          {offset}\n        </span>\n      </span>\n    );\n  }\n\n  @RegisterComponent<NylasLocaleSwitch, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-locale-switch',\n    stateToProps: new Map([\n      ['scheduler.selectedLanguage', 'selectedLanguage'],\n      ['scheduler.selectedTimezone', 'selectedTimezone'],\n    ]),\n    eventToProps: {\n      timezoneChanged: async (event: CustomEvent<string>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.selectTimezone(event.detail);\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const timezoneOptions = Object.keys(TIMEZONE_MAP).map(key => ({\n      labelHTML: this.getTimezoneLabelHTML(key),\n      label: TIMEZONE_MAP[key],\n      value: key,\n    }));\n    const languageOptions = Object.keys(LANGUAGE_MAP).map(key => ({\n      label: LANGUAGE_MAP[key],\n      value: key,\n    }));\n\n    return (\n      <Host>\n        <div class=\"nylas-locale-switch\">\n          <div\n            class={{\n              'select-wrapper': true,\n              'timezone': true,\n            }}\n          >\n            <select-dropdown name=\"timezone\" options={timezoneOptions} defaultSelectedOption={timezoneOptions.find(op => op.value == this.selectedTimezone)}>\n              <span slot=\"select-icon\">\n                <globe-icon width=\"20\" height=\"20\" />\n              </span>\n            </select-dropdown>\n          </div>\n          <div\n            class={{\n              'select-wrapper': true,\n              'language': true,\n            }}\n          >\n            <select-dropdown name=\"language\" options={languageOptions} defaultSelectedOption={languageOptions.find(lang => lang.value == this.selectedLanguage)}>\n              <span slot=\"select-icon\">\n                <translate-icon width=\"20\" height=\"20\" />\n              </span>\n            </select-dropdown>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'nylas-logo',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class NylasLogo {\n  @Prop() width: string = '69';\n  @Prop() height: string = '24';\n\n  render() {\n    return (\n      <svg width={this.width} height={this.height} viewBox=\"0 0 69 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clip-path=\"url(#clip0_455_3543)\">\n          <path\n            d=\"M15.8092 3.03248C14.6497 1.86996 13.1076 1.23047 11.4646 1.23047C9.82156 1.23047 8.27753 1.86996 7.11999 3.03248L0.835347 9.33381C0.686846 9.4827 0.60498 9.68123 0.60498 9.89312C0.60498 10.105 0.686846 10.3035 0.835347 10.4524C0.983848 10.6013 1.18185 10.6834 1.39318 10.6834C1.60451 10.6834 1.80251 10.6013 1.95101 10.4524L8.23374 4.15111C10.0139 2.36627 12.9134 2.36627 14.6935 4.15111C16.4736 5.93785 16.4756 8.84322 14.6935 10.6281L8.4108 16.9275C8.10428 17.2348 8.10428 17.7368 8.4108 18.0461C8.5593 18.195 8.75731 18.2771 8.96863 18.2771C9.17996 18.2771 9.37796 18.195 9.52646 18.0461L15.8092 11.7467C16.9687 10.5841 17.6064 9.03793 17.6064 7.39053C17.6064 5.74314 16.9687 4.19501 15.8092 3.03439V3.03248Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M14.9296 7.39038C14.9296 6.46074 14.5698 5.58837 13.9148 4.93361C12.5631 3.57828 10.3641 3.57828 9.01239 4.93361L0.663961 13.3023C0.51546 13.4512 0.433594 13.6497 0.433594 13.8616C0.433594 14.0735 0.51546 14.272 0.663961 14.4209C0.812462 14.5698 1.01046 14.6519 1.22179 14.6519C1.43312 14.6519 1.63112 14.5698 1.77962 14.4209L10.0367 6.1515L10.05 6.13623C10.0747 6.10759 10.1014 6.07705 10.128 6.05033C10.1585 6.01978 10.1928 5.99115 10.2251 5.96252L10.2442 5.94534C10.9886 5.31349 12.1119 5.3593 12.8011 6.05033C13.4903 6.74135 13.536 7.78171 12.9705 8.53192L12.9648 8.53955C12.9058 8.61591 12.8544 8.67699 12.8011 8.73044C12.7497 8.78198 12.6906 8.83352 12.6069 8.90033L4.45264 17.0991C4.30414 17.248 4.22227 17.4465 4.22227 17.6584C4.22227 17.8703 4.30414 18.0689 4.45264 18.2177C4.60114 18.3666 4.79914 18.4487 5.01047 18.4487C5.2218 18.4487 5.4198 18.3666 5.5683 18.2177L13.9167 9.84716C14.5698 9.1924 14.9315 8.31812 14.9315 7.39038H14.9296Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M10.6821 9.11238C10.4727 9.01694 10.2861 8.88904 10.1281 8.7306C9.97008 8.57216 9.84252 8.38508 9.74733 8.1751L9.69021 8.05103L0.467916 17.2978C0.287049 17.4792 0.174721 17.7082 0.149971 17.9411C0.125221 18.1778 0.19376 18.3897 0.344165 18.5405C0.471724 18.6684 0.65259 18.739 0.850592 18.739C1.11142 18.739 1.37796 18.6207 1.58358 18.4145L10.8059 9.16774L10.6821 9.11047V9.11238Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M68.401 10.6185C68.2126 10.2692 67.9593 9.97334 67.6433 9.73854C67.3235 9.49993 66.956 9.31094 66.5486 9.17541C66.1316 9.03606 65.7033 8.91771 65.2749 8.81844C64.7951 8.70582 64.3039 8.57983 63.8165 8.44811C63.3196 8.31258 62.9065 8.14269 62.5905 7.94225C62.4743 7.88689 62.3391 7.76663 62.3391 7.50129C62.3391 7.39821 62.3639 7.29704 62.4153 7.19587L62.4248 7.18059C62.5352 7.02216 62.7142 6.8828 62.975 6.75109C63.234 6.62128 63.609 6.55829 64.1231 6.55829C64.5286 6.55829 64.877 6.61365 65.1569 6.72436C65.4348 6.83508 65.6652 6.96871 65.8442 7.12524C66.0212 7.27986 66.1659 7.45357 66.2782 7.63873C66.3563 7.76854 66.4267 7.89262 66.4858 8.00525L68.2754 6.84081C68.1669 6.59456 68.0146 6.33495 67.8204 6.0677C67.6033 5.768 67.3254 5.4893 66.9922 5.23732C66.659 4.98534 66.2516 4.77345 65.7813 4.60929C65.3111 4.44512 64.7532 4.36304 64.1231 4.36304C63.3844 4.36304 62.7599 4.46421 62.2706 4.66083C61.7813 4.85935 61.3815 5.09988 61.0845 5.37667C60.7875 5.65346 60.5628 5.95125 60.4143 6.2605C60.2639 6.57547 60.1611 6.85799 60.1078 7.10233C60.0945 7.18059 60.0812 7.27031 60.0678 7.36767C60.0545 7.4593 60.0469 7.5452 60.0469 7.62537C60.0469 8.13314 60.1745 8.56074 60.4239 8.89671C60.679 9.24222 61.0045 9.53429 61.391 9.76336C61.7813 9.99624 62.2116 10.1852 62.6704 10.3227C63.1388 10.462 63.5862 10.5823 64.0012 10.6796C64.4067 10.777 64.7932 10.8782 65.1531 10.9774C65.5224 11.0786 65.8289 11.2122 66.0631 11.3745C66.2801 11.5425 66.3887 11.7448 66.3887 11.9777C66.3887 12.2278 66.2916 12.4263 66.0993 12.5695C65.9279 12.6954 65.7261 12.7985 65.4958 12.8711C65.273 12.9436 65.0407 12.9913 64.8066 13.0142C64.58 13.0352 64.3915 13.0467 64.2468 13.0467C63.8032 13.0467 63.4224 13.0028 63.1197 12.915C62.8151 12.8272 62.5638 12.7241 62.3734 12.6057C62.1811 12.4874 62.0288 12.3614 61.9222 12.2316C61.8213 12.1094 61.747 12.0082 61.7014 11.9319L61.4957 11.6303L59.708 12.7928C59.8508 13.0161 60.0298 13.2643 60.2392 13.5296C60.4772 13.8293 60.7837 14.1138 61.153 14.3734C61.5224 14.633 61.966 14.8525 62.4724 15.0243C62.9788 15.1961 63.5748 15.282 64.2468 15.282C64.797 15.282 65.2901 15.2324 65.7166 15.137C66.1412 15.0396 66.5162 14.9117 66.8285 14.7552C67.1388 14.6005 67.4015 14.4192 67.6109 14.2149C67.8223 14.0107 67.9974 13.8026 68.1326 13.6003C68.4563 13.1135 68.6409 12.5504 68.6828 11.9262C68.6828 11.4069 68.5876 10.9641 68.401 10.6166V10.6185Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M26.3585 4.27905C23.7901 4.27905 21.6997 6.37504 21.6997 8.95017V15.0701H23.9291V8.95017C23.9291 7.6082 25.0181 6.5163 26.3565 6.5163C27.695 6.5163 28.784 7.6082 28.784 8.95017V15.0701H31.0134V8.95017C31.0134 6.37504 28.9229 4.27905 26.3546 4.27905H26.3585Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M53.4522 4.27905C50.4251 4.27905 47.9634 6.74728 47.9634 9.78245C47.9634 12.8176 50.427 15.2859 53.4522 15.2859C54.5545 15.2859 55.6188 14.9594 56.5288 14.3409L56.7116 14.2169V15.0682H58.941V9.78245C58.941 6.74728 56.4793 4.27905 53.4522 4.27905ZM53.4522 13.0505C51.655 13.0505 50.1928 11.5845 50.1928 9.78245C50.1928 7.98044 51.655 6.51439 53.4522 6.51439C55.2494 6.51439 56.7116 7.98044 56.7116 9.78245C56.7116 11.5845 55.2494 13.0505 53.4522 13.0505Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M45.5795 10.6166V0.356201H43.3501V10.6166C43.3501 13.1517 45.3758 15.2228 47.8908 15.2858V13.0486C46.6057 12.9875 45.5795 11.9204 45.5795 10.6166Z\"\n            fill=\"currentColor\"\n          />\n          <path\n            d=\"M39.5428 4.4967V10.63C39.5428 11.6761 38.8669 12.621 37.9016 12.9284C37.1249 13.1746 36.3157 13.0486 35.6817 12.5829C35.0592 12.1247 34.6879 11.3917 34.6879 10.6186V4.4967H32.4585V10.5995C32.4585 12.7165 33.8388 14.57 35.8131 15.1084C37.0354 15.4424 38.2995 15.2973 39.3695 14.7037L39.5428 14.6063V14.9747C39.5428 16.2766 38.5166 17.3437 37.2315 17.4067V19.6439C39.7465 19.5809 41.7722 17.5117 41.7722 14.9747V4.4967H39.5428Z\"\n            fill=\"currentColor\"\n          />\n        </g>\n        <defs>\n          <clipPath id=\"clip0_455_3543\">\n            <rect width=\"68.7123\" height=\"19.2877\" fill=\"white\" transform=\"translate(0.144043 0.356201)\" />\n          </clipPath>\n        </defs>\n      </svg>\n    );\n  }\n}\n","@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  margin-bottom: -12px; // offset for the rounded border\n  width: 100%;\n  z-index: 1;\n  @include default-css-variables;\n}\n.notif {\n  display: flex;\n  @media #{$mobile} {\n    width: auto;\n  }\n  padding: 17px;\n  align-items: flex-start;\n  justify-content: space-between;\n  gap: 16px;\n  border-radius: var(--nylas-border-radius-2x);\n  border: 1.5px solid var(--nylas-error);\n  background: var(--nylas-base-0);\n  .content {\n    display: flex;\n    flex-direction: row;\n    gap: 8px;\n    .message {\n      font-size: 14px;\n      font-weight: 400;\n      color: var(--nylas-base-800);\n      .title {\n        font-size: 16px;\n        font-weight: 600;\n        color: var(--nylas-base-950);\n        display: block;\n      }\n      .description {\n        font-size: 14px;\n        font-weight: 400;\n        color: var(--nylas-base-800);\n        display: block;\n      }\n    }\n    .icon {\n      &.error {\n        color: var(--nylas-error);\n      }\n    }\n  }\n\n  &.error {\n    border-color: var(--nylas-error);\n  }\n  &.warning {\n    border-color: var(--nylas-warning);\n  }\n  &.info {\n    border-color: var(--nylas-info);\n  }\n  &.success {\n    border-color: var(--nylas-success);\n  }\n\n  .dismiss-btn {\n    background: none;\n    border: none;\n    color: var(--nylas-base-950);\n    cursor: pointer;\n  }\n}\n","import { Notification } from '@nylas/core';\nimport { Component, Fragment, Host, Listen, Prop, State, h } from '@stencil/core';\nimport { debug } from '@/utils/utils';\n\n/**\n * The `nylas-notification` component is a UI component that displays notifications.\n */\n@Component({\n  tag: 'nylas-notification',\n  styleUrl: 'nylas-notification.scss',\n  shadow: true,\n})\nexport class NylasNotification {\n  /**\n   * The time-to-live for notifications in milliseconds. Set to 'none' to disable auto-dismissal.\n   */\n  @Prop() ttl: number | 'none' = 5000;\n  @Prop() allowedCategories: string[] = ['component', 'api', 'validation', 'invalid_session'];\n\n  @State() notifications: Notification[] = [];\n\n  @Listen('nylasSchedulerError', { target: 'body' })\n  onError(event: CustomEvent<Notification>) {\n    debug(`[nylas-notification] Error: ${event.detail.title}`);\n    this.handleNotification(event);\n  }\n\n  @Listen('nylasSchedulerWarning', { target: 'body' })\n  onWarning(event: CustomEvent<Notification>) {\n    debug(`[nylas-notification] Warning: ${event.detail.title}`);\n    this.handleNotification(event);\n  }\n\n  @Listen('nylasSchedulerInfo', { target: 'body' })\n  onInfo(event: CustomEvent<Notification>) {\n    debug(`[nylas-notification] Info: ${event.detail.title}`);\n    this.handleNotification(event);\n  }\n\n  @Listen('nylasSchedulerSuccess', { target: 'body' })\n  onSuccess(event: CustomEvent<Notification>) {\n    debug(`[nylas-notification] Success: ${event.detail.title}`);\n    this.handleNotification(event);\n  }\n\n  private handleNotification(event: CustomEvent<Notification>) {\n    if (event.defaultPrevented) {\n      debug(`[nylas-notification] Event default prevented`);\n      return;\n    }\n    if (this.ttl === 0) {\n      debug(`[nylas-notification] TTL is 0`);\n      return;\n    }\n    if (this.allowedCategories.length > 0 && !this.allowedCategories.includes(event.detail.category)) {\n      debug(`[nylas-notification] Category not allowed`);\n      return;\n    }\n\n    this.notifications = [...this.notifications, { ...event.detail }];\n    if (event.detail.ttl !== 'none') {\n      const ttl = event.detail.ttl ? event.detail.ttl : (this.ttl as number);\n      window.setTimeout(() => {\n        this.notifications = this.notifications.filter(notif => notif.id !== event.detail.id);\n      }, ttl);\n    }\n  }\n\n  private dismissNotification(id: string) {\n    this.notifications = this.notifications.filter(notif => notif.id !== id);\n  }\n\n  render() {\n    return (\n      <Host>\n        <Fragment>\n          {this.notifications.map(notif => (\n            <div class={`notif ${notif.type}`} key={notif.id}>\n              <div class=\"content\">\n                <span class={`icon ${notif.type}`}>{(notif.type === 'error' || notif.type === 'warning') && <warning-icon />}</span>\n                <span class=\"message\">\n                  <span class=\"title\">{notif.title}</span>\n                  {notif.description && <span class=\"description\">{notif.description}</span>}\n                </span>\n              </div>\n              <button class=\"dismiss-btn\" onClick={() => this.dismissNotification(notif.id)}>\n                <close-icon />\n              </button>\n            </div>\n          ))}\n          <slot />\n        </Fragment>\n      </Host>\n    );\n  }\n}\n","@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n}\n\nsp-theme {\n  position: relative;\n  height: inherit;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: var(--nylas-font-family);\n}\n\n.event-card {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: calc(100% - 3rem);\n  background-color: var(--nylas-base-0);\n  color: var(--nylas-base-800);\n  border-radius: var(--nylas-border-radius-2x);\n  padding: 3rem 1.5rem 1.5rem 1.5rem;\n  position: relative;\n  box-shadow:\n    0px 1px 3px 0px rgba(0, 0, 0, 0.1),\n    0px 1px 2px 0px rgba(0, 0, 0, 0.06);\n  @media #{$mobile} {\n    margin-bottom: 2rem;\n  }\n}\n\n.nylas-selected-event-card__date {\n  font-size: min(max(16px, 3vw), 18px);\n  font-weight: 600;\n}\n\n.nylas-selected-event-card__time {\n  font-size: min(max(14px, 3vw), 16px);\n  font-weight: 500;\n}\n\n.calendar-icon {\n  width: 3rem;\n  height: 3rem;\n  border-radius: 50%;\n  position: absolute;\n  top: -1.25rem;\n  left: 50%;\n  transform: translateX(-50%);\n  background-color: var(--nylas-base-0);\n  border: 1px solid var(--nylas-base-200);\n}\n\ncalendar-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n.event-timezone {\n  display: flex;\n  color: var(--nylas-base-600);\n  margin-bottom: 8px;\n  @media #{$mobile} {\n    margin-bottom: 16px;\n  }\n  gap: 4px;\n  align-items: center;\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { Component, h, Host, Prop, State, Watch } from '@stencil/core';\nimport type { NylasSchedulerConnector } from '../../..';\nimport type { Timeslot } from '@nylas/core';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\nimport { debug } from '@/utils/utils';\nimport { TIMEZONE_MAP } from '@/common/constants';\n\n/**\n * The `nylas-selected-event-card` component is a UI component that displays the selected event card.\n *\n * @part nsec - The selected event card component.\n * @part nsec__card - The card component.\n * @part nsec__icon - The calendar icon.\n * @part nsec__date - The date selected.\n * @part nsec__time - The timeslot selected.\n * @part nsec__timezone - The timezone selected.\n */\n@Component({\n  tag: 'nylas-selected-event-card',\n  styleUrl: 'nylas-selected-event-card.scss',\n  shadow: true,\n})\nexport class NylasSelectedEventCard {\n  /**\n   * The selected date.\n   */\n  @Prop({ attribute: 'selected-date' }) readonly selectedDate?: Date;\n\n  /**\n   * The selected time.\n   */\n  @Prop({ attribute: 'selected-timeslot' }) readonly selectedTimeslot?: Timeslot;\n  /***\n   * The selected timezone.\n   */\n  @Prop({ attribute: 'selected-timezone' }) readonly selectedTimezone: string = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  @State() startTime: string = '';\n  @State() endTime: string = '';\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  async componentWillLoad() {\n    debug(`[nylas-selected-event-card] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-selected-event-card] Component did load`);\n  }\n\n  @Watch('selectedTimeslot')\n  handleSelectedTimeslotChange(selectedTimeslot: Timeslot) {\n    this.startTime = new Date(selectedTimeslot?.start_time as Date).toLocaleString(undefined, { timeStyle: 'short' });\n    this.endTime = new Date(selectedTimeslot?.end_time as Date).toLocaleString(undefined, { timeStyle: 'short' });\n  }\n\n  @RegisterComponent<NylasSelectedEventCard, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-selected-event-card',\n    stateToProps: new Map([\n      ['scheduler.selectedDate', 'selectedDate'],\n      ['scheduler.selectedTimeslot', 'selectedTimeslot'],\n      ['scheduler.selectedTimezone', 'selectedTimezone'],\n    ]),\n    eventToProps: {},\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host part=\"nsec\">\n        <sp-theme theme=\"spectrum\" color=\"dark\" scale=\"medium\">\n          <div class=\"event-card\" part=\"nsec__card\">\n            <div class=\"calendar-icon\" part=\"nsec__icon\">\n              <calendar-icon />\n            </div>\n            <div class=\"nylas-selected-event-card__date\" part=\"nsec__date\">\n              {this.selectedDate?.toLocaleDateString(undefined, { dateStyle: 'full' })}\n            </div>\n            <div class=\"nylas-selected-event-card__time\" part=\"nsec__time\">\n              {this.startTime} - {this.endTime}\n            </div>\n          </div>\n          <div class=\"event-timezone\" part=\"nsec__timezone\">\n            <globe-icon></globe-icon>\n            {TIMEZONE_MAP[this.selectedTimezone]}\n          </div>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  height: calc(100% - 48px); //48px is the height of the header\n}\n\n.time-picker-wrapper {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.time-slots {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  align-items: center;\n  overflow-y: scroll;\n  padding: 0.5rem 1.5rem;\n  flex: 1;\n}\n\n.time {\n  /* Frame 12 */\n  box-sizing: border-box;\n\n  /* Auto layout */\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 4px 12px;\n  gap: 0.5rem;\n  font-size: 16px;\n  font-weight: 500;\n  font-family: inherit;\n\n  width: 100%;\n  height: 48px;\n\n  color: var(--nylas-base-800);\n  background: var(--nylas-base-0);\n  border: none;\n  outline: 1.5px solid var(--nylas-base-200);\n  border-radius: var(--nylas-border-radius-2x);\n\n  flex: none;\n  order: 4;\n  align-self: stretch;\n  flex-grow: 0;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--nylas-primary);\n    outline-color: var(--nylas-primary);\n  }\n\n  &.selected {\n    font-weight: 600;\n    color: var(--nylas-primary);\n    outline: 2px solid var(--nylas-primary);\n    border-color: transparent;\n    box-shadow: 0 0 0 2px var(--nylas-primary);\n  }\n}\n\n.empty {\n  text-align: center;\n  padding: 0 1.5rem;\n  color: var(--nylas-base-600);\n  font-size: min(max(12px, 2vw), 14px);\n  height: 450px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n@keyframes pulsate {\n  0% {\n    background-color: var(--nylas-base-50);\n  }\n  50% {\n    background-color: var(--nylas-base-100);\n  }\n  100% {\n    background-color: var(--nylas-base-50);\n  }\n}\n\n.loading {\n  padding: 0 1.5rem;\n\n  .time-slot-skeleton {\n    width: 100%;\n    height: 4rem;\n    background-color: var(--nylas-base-50);\n    margin-bottom: 0.5rem;\n    border-radius: var(--nylas-border-radius-2x);\n    animation: pulsate 1.5s infinite ease-in-out;\n  }\n}\n\n.footer {\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n  border-top: 1px solid var(--nylas-base-200);\n\n  sp-button {\n    padding: 14px;\n    color: var(--nylas-base-100);\n    border-radius: var(--nylas-border-radius-2x);\n    width: 100%;\n    height: 48px;\n    font-weight: 600;\n    font-size: 16px;\n    background-color: var(--nylas-primary);\n    border: none;\n    &:hover,\n    &:focus {\n      background-color: var(--nylas-base-600);\n    }\n    &:active {\n      background-color: var(--nylas-base-800);\n    }\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { debug, isSameDay } from '@/utils/utils';\nimport { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerConnector } from '../../..';\nimport { NylasScheduling } from '../nylas-scheduler/nylas-scheduling';\nimport { AvailabilityTimeslot } from '@/stores/scheduler-store';\nimport type { Timeslot } from '@nylas/core';\n\n/**\n * The `nylas-timeslot-picker` component is a UI component that allows users to select a timeslot from a list of available timeslots.\n *\n * @slot timeslot-picker-cta-label - The label for the timeslot picker CTA. Default is \"Next\".\n * @part ntp - The timeslot picker component.\n * @part ntp__timeslot - The timeslot button.\n * @part ntp__timeslot--selected - The selected timeslot button.\n * @part ntp__button-primary - The timeslot picker CTA.\n */\n@Component({\n  tag: 'nylas-timeslot-picker',\n  styleUrl: 'nylas-timeslot-picker.scss',\n  shadow: true,\n})\nexport class NylasTimeslotPicker {\n  /**\n   * The selected date.\n   */\n  @Prop({ attribute: 'selected-date' }) readonly selectedDate?: Date = new Date();\n  /**\n   * The available timeslots.\n   */\n  @Prop({ attribute: 'availability' }) readonly availability?: AvailabilityTimeslot[];\n  /**\n   * The selected timeslot.\n   */\n  @Prop({ attribute: 'selected-timeslot' }) readonly selectedTimeslot?: Timeslot;\n  /**\n   * The loading state prop. Used to display loading state when fetching availability.\n   */\n  @Prop({ attribute: 'loading-state' }) readonly isLoading?: boolean;\n  /**\n   * The selected timezone.\n   */\n  @Prop({ attribute: 'selected-timezone' }) readonly selectedTimezone: string = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  /**\n   * This event is fired when a timeslot is selected.\n   */\n  @Event() readonly timeslotSelected!: EventEmitter<Timeslot>;\n  /**\n   * This event is fired when a timeslot is confirmed. By default, this will proceed to the booking form page.\n   */\n  @Event() readonly timeslotConfirmed!: EventEmitter<Timeslot>;\n\n  @State() times: AvailabilityTimeslot[] = [];\n  @State() hoveredTimeslotIndex?: number;\n  @State() selectedTimeslotIndex?: string;\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  async componentWillLoad() {\n    const availableTimes = this.availability?.filter(timeslot => this.selectedDate && isSameDay(timeslot.start_time, this.selectedDate)).map(timeslot => timeslot);\n    this.times = availableTimes || [];\n    debug(`[nylas-timeslot-picker] Component will load`, { selectedDate: this.selectedDate, availability: this.availability, times: this.times });\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-timeslot-picker] Component did load`);\n  }\n\n  private getTimeslotId(date: Date, index: number) {\n    return `${date.toLocaleDateString()}-${index}`;\n  }\n\n  private onClickSelectTime(timeslot: Timeslot, index: number) {\n    debug(`[nylas-timeslot-picker] Time selected`, timeslot, index);\n    this.selectedTimeslotIndex = this.getTimeslotId(timeslot.start_time, index);\n    this.timeslotSelected.emit({\n      start_time: timeslot.start_time,\n      end_time: timeslot.end_time,\n    });\n  }\n\n  private handleConfirmedTimeslot = async (event: Event, timeslot: Timeslot | undefined) => {\n    event.preventDefault();\n    debug(`[nylas-timeslot-picker] Confirm timeslot`, timeslot);\n    this.timeslotConfirmed.emit(timeslot);\n  };\n\n  private handleMouseEnter = (index: number) => {\n    this.hoveredTimeslotIndex = index;\n  };\n\n  private handleMouseLeave = () => {\n    this.hoveredTimeslotIndex = -1;\n  };\n\n  private getTimeSlotLabel(timeslot: Timeslot) {\n    const timeFormat = new Intl.DateTimeFormat('en-US', {\n      hour: 'numeric',\n      minute: 'numeric',\n      timeZone: this.selectedTimezone,\n    });\n    return `${timeFormat.format(timeslot.start_time)} - ${timeFormat.format(timeslot.end_time)}`;\n  }\n\n  @Watch('selectedDate')\n  selectedDateChanged(newVal: Date | null | undefined) {\n    debug(`[nylas-timeslot-picker] Selected date changed`, { newVal });\n\n    if (newVal) {\n      this.selectedTimeslotIndex = '';\n      if (typeof newVal !== 'undefined') {\n        const availableTimes = this.availability?.filter(timeslot => isSameDay(timeslot.start_time, newVal)).map(timeslot => timeslot);\n        this.times = availableTimes || [];\n      }\n    }\n  }\n\n  @Watch('availability')\n  availabilityChanged(newVal: AvailabilityTimeslot[] | undefined) {\n    debug(`[nylas-timeslot-picker] Available times changed`, { newVal, selectedDate: this.selectedDate });\n\n    if (typeof newVal !== 'undefined') {\n      const availableTimes = newVal?.filter(timeslot => this.selectedDate && isSameDay(timeslot.start_time, this.selectedDate)).map(timeslot => timeslot);\n      this.times = availableTimes || [];\n    }\n  }\n\n  @RegisterComponent<NylasTimeslotPicker, NylasSchedulerConnector, Exclude<NylasScheduling['stores'], undefined>>({\n    name: 'nylas-timeslot-picker',\n    stateToProps: new Map([\n      ['scheduler.selectedDate', 'selectedDate'],\n      ['scheduler.availability', 'availability'],\n      ['scheduler.selectedTimeslot', 'selectedTimeslot'],\n      ['scheduler.selectedTimezone', 'selectedTimezone'],\n      ['scheduler.isLoading', 'isLoading'],\n    ]),\n    eventToProps: {\n      timeslotSelected: async (event: CustomEvent<Timeslot>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        nylasSchedulerConnector.scheduler.selectTime(event.detail);\n      },\n      timeslotConfirmed: async (event: CustomEvent<Timeslot>, nylasSchedulerConnector: NylasSchedulerConnector) => {\n        if (event.detail) {\n          nylasSchedulerConnector.scheduler.toggleAdditionalData(true);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    if (this.isLoading) {\n      return (\n        <Host>\n          <div class={'loading'}>\n            {new Array(6).fill(0).map((_, i) => (\n              <div class={'time-slot-skeleton'} style={{ animationDelay: `${i * 20}ms` }} />\n            ))}\n          </div>\n        </Host>\n      );\n    }\n\n    if (this.availability && this.availability.length === 0) {\n      return (\n        <Host>\n          <div class={'empty'}>\n            <span>No dates available</span>\n          </div>\n        </Host>\n      );\n    }\n\n    if ((!this.times || this.times.length === 0) && !!this.selectedDate) {\n      return (\n        <Host>\n          <div class={'empty'}>\n            <span>No time slots available for selected date</span>\n          </div>\n        </Host>\n      );\n    }\n\n    if (!this.selectedDate) return <Host></Host>;\n\n    return (\n      <Host part=\"ntp\">\n        <div class={'time-picker-wrapper'}>\n          <div class={'time-slots'}>\n            {this.times.map((timeslot, index) => (\n              <button\n                part={`ntp__timeslot ${this.selectedTimeslot?.start_time?.getTime() === timeslot.start_time.getTime() ? 'ntp__timeslot--selected' : ''}`}\n                aria-role=\"button\"\n                class={{\n                  time: true,\n                  selected: typeof this.selectedTimeslot !== 'undefined' && this.selectedTimeslot?.start_time?.getTime() === timeslot.start_time.getTime(),\n                }}\n                onClick={() => this.onClickSelectTime(timeslot, index)}\n                onMouseEnter={() => this.handleMouseEnter(index)}\n                onMouseLeave={() => this.handleMouseLeave()}\n              >\n                {this.hoveredTimeslotIndex == index || this.selectedTimeslotIndex == this.getTimeslotId(timeslot.start_time, index)\n                  ? this.getTimeSlotLabel(timeslot)\n                  : timeslot.start_time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', timeZone: this.selectedTimezone })}\n              </button>\n            ))}\n          </div>\n          {this.selectedTimeslot && (\n            <div class={'footer'}>\n              <sp-button variant=\"primary\" onClick={(event: Event) => this.handleConfirmedTimeslot(event, this.selectedTimeslot)} part=\"ntp__button-primary\">\n                <slot name=\"timeslot-picker-cta-label\">Next</slot>\n              </sp-button>\n            </div>\n          )}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}