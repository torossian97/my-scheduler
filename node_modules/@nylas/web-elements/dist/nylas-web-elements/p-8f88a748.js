import{a as t}from"./p-01e86103.js";import{X as e,Z as s}from"./p-39aa2263.js";import{c as r}from"./p-cabb2e68.js";class a{constructor(t,e){this.nylasAuth=t;this.nylasAuthStore=e}async validateSession(){const e=await this.isAccessTokenValid();if(!e){this.logout()}else{let e=await this.nylasAuth.getTokenInfo();if(e){const s=5*60*1e3;const r=Math.floor(Date.now()/1e3);if(e.expires_in&&e.expires_in-r<s){t("[NylasAuthConnectorMixin] Refreshing access token");e=await this.nylasAuth.refreshAccessToken();if(!e){t("[NylasAuthConnectorMixin] Token is expired and could not be refreshed. Logging out.");this.logout();return}}this.nylasAuthStore.state.tokenInfo=e}}this.nylasAuthStore.state.isAuthenticated=e}async isAuthenticated(){return this.nylasAuth.isAuthenticated()}async getTokenInfo(){return this.nylasAuth.getTokenInfo()}async isAccessTokenValid(){return this.nylasAuth.isAccessTokenValid()}async logout(){await this.nylasAuth.logout()}async getHostedAuthRedirectURL(t,e,s){return this.nylasAuth.getHostedAuthRedirectURL(t,e,s)}async manageHostedAuthCodeExchange(t){const e=new URL(t);const s=e.searchParams.get("code");if(s){const t=await this.nylasAuth.exchangeAuthCodeForTokenInfo(s);if(t){this.nylasAuthStore.state.tokenInfo=t;this.nylasAuthStore.state.isAuthenticated=true;return t}}return null}}class n{constructor(t,e,s){this.nylasAuth=t;this.nylasAuthStore=e;this.nylasMailboxStore=s}async getMessages(){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email",["read-only","modify"])){throw new Error("Missing message:read-only scope")}this.nylasMailboxStore.state.state="loading";const t=this.nylasMailboxStore.state.messgeQueryParams;const r=new URLSearchParams;for(const e in t){const s=t[e]?.toString();if(s){r.append(e,s)}}const a=`/v3/grants/me/messages?${r.toString()}`;const n=await this.nylasAuth.nylasAPIRequest(a);if(e(n)){throw new s(n.error)}const i=n.data;this.nylasMailboxStore.state.messages=i;this.nylasMailboxStore.state.state="ready";return i}async getThreadMessages(t){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email",["read-only","modify"])){throw new Error("Missing message:read-only scope")}const r=await this.nylasAuth.nylasAPIRequest(`/v3/grants/me/messages?thread_id=${t}&fields=include_headers`);if(e(r)){throw new s(r.error)}const a=r.data;this.nylasMailboxStore.state.messages=a;return a}downloadMessageAttachments(t){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email",["read-only","modify"])){throw new Error("Missing message:read-only scope")}const e=[];const s=t.attachments||[];for(const r of s){const s=this.nylasAuth.nylasDownloadFileRequest(`/v3/grants/me/attachments/${r.id}?message_id=${t.id}`);e.push(s)}return e}async summarizeText(t){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email",["read-only","modify"])){throw new Error("Missing message:read-only scope")}const r=await this.nylasAuth.nylasAPIRequest(`/v3/grants/me/mailbox/summarize`,"POST",{message:{body:t}},true,this.nylasAuth.config.elementsApiUri);if(e(r)){throw new s(r.error)}return r.data.summary}async textToSpeech(t,e){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email",["read-only","modify"])){throw new Error("Missing message:read-only scope")}return this.nylasAuth.nylasAPIRequest(`/v3/grants/me/mailbox/tts`,"POST",{text:t},false,this.nylasAuth.config.elementsApiUri,{...e?{signal:e?.signal}:{}})}}class i{constructor(t,e,s,r){this.nylasAuth=t;this.nylasAuthStore=e;this.nylasMailboxStore=s;this.router=r}async getThreads(t,r="overwrite",a=true){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email",["read-only","modify"])){throw new Error("Missing thread:read-only scope")}if(a){this.nylasMailboxStore.state.state="loading"}const n=t||this.nylasMailboxStore.state.threadsQueryParams;const i=new URLSearchParams;for(const t in n){const e=n[t]?.toString();if(typeof e!=="undefined"&&e!==null){i.append(t,e)}}if(n.search_query_native){this.router.navigate(`/?query=${n.search_query_native}`,true)}else if(this.nylasMailboxStore.state.threadsQueryParams.search_query_native&&!n.search_query_native){this.router.navigate("/",true)}if(!n.page_token){this.nylasMailboxStore.state.previousThreadPageTokens=[]}this.nylasMailboxStore.state.threadsQueryParams=n;const o=`/v3/grants/me/threads?${i.toString()}`;const h=await this.nylasAuth.nylasAPIRequest(o);if(e(h)){throw new s(h.error)}const c=h.data;switch(r){case"prepend":this.nylasMailboxStore.state.threads=[...c,...this.nylasMailboxStore.state.threads];break;case"append":this.nylasMailboxStore.state.threads=[...this.nylasMailboxStore.state.threads,...c];break;case"overwrite":default:this.nylasMailboxStore.state.threads=c;break}if(h.next_cursor){this.nylasMailboxStore.state.nextThreadPageToken=h.next_cursor}else{this.nylasMailboxStore.state.nextThreadPageToken=null}if(a){this.nylasMailboxStore.state.state="ready"}return c}async getThread(t){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email",["read-only","modify"])){throw new Error("Missing thread:read-only scope")}const r=this.nylasMailboxStore.state.threads.find((e=>e.id===t));if(r){return r}this.nylasMailboxStore.state.state="loading";const a=`/v3/grants/me/threads/${t}`;const n=await this.nylasAuth.nylasAPIRequest(a);if(e(n)){throw new s(n.error)}const i=n.data;this.nylasMailboxStore.state.threads=this.nylasMailboxStore.state.threads.map((t=>{if(t.id===i.id){return i}return t}));this.nylasMailboxStore.state.state="ready";return i}async nextThreadPage(t="overwrite",e=true){if(!this.nylasMailboxStore.state.nextThreadPageToken){throw new Error("No next page token")}this.nylasMailboxStore.state.previousThreadPageTokens=Array.from(new Set([...this.nylasMailboxStore.state.previousThreadPageTokens,this.nylasMailboxStore.state.threadsQueryParams.page_token??null]));const s=this.nylasMailboxStore.state.nextThreadPageToken;return this.getThreads({...this.nylasMailboxStore.state.threadsQueryParams,page_token:s},t,e)}async previousThreadPage(t="overwrite",e=true){if(!this.nylasMailboxStore.state.previousThreadPageTokens.length){throw new Error("No previous page token")}const s=[...this.nylasMailboxStore.state.previousThreadPageTokens];const r=s.pop();this.nylasMailboxStore.state.previousThreadPageTokens=s;return this.getThreads({...this.nylasMailboxStore.state.threadsQueryParams,page_token:r??undefined},t,e)}updateThreadQueryParams(t){this.nylasMailboxStore.state.threadsQueryParams={...this.nylasMailboxStore.state.threadsQueryParams,...t}}back(){this.router.navigate("/",true);this.nylasMailboxStore.state.selectedThread=null}unSelectThread(){this.nylasMailboxStore.state.selectedThread=null}async selectThread(e){this.router.navigate(`/thread/${e.id}`,true);this.nylasMailboxStore.state.selectedThread=e;if(e.unread){this.markThreadAsRead(e).catch((e=>{t("Error marking thread as read",e)}))}}async markThreadAsRead(t){return this.updateThread(t,{unread:false})}async updateThread(t,r){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email","modify")){throw new Error("Missing thread:modify scope")}const a=`/v3/grants/me/threads/${t.id}`;const n=await this.nylasAuth.nylasAPIRequest(a,"PUT",r);if(e(n)){throw new s(n.error)}const i=n.data;this.nylasMailboxStore.state.threads=this.nylasMailboxStore.state.threads.map((t=>{if(t.id===i.id){return i}return t}));this.nylasMailboxStore.state.selectedThread=i;return i}}class o{constructor(t,e,s){this.nylasAuth=t;this.nylasAuthStore=e;this.nylasMailboxStore=s}async getFolders(){if(!this.nylasAuthStore.state.isAuthenticated){throw new Error("Not authenticated")}if(!this.nylasAuth.hasScopeByType("email",["read-only","modify"])){throw new Error("Missing thread:read-only scope")}this.nylasMailboxStore.state.state="loading";const t=`/v3/grants/me/folders`;const r=await this.nylasAuth.nylasAPIRequest(t);if(e(r)){throw new s(r.error)}const a=r.data;this.nylasMailboxStore.state.folders=a;this.nylasMailboxStore.state.state="ready";return a}async selectFolder(t){this.nylasMailboxStore.state.threadsQueryParams={in:t.id,...this.nylasMailboxStore.state.threadsQueryParams||{}}}}class h extends Event{constructor(t,e){super(t,e);this.oldURL=e.oldURL;this.newURL=e.newURL}}class c{constructor(){this.routeChangeListeners=[];t("HashRouter constructor")}destroy(){t("HashRouter destroy");window.removeEventListener("hashchange",this.onRouteChange.bind(this))}init(){t("HashRouter init");window.addEventListener("hashchange",this.onRouteChange.bind(this));if(typeof HashChangeEvent!=="undefined"){const t=new HashChangeEvent("hashchange",{oldURL:"",newURL:window.location.href});this.onRouteChange(t)}else{const t=new h("hashchange",{oldURL:"",newURL:window.location.href});this.onRouteChange(t)}}addRouteChangeListener(e,s){t("HashRouter addRouteChangeListener");this.routeChangeListeners.push([e,s])}navigate(e,s){t("HashRouter navigate");if(s){return window.history.pushState(null,"",`#${e}`)}window.location.hash=e}setRoute(e){t("HashRouter setRoute");window.location.hash=e}matchRoute(e,s){const r=e.split("/");const a=s.split("/");t(`HashRouter matchRoute route=${e} path=${s}`,{routeParts:r,pathParts:a});if(r[1]===""&&a[0]===""){return true}if(r.length!==a.length){return false}for(let t=0;t<r.length;t++){const e=r[t];const s=a[t];if(e.startsWith(":")){continue}if(e!==s){return false}}return true}getRouteParams(e){t("HashRouter getRouteParams");const s={};const r=e.split("/");const a=window.location.hash.split("/");r.forEach(((t,e)=>{if(t.startsWith(":")){const r=t.substring(1);s[r]=a[e]}}));return s}getRouteWithParams(e,s){t("HashRouter getRouteWithParams");let r=e;Object.keys(s).forEach((t=>{r=r.replace(`:${t}`,s[t])}));return r}getRoute(){t("HashRouter getRoute");return window.location.hash}onRouteChange(e){this.routeChangeListeners.forEach((async([s,r])=>{const a=e.newURL.indexOf("#")===-1?"":e.newURL.substring(e.newURL.indexOf("#")+1);t(`HashRouter onRouteChange route=${s} path=${a}`,{event:e});if(!this.matchRoute(s,a)){t(`HashRouter onRouteChange route=${s} path=${a} does not match`);return}const n=this.getRouteParams(s);await r(s,a,n)}))}getBasePath(){t("HashRouter getBasePath");return""}}function d(t={}){const e={isAuthenticated:false,tokenInfo:null,state:"ready",...t};const s=r(e);s.reset=()=>{for(const t in e){const r=e[t];s.set(t,r)}};return s}function u(t={}){const e={state:"ready",messages:[],threads:[],folders:[],selectedThread:null,nextThreadPageToken:null,previousThreadPageTokens:[],searchQuery:"",hasNextThreadPage:false,hasPreviousThreadPage:false,selectedFolder:"inbox",threadsQueryParams:{in:"inbox"},messgeQueryParams:{fields:"include_headers"},...t};const s=r({...e});s.onChange("nextThreadPageToken",(t=>{s.set("hasNextThreadPage",t!==null)}));s.onChange("previousThreadPageTokens",(t=>{s.set("hasPreviousThreadPage",t.length>0)}));s.onChange("threadsQueryParams",(t=>{s.set("selectedFolder",t.in||"inbox");s.set("searchQuery",t.search_query_native||"")}));s.reset=()=>{for(const t in e){const r=e[t];s.set(t,r)}};return s}export{d as C,c as H,a as N,i as a,n as b,o as c,u as d};
//# sourceMappingURL=p-8f88a748.js.map