{"version":3,"names":["timePeriodSelectorCss","TimePeriodSelectorStyle0","TimePeriodSelector","this","defaultSelectedPeriod","defaultSelectedNumber","calculateOptions","map","i","label","toString","value","timePeriods","period","defaultSelectedPeriodChangedHandler","newValue","selectedPeriod","updateNumberOptionsAndSelectedNumber","defaultSelectedNumberChangedHandler","selectedNumber","timePeriodsChangedHandler","timePeriodOptions","Array","from","length","_","selectedOptionChangedHandler","event","debug","detail","name","parseInt","selected","number","timePeriodChanged","emit","numberOptions","render","h","key","class","id","exportparts","options","defaultSelectedOption","find","withSearch","pluralizedLabel"],"sources":["src/components/design-system/time-period-selector/time-period-selector.scss?tag=time-period-selector&encapsulation=scoped","src/components/design-system/time-period-selector/time-period-selector.tsx"],"sourcesContent":[".time-period-selector {\n  display: flex;\n  gap: 0.5rem;\n\n  select-dropdown {\n    border: 1px solid var(--nylas-base-200);\n    border-radius: var(--nylas-border-radius-2x);\n  }\n\n  select-dropdown#time-period::part(sd_dropdown-button) {\n    min-width: 108px;\n  }\n  select-dropdown#time-number::part(sd_dropdown-button) {\n    min-width: 84px;\n  }\n\n  select-dropdown::part(sd_dropdown-button) {\n    padding: 1rem;\n    gap: 1rem;\n  }\n  select-dropdown::part(sd_dropdown-content) {\n    width: 100%;\n    max-height: 200px;\n  }\n}\n","import { debug } from '@/utils/utils';\nimport { Element, Event, EventEmitter, Watch } from '@stencil/core';\nimport { Component, h, Listen, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'time-period-selector',\n  styleUrl: 'time-period-selector.scss',\n  scoped: true,\n})\nexport class TimePeriodSelector {\n  @Element() host!: HTMLElement;\n\n  // The possible values for the time periods dropdown\n  @Prop() timePeriods: string[] = ['hour', 'day', 'week', 'month'];\n\n  /**\n   * The default selected time period.\n   */\n  @Prop() defaultSelectedPeriod: string = 'hour';\n\n  /**\n   * The default selected number.\n   */\n  @Prop() defaultSelectedNumber: number = 1;\n\n  /**\n   * The currently selected time period\n   */\n  @State() selectedPeriod: string = this.defaultSelectedPeriod;\n\n  /**\n   * The currently selected number of the time period\n   */\n  @State() selectedNumber: number = this.defaultSelectedNumber;\n\n  /*\n   * The options for the number dropdown, to be calculated based on the selectedPeriod\n   */\n  @State() numberOptions: { label: string; value: string }[] = this.calculateOptions('hour').map(i => {\n    return {\n      label: i.toString(),\n      value: i.toString(),\n    };\n  });\n\n  /**\n   * The options for the time period dropdown\n   */\n  @State() timePeriodOptions = this.timePeriods.map(period => {\n    return {\n      label: period,\n      value: period,\n    };\n  });\n\n  @Watch('defaultSelectedPeriod')\n  defaultSelectedPeriodChangedHandler(newValue: string) {\n    this.selectedPeriod = newValue;\n    this.updateNumberOptionsAndSelectedNumber(newValue);\n  }\n\n  @Watch('defaultSelectedNumber')\n  defaultSelectedNumberChangedHandler(newValue: number) {\n    this.selectedNumber = newValue;\n  }\n\n  @Watch('timePeriods')\n  timePeriodsChangedHandler(newValue: string[]) {\n    this.timePeriodOptions = newValue.map(period => {\n      return {\n        label: period,\n        value: period,\n      };\n    });\n  }\n\n  @Event() timePeriodChanged!: EventEmitter<{ number: number; period: string }>;\n\n  private calculateOptions(period: string): number[] {\n    switch (period) {\n      case 'hour':\n        return Array.from({ length: 23 }, (_, i) => i + 1);\n      case 'minute':\n        return Array.from({ length: 60 }, (_, i) => i);\n      case 'day':\n        return Array.from({ length: 30 }, (_, i) => i + 1);\n      case 'week':\n        return Array.from({ length: 4 }, (_, i) => i + 1);\n      case 'month':\n        return Array.from({ length: 12 }, (_, i) => i + 1);\n      default:\n        return [];\n    }\n  }\n\n  @Listen('selectedOptionChanged')\n  selectedOptionChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('time-period-selector', 'selectedOptionChangedHandler', event.detail);\n    const { value, name } = event.detail;\n    if (name === 'time-period') {\n      this.selectedPeriod = value;\n      this.updateNumberOptionsAndSelectedNumber(value);\n    } else if (name === 'time-number') {\n      this.selectedNumber = parseInt(value);\n    }\n    const selected = {\n      number: this.selectedNumber,\n      period: this.selectedPeriod,\n    };\n    this.timePeriodChanged.emit(selected);\n  }\n\n  updateNumberOptionsAndSelectedNumber(period: string) {\n    const numberOptions = this.calculateOptions(period);\n    this.numberOptions = numberOptions.map(i => {\n      return {\n        label: i.toString(),\n        value: i.toString(),\n      };\n    });\n    this.selectedNumber = parseInt(this.numberOptions[0].value);\n  }\n\n  render() {\n    return (\n      <div class=\"time-period-selector\">\n        <select-dropdown\n          id=\"time-number\"\n          name={'time-number'}\n          exportparts=\"sd__dropdown: tps__number-dropdown, sd__dropdown-button: tps__number-dropdown-button, sd__dropdown-content: tps__number-dropdown-content\"\n          options={this.numberOptions}\n          defaultSelectedOption={this.numberOptions.find(i => i.value == this.selectedNumber.toString()) ?? this.numberOptions[0]}\n          withSearch={false}\n        />\n        <select-dropdown\n          id=\"time-period\"\n          name={'time-period'}\n          options={this.timePeriodOptions}\n          exportparts=\"sd__dropdown: tps__period-dropdown, sd__dropdown-button: tps__period-dropdown-button, sd__dropdown-content: tps__period-dropdown-content\"\n          pluralizedLabel={this.selectedNumber > 1 ? 's' : ''}\n          defaultSelectedOption={this.timePeriodOptions.find(i => i.value == this.selectedPeriod) ?? this.timePeriodOptions[0]}\n          withSearch={false}\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":"qHAAA,MAAMA,EAAwB,4xBAC9B,MAAAC,EAAeD,E,MCQFE,EAAkB,M,+FAIG,CAAC,OAAQ,MAAO,OAAQ,S,2BAKhB,O,2BAKA,E,oBAKNC,KAAKC,sB,oBAKLD,KAAKE,sB,mBAKsBF,KAAKG,iBAAiB,QAAQC,KAAIC,IACtF,CACLC,MAAOD,EAAEE,WACTC,MAAOH,EAAEE,e,uBAOgBP,KAAKS,YAAYL,KAAIM,IACzC,CACLJ,MAAOI,EACPF,MAAOE,K,CAKX,mCAAAC,CAAoCC,GAClCZ,KAAKa,eAAiBD,EACtBZ,KAAKc,qCAAqCF,E,CAI5C,mCAAAG,CAAoCH,GAClCZ,KAAKgB,eAAiBJ,C,CAIxB,yBAAAK,CAA0BL,GACxBZ,KAAKkB,kBAAoBN,EAASR,KAAIM,IAC7B,CACLJ,MAAOI,EACPF,MAAOE,K,CAOL,gBAAAP,CAAiBO,GACvB,OAAQA,GACN,IAAK,OACH,OAAOS,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACC,EAAGjB,IAAMA,EAAI,IAClD,IAAK,SACH,OAAOc,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACC,EAAGjB,IAAMA,IAC9C,IAAK,MACH,OAAOc,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACC,EAAGjB,IAAMA,EAAI,IAClD,IAAK,OACH,OAAOc,MAAMC,KAAK,CAAEC,OAAQ,IAAK,CAACC,EAAGjB,IAAMA,EAAI,IACjD,IAAK,QACH,OAAOc,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACC,EAAGjB,IAAMA,EAAI,IAClD,QACE,MAAO,G,CAKb,4BAAAkB,CAA6BC,GAC3BC,EAAM,uBAAwB,+BAAgCD,EAAME,QACpE,MAAMlB,MAAEA,EAAKmB,KAAEA,GAASH,EAAME,OAC9B,GAAIC,IAAS,cAAe,CAC1B3B,KAAKa,eAAiBL,EACtBR,KAAKc,qCAAqCN,E,MACrC,GAAImB,IAAS,cAAe,CACjC3B,KAAKgB,eAAiBY,SAASpB,E,CAEjC,MAAMqB,EAAW,CACfC,OAAQ9B,KAAKgB,eACbN,OAAQV,KAAKa,gBAEfb,KAAK+B,kBAAkBC,KAAKH,E,CAG9B,oCAAAf,CAAqCJ,GACnC,MAAMuB,EAAgBjC,KAAKG,iBAAiBO,GAC5CV,KAAKiC,cAAgBA,EAAc7B,KAAIC,IAC9B,CACLC,MAAOD,EAAEE,WACTC,MAAOH,EAAEE,eAGbP,KAAKgB,eAAiBY,SAAS5B,KAAKiC,cAAc,GAAGzB,M,CAGvD,MAAA0B,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,wBACTF,EAAA,mBAAAC,IAAA,2CACEE,GAAG,cACHX,KAAM,cACNY,YAAY,2IACZC,QAASxC,KAAKiC,cACdQ,sBAAuBzC,KAAKiC,cAAcS,MAAKrC,GAAKA,EAAEG,OAASR,KAAKgB,eAAeT,cAAeP,KAAKiC,cAAc,GACrHU,WAAY,QAEdR,EAAA,mBAAAC,IAAA,2CACEE,GAAG,cACHX,KAAM,cACNa,QAASxC,KAAKkB,kBACdqB,YAAY,2IACZK,gBAAiB5C,KAAKgB,eAAiB,EAAI,IAAM,GACjDyB,sBAAuBzC,KAAKkB,kBAAkBwB,MAAKrC,GAAKA,EAAEG,OAASR,KAAKa,kBAAmBb,KAAKkB,kBAAkB,GAClHyB,WAAY,Q"}