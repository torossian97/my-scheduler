{"version":3,"names":["iconCss","ForwardIconStyle0","ForwardIcon","render","h","key","fill","width","this","height","viewBox","xmlns","d","nylasComposerCss","NylasComposerStyle0","NylasComposer","closeComposer","event","close","emit","sendComposer","editorEl","debug","messageBody","querySelector","message","send","replyBody","innerHTML","connectedCallback","disconnectedCallback","componentWillLoad","componentDidLoad","watchBody","toolbarEl","addEventListener","_","selection","host","shadowRoot","getSelection","range","getRangeAt","text","toString","style","display","foundNode","commonAncestorContainer","foundElement","parentElement","messageBodyRect","getBoundingClientRect","foundRect","textNode","childNodes","textContent","textPosition","indexOf","fontSize","window","getComputedStyle","fontSizeNumber","parseInt","replace","top","clientHeight","left","newMessage","querySelectorAll","forEach","el","remove","document","createElement","classList","add","emptyParagraph","appendChild","br","replyText","innerText","Date","date","toLocaleDateString","undefined","dateStyle","from","map","name","email","join","body","replyElement","replyContainer","blockquote","preventDefault","target","once","focus","Host","scale","color","class","contentEditable","ref","r","quiet","onClick","execCommand","slot","nylasSummarizeMessageButtonCss","NylasSummarizeMessageButtonStyle0","NylasSummarizeMessageButton","constructor","hostRef","abortController","AbortController","async","stopPropagation","state","summarize","playAudio","updateState","defaultPrevented","audioRef","play","then","pause","catch","error","console","abort","bind","ttsResponseBody","audioElement","rb","Error","reader","getReader","chunks","readChunk","blob","Blob","type","blobUrl","URL","createObjectURL","src","mediaSource","MediaSource","sourceBuffer","sourceDone","onMediaSourceOpen","addSourceBuffer","onUpdateEnd","pump","read","done","value","updating","appendBuffer","paused","endOfStream","removeEventListener","push","label","onClickCapture","stopped","loading","playing","autoPlay","onPlaying","onPause","onEnded","__decorate","RegisterComponent","eventToProps","nylasConnector","detail","htmlToPlainText","summary","messages","summarizeText","textToSpeech","fireRegisterEvent","invertColor","matchMedia","matches","startsWith","invertHexColor","invertRgbColor","invertHslColor","isNamedColor","invertNamedColor","hex","length","slice","padStart","g","b","rgb","match","Number","hsl","s","l","test","namedColorToRgb","toLowerCase","transformElement","element","HTMLStyleElement","styleTextContent","replaceAll","borderColor","matchAll","fullMatch","escapedFullMatch","border","trim","_width","_style","split","backgroundColor","background","HTMLElement","computedStyle","hasAttribute","removeAttribute","processStyles","root","elements","global","factory","module","exports","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","prototype","arrayPop","pop","arrayPush","stringToLowerCase","String","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","RegExp","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","lcElement","cleanArray","index","clone","object","newObject","property","isArray","lookupGetter","prop","desc","get","fallbackValue","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","__proto__","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","createDOMPurify","DOMPurify","version","removed","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","_removeAttribute","attribute","getAttributeNode","setAttribute","_initDocument","dirty","doc","leadingWhitespace","dirtyPayload","parseFromString","documentElement","createDocument","insertBefore","createTextNode","call","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","childCount","i","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","nylasViewEmailCss","NylasViewEmailStyle0","NylasViewEmail","htmlElement","setBody","styles","hoistedFontURLs","Map","sanitizedBody","link","isHTML","detectIfMessageIsHTML","detectHTMLOrPlainText","parsePlainTextToHTML","detectDarkMode","href","url","location","protocol","line","a","gmailQuote","toggleButton","head","handleMobileSize","vw","Math","max","clientWidth","innerWidth","viewEmailReact","viewEmailElement","parentReact","scaleX","scaleY","min","setProperty","removeProperty","messageChanged","handleScroll","viewEmailElementChanged","button","toggle","Fragment","part","ReplyAllIconStyle0","ReplyAllIcon","ReplyIconStyle0","ReplyIcon"],"sources":["src/common/icons/icon.css?tag=forward-icon&encapsulation=scoped","src/common/icons/forward.tsx","src/components/mailbox/nylas-composer/nylas-composer.scss?tag=nylas-composer&encapsulation=shadow","src/components/mailbox/nylas-composer/nylas-composer.tsx","src/components/mailbox/nylas-summarize-message-button/nylas-summarize-message-button.scss?tag=nylas-summarize-message-button&encapsulation=shadow","src/components/mailbox/nylas-summarize-message-button/nylas-summarize-message-button.tsx","src/utils/color-utils.ts","../../node_modules/.pnpm/dompurify@3.0.8/node_modules/dompurify/dist/purify.js","src/components/mailbox/nylas-view-email/nylas-view-email.scss?tag=nylas-view-email&encapsulation=shadow","src/components/mailbox/nylas-view-email/nylas-view-email.tsx","src/common/icons/icon.css?tag=reply-all-icon&encapsulation=scoped","src/common/icons/reply-all.tsx","src/common/icons/icon.css?tag=reply-icon&encapsulation=scoped","src/common/icons/reply.tsx"],"sourcesContent":[":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'forward-icon',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class ForwardIcon {\n  @Prop() width: string = '15';\n  @Prop() height: string = '15';\n\n  render() {\n    return (\n      <svg fill=\"auto\" width={this.width} height={this.height} viewBox=\"0 0 1920 1920\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"m1246.246 64-90.496 90.496 477.952 477.952h-590.848C467.878 632.448.038 1100.416.038 1675.392v109.056h128v-109.056c0-504.576 410.368-914.944 914.816-914.944h590.848l-477.952 478.08 90.496 90.496 632.448-632.576L1246.246 64Z\"\n          fill-rule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n}\n",":host {\n  display: grid;\n  color: var(--nylas-color-primary-900);\n}\n\n.editor {\n  position: relative;\n  display: block;\n  max-height: 300px;\n  overflow: auto;\n\n  padding: 1rem;\n\n  border: 1px solid var(--nylas-color-primary-300);\n\n  blockquote {\n    visibility: hidden;\n    overflow: hidden;\n    position: relative;\n    transition: height 0.3s ease;\n    margin: 0;\n  }\n\n  blockquote::before {\n    content: '...';\n    visibility: visible;\n    opacity: 1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: var(--nylas-color-primary-300);\n    width: 20px;\n    text-align: center;\n    color: var(--nylas-color-primary-800);\n    vertical-align: middle;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-self: center;\n    cursor: pointer;\n  }\n\n  .collapsed {\n    height: 20px;\n  }\n\n  .expanded {\n    visibility: visible;\n    opacity: 1;\n    height: auto; /* Height to fit the content */\n    margin: 0px 0px 0px 0.8ex;\n    border-left: 1px solid var(--nylas-color-primary-300);\n    padding-left: 1rem;\n  }\n\n  .expanded::before {\n    display: none; /* Hide the '...' when content is expanded */\n  }\n}\n\n.buttons {\n  display: flex;\n\n  margin-top: 1rem;\n\n  justify-content: space-between;\n\n  sp-button {\n    border-radius: var(--nylas-border-radius);\n    background-color: var(--nylas-color-primary-400);\n    color: var(--nylas-color-primary-900);\n    fill: var(--nylas-color-primary-900);\n\n    &:hover {\n      background-color: var(--nylas-color-primary-500);\n    }\n\n    &:disabled {\n      background-color: var(--nylas-color-primary-200);\n      color: var(--nylas-color-primary-600);\n      cursor: not-allowed;\n    }\n\n    & chevron-icon {\n      display: inline-block;\n    }\n  }\n\n  .close {\n    justify-self: end;\n  }\n}\n\n.toolbar {\n  position: absolute;\n  display: none;\n  background-color: var(--nylas-color-primary-200);\n  border-radius: var(--nylas-border-radius);\n  z-index: 1;\n\n  sp-button {\n    border: 0;\n  }\n}\n","import { debug } from '@/utils/utils';\nimport { Message } from '@nylas/core';\nimport { Component, Event, EventEmitter, Element, Prop, Watch, h, Host } from '@stencil/core';\n\n@Component({\n  tag: 'nylas-composer',\n  styleUrl: 'nylas-composer.scss',\n  shadow: true,\n})\nexport class NylasComposer {\n  /**\n   * The host element\n   */\n  @Element() readonly host!: HTMLElement;\n\n  /**\n   * The message to reply to or forward\n   */\n  @Prop() readonly message?: Message;\n\n  /**\n   * The view email element\n   */\n  @Prop() readonly viewEmailElement?: HTMLNylasViewEmailElement | null;\n\n  /**\n   * Fired when the composer is closed\n   */\n  @Event() readonly close!: EventEmitter<MouseEvent>;\n\n  /**\n   * Fired when the send button is clicked\n   */\n  @Event() readonly send!: EventEmitter<{\n    message: Message;\n    replyBody: string;\n  }>;\n\n  /**\n   * The editor element\n   */\n  private editorEl?: HTMLDivElement;\n\n  /**\n   * The toolbar element\n   */\n  private toolbarEl?: HTMLDivElement;\n\n  connectedCallback() {}\n\n  disconnectedCallback() {\n    if (this.editorEl) {\n      this.editorEl.innerHTML = '';\n    }\n  }\n\n  componentWillLoad() {}\n\n  async componentDidLoad() {\n    if (this.message) {\n      this.watchBody(this.message);\n    }\n\n    if (!this.editorEl) {\n      debug('[connectedCallback] no editor element');\n      return;\n    }\n\n    if (!this.toolbarEl) {\n      debug('[connectedCallback] no toolbar element');\n      return;\n    }\n\n    const editorEl = this.editorEl;\n    const toolbarEl = this.toolbarEl;\n\n    // On highlight, show the toolbar\n    editorEl.addEventListener('mouseup', _ => {\n      interface ShadowRootWithSelection extends ShadowRoot {\n        getSelection(): Selection | null;\n      }\n\n      const selection: Selection | null = (this.host.shadowRoot as ShadowRootWithSelection)?.getSelection();\n      if (!selection) {\n        debug('no selection');\n        return;\n      }\n\n      // Get range\n      const range = selection.getRangeAt(0);\n\n      // Get text selection\n      const text = selection.toString();\n      if (!text) {\n        toolbarEl.style.display = 'none';\n        return;\n      }\n\n      // Find .message-body in the editor\n      const messageBody = editorEl.querySelector('.message-body');\n      if (!messageBody) {\n        debug('no message body');\n        return;\n      }\n\n      // Get commonAncestorContainer\n      const foundNode = range.commonAncestorContainer;\n\n      // Get rect\n      const foundElement = foundNode.parentElement;\n\n      // If we didn't find the text, then don't show the toolbar\n      if (!foundElement) {\n        return;\n      }\n\n      // Get the bounding rect of the message body\n      const messageBodyRect = messageBody.getBoundingClientRect();\n      debug('messageBodyRect', { messageBodyRect });\n\n      const foundRect = foundElement.getBoundingClientRect();\n      debug('foundRect', { foundRect });\n\n      // Find the text position within the found node\n      // without using document.createRange()\n\n      // Get the text node\n      const textNode = foundElement.childNodes[0];\n\n      // Get the text content\n      const textContent = textNode.textContent || '';\n\n      // Get the text position\n      const textPosition = textContent.indexOf(text);\n\n      // Calcualte the font width\n      const fontSize = window.getComputedStyle(foundElement).fontSize;\n      const fontSizeNumber = parseInt(fontSize.replace('px', ''), 10);\n\n      // Top\n      const top = foundRect.top - messageBodyRect.top - toolbarEl.clientHeight;\n      const left = textPosition * (1 / fontSizeNumber) * 100;\n\n      // Position the toolbar\n      toolbarEl.style.top = `${top}px`;\n      toolbarEl.style.left = `${left}px`;\n      toolbarEl.style.display = 'block';\n    });\n  }\n\n  @Watch('message')\n  watchBody(newMessage: Message) {\n    if (!this.editorEl) {\n      debug('no editor element');\n      return;\n    }\n\n    // Find .message-body elements and remove them\n    this.editorEl.querySelectorAll('.message-body').forEach(el => el.remove());\n\n    // Create a container for the body of the reply\n    const messageBody = document.createElement('div');\n    messageBody.classList.add('message-body');\n\n    // Add an empty paragraph to the reply body\n    const emptyParagraph = document.createElement('p');\n    emptyParagraph.innerHTML = '&nbsp;';\n    messageBody.appendChild(emptyParagraph);\n\n    // Also add a break to separate the reply from the rest of the email\n    const br = document.createElement('br');\n    messageBody.appendChild(br);\n\n    // Append a reply header\n    const replyText = document.createElement('div');\n    replyText.classList.add('reply-text');\n    replyText.innerText = `On ${new Date(newMessage.date * 1000).toLocaleDateString(undefined, { dateStyle: 'full' })} <${newMessage.from\n      ?.map(from => from.name || from.email)\n      .join(', ')}> wrote:`;\n    messageBody.appendChild(replyText);\n\n    // If we have a reply body, separate the contents with a horizontal rule\n    if (newMessage.body) {\n      // For the reply HTML, we want to wrap the contents in a custom element\n      // with a shadow root. This will allow us to style the contents of the\n      // reply without affecting the rest of the page.\n\n      // First convert the HTML string to a DOM element\n      const replyElement = document.createElement('html');\n      replyElement.innerHTML = newMessage.body;\n\n      const replyContainer = document.createElement('blockquote');\n      replyContainer.classList.add('collapsed');\n      replyContainer.classList.add('gmail_quote');\n\n      // Now add the reply element to the container\n      replyContainer.innerHTML = replyElement.innerHTML;\n\n      messageBody.appendChild(replyContainer);\n\n      debug('replyContainer', { replyContainer });\n    }\n\n    // Add the message body to the editor\n    this.editorEl.appendChild(messageBody);\n\n    this.editorEl.querySelectorAll('blockquote.collapsed').forEach(blockquote => {\n      blockquote.addEventListener(\n        'click',\n        function (event) {\n          event.preventDefault();\n          const el = event.target as HTMLElement;\n          el.classList.remove('collapsed');\n          el.classList.add('expanded');\n        },\n        { once: true },\n      );\n    });\n\n    // Focus the editor\n    this.editorEl.focus();\n  }\n\n  private closeComposer = (event: MouseEvent) => {\n    this.close.emit(event);\n  };\n\n  private sendComposer = (event: MouseEvent) => {\n    if (!this.editorEl) {\n      debug('no editor element');\n      return;\n    }\n\n    const messageBody = this.editorEl.querySelector('.message-body');\n    if (!messageBody) {\n      debug('no message body');\n      return;\n    }\n\n    // Send the message\n    if (this.message) {\n      this.send.emit({\n        message: this.message,\n        replyBody: messageBody.querySelector('.message-body')?.innerHTML || '',\n      });\n\n      // Close the composer\n      this.close.emit(event);\n\n      // Clear the editor\n      this.editorEl.innerHTML = '';\n    }\n  };\n\n  render() {\n    return (\n      <Host>\n        <sp-theme scale=\"medium\" color=\"dark\">\n          <div class=\"editor\" contentEditable={true} ref={r => (this.editorEl = r)}>\n            <div class=\"toolbar\" ref={r => (this.toolbarEl = r)} contentEditable={false}>\n              <sp-button quiet onClick={() => document.execCommand('bold')}>\n                <div slot=\"icon\">\n                  <bold-icon></bold-icon>\n                </div>\n                <div slot=\"label\">Bold</div>\n              </sp-button>\n              <sp-button quiet onClick={() => document.execCommand('underline')}>\n                <div slot=\"icon\">\n                  <underline-icon></underline-icon>\n                </div>\n                <div slot=\"label\">Underline</div>\n              </sp-button>\n              <sp-button quiet onClick={() => document.execCommand('italic')}>\n                <div slot=\"icon\">\n                  <italic-icon></italic-icon>\n                </div>\n                <div slot=\"label\">Italic</div>\n              </sp-button>\n            </div>\n          </div>\n          <div class={'buttons'}>\n            <sp-button onClick={this.sendComposer} class=\"send\">\n              Send\n            </sp-button>\n            <sp-button onClick={this.closeComposer} class=\"close\">\n              Close\n            </sp-button>\n          </div>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\nsp-button {\n  padding: 0;\n  border: 0;\n  border-radius: var(--nylas-border-radius);\n  min-block-size: 50%;\n  min-inline-size: 2rem;\n\n  background-color: var(--nylas-color-primary-300);\n  fill: var(--nylas-color-primary-800);\n\n  &:hover {\n    background-color: var(--nylas-color-primary-400);\n  }\n}\n\n.summarize-button {\n  &.stopped {\n    animation: none;\n  }\n  &.playing {\n    animation: pulse 2s infinite;\n  }\n  &.loading {\n    display: flex;\n    align-content: center;\n    height: 1.5rem;\n    width: 2rem;\n    vertical-align: middle;\n    animation: pulse 2s infinite;\n    flex-wrap: wrap;\n    loading-icon {\n      --dot-color: var(--nylas-color-primary-600);\n    }\n  }\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n    box-shadow: 0 0 0 0 var(--nylas-color-primary-300);\n  }\n  70% {\n    transform: scale(1.05);\n    box-shadow: 0 0 0 10px rgba(255, 69, 0, 0);\n  }\n  100% {\n    transform: scale(1);\n    box-shadow: 0 0 0 0 rgba(255, 69, 0, 0);\n  }\n}\n\n@keyframes wave {\n  0% {\n    transform: translateX(0);\n  }\n  50% {\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(0);\n  }\n}\n","import { Message } from '@nylas/core';\nimport { Component, Event, EventEmitter, Host, Method, Prop, State, h } from '@stencil/core';\nimport { NylasMailboxConnector } from '../../../components';\nimport { debug, htmlToPlainText } from '@/utils/utils';\nimport { RegisterComponent } from '@/common/register-component';\nimport { NylasMailbox } from '../nylas-mailbox/nylas-mailbox';\n\nexport type SummarizeEvent = {\n  playAudio: (ttsResponseBody: Promise<ReadableStream<Uint8Array> | null>) => Promise<void>;\n  updateState: (state: 'loading' | 'playing' | 'stopped') => Promise<void>;\n  abortController: AbortController;\n  message: Message;\n};\n\n@Component({\n  tag: 'nylas-summarize-message-button',\n  styleUrl: 'nylas-summarize-message-button.scss',\n  shadow: true,\n})\nexport class NylasSummarizeMessageButton {\n  /**\n   * The message to summarize\n   */\n  @Prop() readonly message?: Message;\n\n  /**\n   * The on summarize event handler\n   */\n  @Event() readonly summarize!: EventEmitter<SummarizeEvent>;\n\n  /**\n   * The state of the summarize button\n   */\n  @State() state: 'loading' | 'playing' | 'stopped' = 'stopped';\n\n  /**\n   * The audio element used to play the summary\n   */\n  private audioRef?: HTMLAudioElement;\n\n  /**\n   * The AbortController used to cancel the summarize request\n   */\n  private abortController: AbortController = new AbortController();\n\n  constructor() {\n    this.playAudio = this.playAudio.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  async componentWillLoad() {\n    debug(`[nylas-summarize-message-button] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-summarize-message-button] Component did load`);\n  }\n\n  /**\n   * Handle summarize button click\n   * @param event Click event\n   */\n  private onClick = async (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state === 'stopped') {\n      if (this.message) {\n        this.abortController = new AbortController();\n        const event = this.summarize.emit({\n          abortController: this.abortController,\n          playAudio: this.playAudio,\n          message: this.message,\n          updateState: this.updateState,\n        });\n\n        if (!event.defaultPrevented) {\n          debug(`[nylas-summarize-message-button] Default event not prevented, summarizing message`);\n\n          if (this.audioRef) {\n            await this.audioRef\n              .play()\n              .then(() => this.audioRef?.pause())\n              .catch(error => console.error('Error playing audio:', error));\n            await this.audioRef.play().catch(error => console.error('Error playing audio:', error));\n          }\n        }\n      }\n    } else if (this.state === 'playing') {\n      this.abortController?.abort();\n      this.audioRef?.pause();\n    } else {\n      this.state = 'stopped';\n    }\n  };\n\n  /**\n   * Update the state of the summarize button\n   * @param state The new state\n   * @returns Promise<void>\n   */\n  @Method()\n  public async updateState(state: 'loading' | 'playing' | 'stopped') {\n    this.state = state;\n  }\n\n  /**\n   * Play audio\n   * @param ttsResponseBody Text to speech response body\n   * @param audioRef Audio element\n   */\n  @Method()\n  public async playAudio(ttsResponseBody: Promise<ReadableStream<Uint8Array> | null>) {\n    if (!this.audioRef) {\n      this.state = 'stopped';\n      return;\n    }\n\n    if (!ttsResponseBody) {\n      this.state = 'stopped';\n      return;\n    }\n\n    const audioElement: HTMLAudioElement = this.audioRef;\n\n    // If no MediaSource support, use a blob URL\n    if (!('MediaSource' in window)) {\n      const rb = await ttsResponseBody;\n\n      if (rb == null) {\n        throw new Error('ReadableStream not yet supported in this browser.');\n      }\n\n      const reader: ReadableStreamDefaultReader<Uint8Array> = rb.getReader();\n      const chunks: Uint8Array[] = [];\n\n      // Start reading chunks\n      await this.readChunk(reader, chunks);\n\n      // Create a blob from the chunks\n      const blob = new Blob(chunks, { type: 'audio/mpeg' });\n      const blobUrl = URL.createObjectURL(blob);\n      audioElement.src = blobUrl;\n      return;\n    }\n\n    const mediaSource = new MediaSource();\n    let sourceBuffer: SourceBuffer;\n\n    let sourceDone: boolean = false;\n\n    audioElement.src = URL.createObjectURL(mediaSource);\n    mediaSource.addEventListener('sourceopen', onMediaSourceOpen);\n\n    async function onMediaSourceOpen() {\n      sourceBuffer = mediaSource.addSourceBuffer('audio/mpeg');\n      sourceBuffer.addEventListener('updateend', onUpdateEnd);\n      const rb = await ttsResponseBody;\n\n      if (rb == null) {\n        throw new Error('ReadableStream not yet supported in this browser.');\n      }\n\n      const reader = rb.getReader();\n      const pump = () => {\n        reader\n          .read()\n          .then(({ done, value }) => {\n            if (done) {\n              sourceDone = true;\n              return;\n            }\n            if (!sourceBuffer.updating) {\n              sourceBuffer.appendBuffer(value);\n            }\n            pump();\n          })\n          .catch(error => {\n            console.error('Error while fetching and appending chunks:', error);\n          });\n      };\n\n      pump();\n\n      if (audioElement.paused) {\n        audioElement.play().catch(error => console.error('Error playing audio:', error));\n      }\n    }\n\n    function onUpdateEnd() {\n      if (sourceDone) {\n        mediaSource.endOfStream();\n        mediaSource.removeEventListener('sourceopen', onMediaSourceOpen);\n        mediaSource.removeEventListener('sourceclose', () => {\n          debug(`[nylas-summarize-message-button] Source closed`);\n        });\n        sourceBuffer.removeEventListener('updateend', onUpdateEnd);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Read chunks from the ReadableStream\n   * @param reader The reader to read chunks from for the TTS audio\n   * @param chunks The chunks array to append the chunks to\n   * @returns Promise<Uint8Array[]>\n   */\n  private async readChunk(reader: ReadableStreamDefaultReader<Uint8Array>, chunks: Uint8Array[]): Promise<Uint8Array[]> {\n    return reader.read().then(({ done, value }) => {\n      if (done) {\n        // All chunks have been read, return the chunks array\n        return chunks;\n      }\n      chunks.push(value);\n      return this.readChunk(reader, chunks); // Read the next chunk\n    });\n  }\n\n  @RegisterComponent<NylasSummarizeMessageButton, NylasMailboxConnector, Exclude<NylasMailbox['stores'], undefined>>({\n    name: 'nylas-summarize-message-button',\n    eventToProps: {\n      summarize: async (event: CustomEvent<SummarizeEvent>, nylasConnector: NylasMailboxConnector) => {\n        const { playAudio, updateState, abortController, message } = event.detail;\n        const text = htmlToPlainText(message.body || '');\n        await updateState('loading');\n        try {\n          const summary = await nylasConnector.messages.summarizeText(text);\n          const ttsResponseBody = nylasConnector.messages.textToSpeech(summary, abortController);\n          await playAudio(ttsResponseBody);\n        } catch (error) {\n          await updateState('stopped');\n          console.error('Error summarizing message:', error);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <sp-theme scale=\"medium\" color=\"dark\">\n          <sp-button\n            label=\"Summarize email\"\n            icon-only\n            onClickCapture={this.onClick}\n            class={{\n              'summarize-button': true,\n              'stopped': this.state === 'stopped',\n              'loading': this.state === 'loading',\n              'playing': this.state === 'playing',\n            }}\n          >\n            {this.state === 'stopped' && <play-icon />}\n            {this.state === 'loading' && <loading-icon />}\n            {this.state === 'playing' && <stop-icon />}\n          </sp-button>\n          <audio\n            ref={r => (this.audioRef = r)}\n            autoPlay={true}\n            onPlaying={() => (this.state = 'playing')}\n            onPause={() => (this.state = 'stopped')}\n            onEnded={() => {\n              this.state = 'stopped';\n              debug(`[nylas-summarize-message-button] Audio ended`);\n            }}\n          ></audio>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n","import { debug } from './utils';\n\nexport function hexToRgb(hex: string): { r: number; g: number; b: number } | null {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n}\n\nexport function rgbToHex(r: number, g: number, b: number): string {\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n}\n\nexport function invertColor(color: string): string {\n  if (!window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return color;\n  }\n\n  if (!color) {\n    return color;\n  }\n\n  // Skip transparent colors\n  if (color === 'transparent') {\n    return 'color';\n  }\n\n  // Check for Hexadecimal colors (including short hex like #fff) or #f6f7f8\n  if (color.startsWith('#')) {\n    return invertHexColor(color);\n  }\n\n  // Check for RGB and RGBA colors\n  if (color.startsWith('rgb')) {\n    return invertRgbColor(color);\n  }\n\n  // Check for HSL and HSLA colors\n  if (color.startsWith('hsl')) {\n    return invertHslColor(color);\n  }\n\n  // Check for named colors\n  if (isNamedColor(color)) {\n    return invertNamedColor(color);\n  }\n\n  return color;\n}\n\nfunction invertHexColor(hex: string): string {\n  if (hex.length < 7) {\n    hex = '#' + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]; // Convert #abc to #aabbcc\n  }\n  const r = (255 - parseInt(hex.slice(1, 3), 16)).toString(16).padStart(2, '0');\n  const g = (255 - parseInt(hex.slice(3, 5), 16)).toString(16).padStart(2, '0');\n  const b = (255 - parseInt(hex.slice(5, 7), 16)).toString(16).padStart(2, '0');\n  return `#${r}${g}${b}`;\n}\n\nfunction invertRgbColor(rgb: string): string {\n  const match = rgb.match(/\\d+/g)?.map(Number);\n  if (!match) {\n    return rgb;\n  }\n  const [r, g, b] = match;\n  return `rgb(${255 - r}, ${255 - g}, ${255 - b})`;\n}\n\nfunction invertHslColor(hsl: string): string {\n  const match = hsl.match(/\\d+\\.?\\d*/g)?.map(Number);\n  if (!match) {\n    return hsl;\n  }\n  const [h, s, l] = match;\n  return `hsl(${h}, ${s}%, ${100 - l}%)`;\n}\n\nfunction isNamedColor(color: string): boolean {\n  // This function needs to check against a list of named colors.\n  // For simplicity, let's assume it's a known named color.\n  return /^[a-z]+$/i.test(color);\n}\n\nfunction invertNamedColor(color: string): string {\n  // This requires converting the named color to RGB, inverting it, and converting back.\n  // This is a placeholder and would need a full mapping of color names to RGB values.\n  // Assuming the function `namedColorToRgb` exists to convert named colors to RGB:\n  return invertRgbColor(namedColorToRgb(color));\n}\n\nfunction namedColorToRgb(color: string): string {\n  // Convert named colors to their RGB representation.\n  // This is a placeholder. A full implementation would need a mapping from color names to RGB.\n  // Assuming 'red' is passed, it returns its RGB representation:\n  if (color.toLowerCase() === 'red') {\n    return 'rgb(255, 0, 0)';\n  }\n  return 'rgb(0, 0, 0)'; // Default for unknown colors\n}\n\nexport function transformElement(element: Element) {\n  if (element instanceof HTMLStyleElement) {\n    // Check if the border color is set via any valid css property\n    let styleTextContent = element.textContent;\n\n    if (styleTextContent) {\n      // Remove any prefer-color-scheme media queries\n      styleTextContent = styleTextContent.replaceAll(/@media\\s*\\(prefers-color-scheme:\\s*(dark|light)\\)\\s*\\{([^}]+)\\}/g, '');\n\n      // Match border-color: #000000; or border-color: #000000 !important;\n      const borderColor = styleTextContent.matchAll(/border-color:\\s*([^;]+)/g);\n      if (borderColor) {\n        for (const match of borderColor) {\n          // Split border-color into it's part\n          const [fullMatch, color] = match;\n\n          // Regex escaped fullMatch\n          const escapedFullMatch = fullMatch.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n          // Replace the colour in the fullMatch\n          styleTextContent = styleTextContent.replaceAll(escapedFullMatch, fullMatch.replace(color, invertColor(color)));\n        }\n      }\n\n      // Match border: 1px solid #000000; or border: 1px solid #000000 !important;\n      const border = styleTextContent.matchAll(/border:\\s*([^;]+)/g);\n      if (border) {\n        for (const match of border) {\n          // Get the full match\n          const fullMatch = match[0].trim();\n\n          // Regex escaped fullMatch\n          const escapedFullMatch = fullMatch.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n          // Split the border property into its parts deconstructing the array\n          const [_width, _style, color] = match[1].split(' ');\n\n          // Replace the colour in the fullMatch\n          styleTextContent = styleTextContent.replaceAll(escapedFullMatch, fullMatch.replace(color, invertColor(color)));\n        }\n      }\n\n      // Match background-color: #000000; or background-color: #000000 !important; but nothing after the ; or ;\n      const backgroundColor = styleTextContent.matchAll(/background-color:\\s*([^;]+)/g);\n      if (backgroundColor) {\n        for (const match of backgroundColor) {\n          // Split border-color into it's part\n          const [fullMatch, color] = match;\n\n          // Regex escaped fullMatch\n          const escapedFullMatch = fullMatch.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n          // Replace the colour in the fullMatch\n          styleTextContent = styleTextContent.replaceAll(escapedFullMatch, fullMatch.replace(color, invertColor(color)));\n\n          debug('backgroundColor', { fullMatch, replace: fullMatch.replace(color, invertColor(color)), color, invertColor: invertColor(color) });\n        }\n      }\n\n      // Match background: #000000; or background: #000000 !important;\n      const background = styleTextContent.matchAll(/background:\\s*([^;]+)/g);\n      if (background) {\n        for (const match of background) {\n          // Get the full match\n          const fullMatch = match[0].trim();\n\n          // Regex escaped fullMatch\n          const escapedFullMatch = fullMatch.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n          // Split the border property into its parts deconstructing the array\n          const [_width, _style, color] = match[1].split(' ');\n\n          // Replace the colour in the fullMatch\n          styleTextContent = styleTextContent.replaceAll(escapedFullMatch, fullMatch.replace(color, invertColor(color)));\n        }\n      }\n\n      // Match color: #000000; or color: #000000 !important;\n      const color = styleTextContent.matchAll(/color:\\s*([^;]+)/g);\n      if (color) {\n        for (const match of color) {\n          // Split border-color into it's part\n          const [fullMatch, color] = match;\n\n          // Regex escaped fullMatch\n          const escapedFullMatch = fullMatch.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n          // Replace the colour in the fullMatch\n          styleTextContent = styleTextContent.replaceAll(escapedFullMatch, fullMatch.replace(color, invertColor(color)));\n        }\n      }\n\n      element.textContent = styleTextContent;\n    }\n  }\n\n  if (element instanceof HTMLElement) {\n    const computedStyle = window.getComputedStyle(element);\n    const color = computedStyle.color || element.style.color;\n    const backgroundColor = computedStyle.backgroundColor || element.style.backgroundColor;\n    const borderColor = computedStyle.borderColor || element.style.borderColor;\n\n    if (color && !backgroundColor) {\n      element.style.color = '';\n    } else if (color && backgroundColor) {\n      element.style.color = invertColor(color);\n      element.style.backgroundColor = invertColor(backgroundColor);\n      debug('element', element);\n      debug('computedStyle.color', color);\n      debug('computedStyle.backgroundColor', backgroundColor);\n      debug('invertColor(color)', invertColor(color));\n      debug('invertColor(backgroundColor)', invertColor(backgroundColor));\n    } else if (!color && backgroundColor) {\n      // Remove the background color if there is no text color\n      element.style.backgroundColor = '';\n    }\n\n    if (borderColor) {\n      debug('borderColor', borderColor);\n      element.style.borderColor = invertColor(borderColor);\n    }\n\n    if (element.hasAttribute('bgcolor')) {\n      element.removeAttribute('bgcolor');\n    }\n  }\n}\n\nexport function processStyles(root: HTMLElement): void {\n  // Transform the root element\n  transformElement(root);\n\n  const elements = root.querySelectorAll('*');\n  elements.forEach(element => transformElement(element));\n}\n","/*! @license DOMPurify 3.0.8 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.8/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n\n  /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param {Function} func - The function to be wrapped and called.\n   * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n   */\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return apply(func, thisArg, args);\n    };\n  }\n\n  /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param {Function} func - The constructor function to be wrapped and called.\n   * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n   */\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return construct(func, args);\n    };\n  }\n\n  /**\n   * Add properties to a lookup table\n   *\n   * @param {Object} set - The set to which elements will be added.\n   * @param {Array} array - The array containing elements to be added to the set.\n   * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns {Object} The modified set with added elements.\n   */\n  function addToSet(set, array) {\n    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n    let l = array.length;\n    while (l--) {\n      let element = array[l];\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n          element = lcElement;\n        }\n      }\n      set[element] = true;\n    }\n    return set;\n  }\n\n  /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param {Array} array - The array to be cleaned.\n   * @returns {Array} The cleaned version of the array\n   */\n  function cleanArray(array) {\n    for (let index = 0; index < array.length; index++) {\n      if (getOwnPropertyDescriptor(array, index) === undefined) {\n        array[index] = null;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * Shallow clone an object\n   *\n   * @param {Object} object - The object to be cloned.\n   * @returns {Object} A new object that copies the original.\n   */\n  function clone(object) {\n    const newObject = create(null);\n    for (const [property, value] of entries(object)) {\n      if (getOwnPropertyDescriptor(object, property) !== undefined) {\n        if (Array.isArray(value)) {\n          newObject[property] = cleanArray(value);\n        } else if (value && typeof value === 'object' && value.constructor === Object) {\n          newObject[property] = clone(value);\n        } else {\n          newObject[property] = value;\n        }\n      }\n    }\n    return newObject;\n  }\n\n  /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param {Object} object - The object to look up the getter function in its prototype chain.\n   * @param {String} prop - The property name for which to find the getter function.\n   * @returns {Function} The getter function found in the prototype chain or a fallback function.\n   */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n      object = getPrototypeOf(object);\n    }\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  const DOCTYPE_NAME = seal(/^html$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME\n  });\n\n  const getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n    const DOMPurify = root => createDOMPurify(root);\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '3.0.8';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n    let {\n      document\n    } = window;\n    const originalDocument = document;\n    const currentScript = originalDocument.currentScript;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n\n    /* Allowed attribute names */\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    let FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    let FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    let ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    let ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    let SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    let WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    let SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    let FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    let RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    let RETURN_DOM_FRAGMENT = false;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    let RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n    let SANITIZE_DOM = true;\n\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n    /* Keep element content when removing element? */\n    let KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    let IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    let USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n\n    /* Allowed XHTML+XML namespaces */\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n    /* Parsing of strict XHTML documents */\n    let PARSER_MEDIA_TYPE = null;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc = null;\n\n    /* Keep a reference to config to pass to hooks */\n    let CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    const _parseConfig = function _parseConfig() {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n      // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n      // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, text);\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        }\n\n        // Overwrite existing TrustedTypes policy.\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n        // Sign local variables required by `sanitize`.\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        }\n\n        // If creating the internal policy succeeded sign internal variables.\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n      CONFIG = cfg;\n    };\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n    // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n    /**\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // For XHTML and XML documents that support custom namespaces\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.remove();\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc = null;\n      let leadingWhitespace = null;\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n      const body = doc.body || doc.documentElement;\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param  {Node} root The root element or node to start traversing on.\n     * @return {NodeIterator} The created NodeIterator\n     */\n    const _createNodeIterator = function _createNodeIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n\n    /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param  {Node} object object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'function' && object instanceof Node;\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content = null;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      const tagName = transformCaseFunc(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n            return false;\n          }\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n            return false;\n          }\n        }\n\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n            for (let i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          content = stringReplace(content, expr, ' ');\n        });\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n      return true;\n    };\n\n    /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param {string} tagName name of the tag of the node to sanitize\n     * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */\n    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n      const {\n        attributes\n      } = currentNode;\n\n      /* Check if we have attributes; if not we might have a text node */\n      if (!attributes) {\n        return;\n      }\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      let l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        const attr = attributes[l];\n        const {\n          name,\n          namespaceURI,\n          value: attrValue\n        } = attr;\n        const lcName = transformCaseFunc(name);\n        let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            value = stringReplace(value, expr, ' ');\n          });\n        }\n\n        /* Is `value` valid for this attribute? */\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode);\n\n          // Prefix the value and later re-create the attribute with the sanitized value\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n\n        /* Handle attributes that require Trusted Types */\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode = null;\n      const shadowIterator = _createNodeIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} cfg object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body = null;\n      let importedNode = null;\n      let currentNode = null;\n      let returnNode = null;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n\n      /* Return dirty HTML if DOMPurify cannot run */\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n      }\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n        return returnNode;\n      }\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Serialize doctype if allowed */\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          serializedHTML = stringReplace(serializedHTML, expr, ' ');\n        });\n      }\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function () {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {String} tag Tag name of containing element.\n     * @param  {String} attr Attribute name.\n     * @param  {String} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n    return DOMPurify;\n  }\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n",":host {\n  display: inline-grid;\n  overflow: hidden;\n  width: 100%;\n}\n\n.view-email {\n  width: 100%;\n\n  div.gmail_quote {\n    display: none;\n    color: var(--nylas-color-primary-400);\n\n    &.show {\n      display: block;\n    }\n  }\n\n  blockquote {\n    border-color: var(--nylas-color-primary-500) !important;\n  }\n\n  .nylas-view-email-toggle-button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    background-color: var(--nylas-color-primary-200);\n    color: var(--nylas-color-primary-600);\n    border: 0;\n    border-radius: 2px;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.5;\n    transition: all 0.2s ease-in-out;\n\n    &:hover {\n      background-color: var(--nylas-color-primary-200);\n      color: var(--nylas-color-primary-600);\n    }\n  }\n}\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n}\n\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n}\n\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n","import { InternalAttachment } from '@/common/types';\nimport { processStyles } from '@/utils/color-utils';\nimport { debug, detectHTMLOrPlainText, detectIfMessageIsHTML, parsePlainTextToHTML } from '@/utils/utils';\nimport { Message } from '@nylas/core';\nimport { Component, Element, Fragment, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport DOMPurify from 'dompurify';\n\nDOMPurify.addHook('afterSanitizeAttributes', function (node) {\n  // set all elements owning target to target=_blank\n  if ('target' in node) {\n    node.setAttribute('target', '_blank');\n    node.setAttribute('rel', 'noopener');\n  }\n});\n\n@Component({\n  tag: 'nylas-view-email',\n  styleUrl: 'nylas-view-email.scss',\n  shadow: true,\n})\nexport class NylasViewEmail {\n  @Element() readonly host!: HTMLDivElement;\n\n  @Prop() readonly message?: Message;\n  @Prop() readonly parent?: HTMLElement;\n  @Prop() readonly attachments: InternalAttachment[] = [];\n  @Prop() readonly detectDarkMode: boolean = true;\n\n  @State() state: 'loading' | 'ready' = 'loading';\n  @State() sanitizedBody: string = '';\n  @State() styles: HTMLStyleElement[] = [];\n\n  @State() private viewEmailElement?: HTMLDivElement;\n  @State() private hoistedFontURLs: Map<string, string> = new Map();\n\n  private readonly htmlElement: HTMLHtmlElement = document.createElement('html');\n\n  connectedCallback() {}\n\n  disconnectedCallback() {\n    debug(`[nylas-view-email] Component disconnected`);\n    this.state = 'loading';\n\n    this.styles = [];\n    this.hoistedFontURLs = new Map();\n    this.sanitizedBody = '';\n\n    // Find all hoisted font links and remove them\n    document.querySelectorAll('.nylas-view-email-font').forEach(link => {\n      link.remove();\n    });\n  }\n\n  // TODO: We should obfuscate and randomize ids and classes\n  async componentWillLoad() {\n    debug(`[nylas-view-email] component loaded`);\n    this.setBody(this.message?.body ?? '');\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-view-thread] Component did load`);\n    this.handleMobileSize();\n  }\n\n  @Watch('message')\n  async messageChanged() {\n    debug(`[nylas-view-thread] Message changed`, { message: this.message });\n    this.setBody(this.message?.body ?? '');\n  }\n\n  private setBody = (body: string) => {\n    this.state = 'loading';\n\n    this.styles = [];\n    this.hoistedFontURLs = new Map();\n    this.sanitizedBody = '';\n\n    // Find all hoisted font links and remove them\n    document.querySelectorAll('.nylas-view-email-font').forEach(link => {\n      link.remove();\n    });\n\n    // Detect if the body is HTML or plain text\n    const isHTML = this.message ? detectIfMessageIsHTML(this.message) : detectHTMLOrPlainText(body);\n    if (!isHTML) {\n      body = `<html><body>${parsePlainTextToHTML(body)}</body></html>`;\n    }\n\n    this.htmlElement.innerHTML = body;\n\n    // Applies styles to handle darkmode and other things\n    if (this.detectDarkMode) {\n      processStyles(this.htmlElement);\n    }\n\n    // Find any font links and hoist them to the parent\n    this.htmlElement.querySelectorAll('link').forEach(link => {\n      console.debug(`[nylas-view-email] Hoisting link: ${link.getAttribute('href')}`);\n      if (link.getAttribute('rel') === 'stylesheet' && link.getAttribute('href')) {\n        const href = link.getAttribute('href');\n        if (href) {\n          const url = new URL(href, window.location.href);\n          if (url.protocol === 'https:' || url.protocol === 'http:') {\n            this.hoistedFontURLs.set(url.href, url.href);\n          }\n        }\n      }\n    });\n\n    // We need to take out all the styles fromm the email body\n    // and inject them into the shadow dom, otherwise they will\n    // not be applied\n    this.htmlElement.querySelectorAll('style').forEach(style => {\n      // Find any font links imported in the style\n      style.innerHTML.split('\\n').forEach(line => {\n        const match = line.match(/@import url\\((.*)\\)/);\n        if (match) {\n          const url = new URL(match[1], window.location.href);\n          if (url.protocol === 'https:' || url.protocol === 'http:') {\n            this.hoistedFontURLs.set(url.href, url.href);\n          }\n        }\n      });\n\n      // There is no body in shadow dom, so we replace it with :host\n      style.innerHTML = style.innerHTML.replace('body', ':host');\n      this.styles.push(style);\n\n      // No need to keep the style in the body\n      style.remove();\n    });\n\n    // We want all links to open in a new tab\n    this.htmlElement.querySelectorAll('a').forEach(a => {\n      a.setAttribute('target', '_blank');\n    });\n\n    // Find the first instance of `.gmail_quote` and append a toggle button to it\n    // When the toggle button is clicked, a \"show\" class is appended to\n    // `.gmail_quote` which shows/hides the rest of the email\n    const gmailQuote = this.htmlElement.querySelector('.gmail_quote');\n    if (gmailQuote) {\n      const toggleButton = document.createElement('button');\n      toggleButton.classList.add('nylas-view-email-toggle-button');\n      toggleButton.setAttribute('aria-label', 'Show quoted text');\n      toggleButton.innerText = '...';\n      gmailQuote.parentElement?.insertBefore(toggleButton, gmailQuote);\n    }\n\n    // Sanitize the body before rendering it in the shadow dom\n    this.sanitizedBody = DOMPurify.sanitize(this.htmlElement.innerHTML);\n\n    // Set the fonts on the document head, with a class so we can remove them later\n    this.hoistedFontURLs.forEach((url, _key) => {\n      const link = document.createElement('link');\n      link.setAttribute('rel', 'stylesheet');\n      link.setAttribute('href', url);\n      link.classList.add('nylas-view-email-font');\n      document.head.appendChild(link);\n    });\n\n    this.state = 'ready';\n  };\n\n  @Listen('resize', { target: 'window' })\n  handleScroll() {\n    this.handleMobileSize();\n  }\n\n  @Watch('viewEmailElement')\n  viewEmailElementChanged() {\n    // If the view email element changes, find all instances of\n    // .nylas-view-email-toggle-button and add a click handler to them\n    // that toggles the .show class on .gmail_quote\n    const toggleButton = this.viewEmailElement?.querySelectorAll('.nylas-view-email-toggle-button');\n    if (toggleButton) {\n      toggleButton.forEach(button => {\n        button.addEventListener('click', () => {\n          const gmailQuote = this.viewEmailElement?.querySelector('.gmail_quote');\n          if (gmailQuote) {\n            gmailQuote.classList.toggle('show');\n          }\n        });\n      });\n    }\n  }\n\n  private handleMobileSize = () => {\n    const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\n    // Mobile size detection\n    if (vw <= 768) {\n      const viewEmailReact = this.viewEmailElement?.getBoundingClientRect();\n      if (viewEmailReact && this.viewEmailElement && this.parent) {\n        if (viewEmailReact.width > vw) {\n          const parentElement = this.parent;\n          const parentReact = parentElement?.getBoundingClientRect();\n          debug('Parent width:', parentReact?.width, 'Parent height:', parentReact?.height);\n          debug('Parent client width:', parentElement.clientWidth, 'Parent client height:', parentElement.clientHeight);\n\n          const scaleX = parentReact.width / viewEmailReact.width;\n          const scaleY = parentReact.height / viewEmailReact.height;\n          const scale = Math.min(scaleX, scaleY);\n\n          debug('Scale:', scale);\n\n          this.viewEmailElement.style.setProperty('transform', `scale(${scale})`);\n          this.viewEmailElement.style.setProperty('transform-origin', `top left`);\n          this.viewEmailElement.style.setProperty('height', `${viewEmailReact.height * scale}px`);\n        }\n      }\n    } else {\n      this.viewEmailElement?.style.removeProperty('transform');\n      this.viewEmailElement?.style.removeProperty('transform-origin');\n      this.viewEmailElement?.style.removeProperty('height');\n    }\n  };\n\n  render() {\n    console.debug(`[nylas-view-email] render`, { hoistedFontURLs: this.hoistedFontURLs });\n    return (\n      <Host>\n        {this.state === 'loading' && <div>Loading...</div>}\n        {this.state === 'ready' && (\n          <Fragment>\n            {this.styles.map(style => (\n              <style>{DOMPurify.sanitize(style.innerHTML)}</style>\n            ))}\n            <div class={'view-email'} part=\"view-email\" innerHTML={this.sanitizedBody} ref={el => (this.viewEmailElement = el)} />\n          </Fragment>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'reply-all-icon',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class ReplyAllIcon {\n  @Prop() width: string = '15';\n  @Prop() height: string = '15';\n\n  render() {\n    return (\n      <svg fill=\"auto\" width={this.width} height={this.height} viewBox=\"0 0 1920 1920\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"m1030.975 188 81.249 81.249-429.228 429.228h300.747c516.223 0 936.257 420.034 936.257 936.257v98.028h-114.92v-98.028c0-452.901-368.436-821.337-821.337-821.337H682.996l429.228 429.229-81.25 81.248-567.936-567.937L1030.975 188Zm-463.038.011 81.249 81.25-486.688 486.688 486.688 486.688-81.249 81.249L0 755.949 567.937 188.01Z\"\n          fill-rule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n}\n",":host {\n  display: flex;\n}\n","import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'reply-icon',\n  styleUrl: 'icon.css',\n  scoped: true,\n})\nexport class ReplyIcon {\n  @Prop() width: string = '15';\n  @Prop() height: string = '15';\n\n  render() {\n    return (\n      <svg fill=\"auto\" width={this.width} height={this.height} viewBox=\"0 0 1920 1920\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"M835.942 632.563H244.966l478.08-478.08-90.496-90.496L-.026 696.563 632.55 1329.14l90.496-90.496-478.08-478.08h590.976c504.448 0 914.816 410.368 914.816 914.816v109.184h128V1675.38c0-574.976-467.84-1042.816-1042.816-1042.816\"\n          fill-rule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n}\n"],"mappings":"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"}