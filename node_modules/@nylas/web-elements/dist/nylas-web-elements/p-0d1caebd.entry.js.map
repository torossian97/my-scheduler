{"version":3,"names":["nylasThreadsSearchCss","NylasThreadsSearchStyle0","NylasThreadsSearch","this","onSearch","async","event","preventDefault","stopPropagation","target","value","internalQuery","search","emit","connectedCallback","disconnectedCallback","componentWillLoad","debug","componentDidLoad","onQueryChange","query","render","h","Host","key","scale","color","quiet","onSubmit","onBlur","__decorate","RegisterComponent","name","stateToProps","Map","eventToProps","_event","nylasConnector","threads","getThreads","search_query_native","detail","undefined","page_token","fireRegisterEvent"],"sources":["src/components/mailbox/nylas-threads-search/nylas-threads-search.scss?tag=nylas-threads-search&encapsulation=shadow","src/components/mailbox/nylas-threads-search/nylas-threads-search.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\nsp-search {\n  width: 100%;\n  border: 0;\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { debug } from '@/utils/utils';\nimport { Component, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasMailboxConnector } from '../../..';\nimport { NylasMailbox } from '../nylas-mailbox/nylas-mailbox';\n\n@Component({\n  tag: 'nylas-threads-search',\n  styleUrl: 'nylas-threads-search.scss',\n  shadow: true,\n})\nexport class NylasThreadsSearch {\n  /**\n   * The query to search for threads\n   */\n  @Prop() readonly query: string = '';\n\n  /**\n   * Event emitted when the query changes\n   */\n  @Event() readonly search!: EventEmitter<string>;\n\n  /**\n   * A copy of the query that is used internally, we can mutate this.\n   */\n  @State() internalQuery: string = '';\n\n  connectedCallback() {}\n\n  disconnectedCallback() {}\n\n  async componentWillLoad() {\n    debug(`[nylas-threads-search] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-threads-search] Component did load`);\n  }\n\n  @Watch('query')\n  onQueryChange() {\n    this.internalQuery = this.query;\n  }\n\n  /**\n   * On search event\n   * @param event On blur event\n   * @returns void\n   */\n  private onSearch = async (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n\n    if (value === this.internalQuery) {\n      return;\n    }\n\n    this.internalQuery = value;\n    this.search.emit(this.internalQuery);\n  };\n\n  @RegisterComponent<NylasThreadsSearch, NylasMailboxConnector, Exclude<NylasMailbox['stores'], undefined>>({\n    name: 'nylas-pagination',\n    stateToProps: new Map([['mailbox.searchQuery', 'query']]),\n    eventToProps: {\n      search: async (_event: CustomEvent<string>, nylasConnector: NylasMailboxConnector) => {\n        await nylasConnector.threads.getThreads({\n          search_query_native: _event.detail || undefined,\n          page_token: undefined,\n        });\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    return (\n      <Host>\n        <sp-theme scale=\"medium\" color=\"dark\">\n          <sp-search quiet onSubmit={this.onSearch} onBlur={this.onSearch} value={this.internalQuery}></sp-search>\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n"],"mappings":"yJAAA,MAAMA,EAAwB,qDAC9B,MAAAC,EAAeD,E,ugBCUFE,EAAkB,M,wDAsCrBC,KAAAC,SAAWC,MAAOC,IACxBA,EAAMC,iBACND,EAAME,kBAEN,MAAMC,EAASH,EAAMG,OACrB,MAAMC,EAAQD,EAAOC,MAErB,GAAIA,IAAUP,KAAKQ,cAAe,CAChC,M,CAGFR,KAAKQ,cAAgBD,EACrBP,KAAKS,OAAOC,KAAKV,KAAKQ,cAAc,E,WA9CL,G,mBAUA,E,CAEjC,iBAAAG,GAAiB,CAEjB,oBAAAC,GAAoB,CAEpB,uBAAMC,GACJC,EAAM,6C,CAGR,sBAAMC,GACJD,EAAM,4C,CAIR,aAAAE,GACEhB,KAAKQ,cAAgBR,KAAKiB,K,CAoC5B,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAA,YAAAE,IAAA,2CAAUC,MAAM,SAASC,MAAM,QAC7BJ,EAAA,aAAAE,IAAA,2CAAWG,MAAK,KAACC,SAAUzB,KAAKC,SAAUyB,OAAQ1B,KAAKC,SAAUM,MAAOP,KAAKQ,iB,yDAJrFmB,EAAA,CAbCC,EAAyG,CACxGC,KAAM,mBACNC,aAAc,IAAIC,IAAI,CAAC,CAAC,sBAAuB,WAC/CC,aAAc,CACZvB,OAAQP,MAAO+B,EAA6BC,WACpCA,EAAeC,QAAQC,WAAW,CACtCC,oBAAqBJ,EAAOK,QAAUC,UACtCC,WAAYD,WACZ,GAGNE,kBAAmB,O"}