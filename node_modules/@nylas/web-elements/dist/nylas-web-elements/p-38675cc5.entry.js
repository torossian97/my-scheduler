import{r as t,c as s,h as e,H as i,a as h}from"./p-68c2fadf.js";import{N as r,e as n}from"./p-39aa2263.js";import{a as o}from"./p-01e86103.js";import{N as a,a as c,b as u,c as d,C as l,d as p,H as f}from"./p-8f88a748.js";import{N as g,C as m}from"./p-ab09a78d.js";import{C as y}from"./p-ee91a2a0.js";import"./p-cb65c223.js";import"./p-cabb2e68.js";class b{constructor(t,s,e,i,h,r,n="https://api.us.nylas.com"){this.router=t;this.schedulerAPIURL=n;this.nylasAuth=s;this.nylasAuthStore=e;this.nylasMailboxStore=i;this.nylasSchedulerStore=h;this.nylasSchedulerConfigStore=r}init(){o("NylasConnector init")}get authStore(){return this.nylasAuthStore}get mailboxStore(){return this.nylasMailboxStore}get schedulerStore(){return this.nylasSchedulerStore}get schedulerConfigStore(){return this.nylasSchedulerConfigStore}get auth(){if(this._authConnector){return this._authConnector}this._authConnector=new a(this.nylasAuth,this.nylasAuthStore);return this._authConnector}get threads(){if(this._threadConnector){return this._threadConnector}this._threadConnector=new c(this.nylasAuth,this.nylasAuthStore,this.nylasMailboxStore,this.router);return this._threadConnector}get messages(){if(this._messageConnector){return this._messageConnector}this._messageConnector=new u(this.nylasAuth,this.nylasAuthStore,this.nylasMailboxStore);return this._messageConnector}get folders(){if(this._foldersConnector){return this._foldersConnector}this._foldersConnector=new d(this.nylasAuth,this.nylasAuthStore,this.nylasMailboxStore);return this._foldersConnector}get scheduler(){if(this._schedulerAPIConnector){return this._schedulerAPIConnector}this._schedulerAPIConnector=new g({schedulerAPIURL:this.schedulerAPIURL,schedulerStore:this.schedulerStore});return this._schedulerAPIConnector}getAuth(){return this.nylasAuth}resetStores(){this.nylasAuthStore.reset();this.nylasMailboxStore.reset()}async logout(){await this.nylasAuth.logout();this.resetStores()}}const w=":host{display:contents}";const C=w;const S=class{constructor(e){t(this,e);this.init=s(this,"init",7);this.loggedIn=s(this,"loggedIn",7);this.loggedOut=s(this,"loggedOut",7);this.handleAuthChange=async t=>{if(t){this.loggedIn.emit(this.host)}else{this.loggedOut.emit(this.host)}};this.authConfig=undefined;this.eventOverrides={};this.automaticComponentRegistration=true}connectedCallback(){o("[nylas-provider] connectedCallback")}async componentWillLoad(){o("[nylas-provider] componentWillLoad");this.stores={auth:l(),mailbox:p(),scheduler:m(),schedulerConfig:y()};this.baseProvider=new r(this.host,this.stores,this.automaticComponentRegistration,this.eventOverrides);const t=new f;this.nylasAuth=n({apiUri:"https://api.us.nylas.com",elementsApiUri:"https://elements.us.nylas.com",storageType:"indexeddb",clientId:"YOUR_CLIENT_ID",defaultScopes:[],redirectURI:"/",...this.authConfig});const s=this.baseProvider?.getStore("mailbox");if(!s){throw new Error("The mailbox store is not set")}const e=this.baseProvider?.getStore("auth");if(!e){throw new Error("The auth store is not set")}const i=this.baseProvider?.getStore("scheduler");if(!i){throw new Error("The scheduler store is not set")}const h=this.baseProvider?.getStore("schedulerConfig");if(!h){throw new Error("The scheduler config store is not set")}this.nylasConnector=new b(t,this.nylasAuth,e,s,i,h);const a=this.init.emit(this.host);if(!a.defaultPrevented){await(this.nylasConnector?.auth.validateSession())}this.handleAuthChange(e.state.isAuthenticated);this.baseProvider?.componentWillLoad(this.nylasConnector)}componentDidLoad(){const t=this.baseProvider?.getStore("auth");t?.onChange("isAuthenticated",this.handleAuthChange);this.baseProvider?.componentDidLoad()}componentDisconnected(){this.baseProvider?.componentDisconnected()}async registerComponentHandler(t){this.baseProvider?.registerComponent(t.detail)}async unregisterComponentHandler(t){this.baseProvider?.unregisterComponent(t.detail)}async getNylasAuth(){return this.nylasAuth}async getNylasConnector(){return this.nylasConnector}async getMailboxStore(){return this.baseProvider?.getStore("mailbox")}async getAuthStore(){return this.baseProvider?.getStore("auth")}async getNylasSchedulerStore(){return this.baseProvider?.getStore("scheduler")}async getNylasSchedulerConfigStore(){return this.baseProvider?.getStore("schedulerConfig")}render(){return e(i,{key:"782d47608825fb870d87153c8d43d778dc6c2b87"},e("slot",{key:"2b01537d9d4a0cf4c81ad0b77ce3e6d761f3e1db"}))}get host(){return h(this)}};S.style=C;export{S as nylas_provider};
//# sourceMappingURL=p-38675cc5.entry.js.map