{"version":3,"names":["nylasMailboxPaginationCss","NylasMailboxPaginationStyle0","NylasMailboxPagination","constructor","hostRef","debug","this","isScrollAtContainerBottom","bind","isScrollAtPageBottom","nextPage","previousPage","handlePageScroll","handleContainerScroll","connectedCallback","componentWillLoad","componentDidLoad","containerElement","addEventListener","componentWillRender","disconnectedCallback","removeEventListener","_event","canScroll","scrollTarget","hasChildren","host","children","length","next","emit","previous","scrollTop","clientHeight","scrollHeight","window","innerHeight","scrollY","document","body","offsetHeight","state","mobileOnlyInfiniteScroll","innerWidth","mobileViewPortWidth","render","h","Host","class","ref","r","scale","color","hasNextPage","onClick","slot","hasPreviousPage","parr","__decorate","RegisterComponent","name","stateToProps","Map","eventToProps","async","event","nylasConnector","detail","threads","nextThreadPage","previousThreadPage","fireRegisterEvent"],"sources":["src/components/mailbox/nylas-mailbox-pagination/nylas-mailbox-pagination.scss?tag=nylas-mailbox-pagination&encapsulation=shadow","src/components/mailbox/nylas-mailbox-pagination/nylas-mailbox-pagination.tsx"],"sourcesContent":[":host {\n  display: contents;\n}\n\n.container {\n  height: var(--container-height, 100dvh);\n  overflow-y: var(--container-overflow-y, auto);\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  padding: 0;\n  list-style: none;\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: var(--nylas-color-primary-600);\n\n  sp-button {\n    svg {\n      animation: rotate 1s linear infinite;\n    }\n  }\n}\n\nsp-button {\n  border-radius: var(--nylas-border-radius);\n  background-color: var(--nylas-color-primary-400);\n  color: var(--nylas-color-primary-900);\n  fill: var(--nylas-color-primary-900);\n\n  &:hover {\n    background-color: var(--nylas-color-primary-500);\n  }\n\n  &:disabled {\n    background-color: var(--nylas-color-primary-200);\n    color: var(--nylas-color-primary-600);\n    cursor: not-allowed;\n  }\n\n  chevron-icon {\n    svg {\n      width: 15px;\n      height: 15px;\n    }\n  }\n}\n\n.next {\n  chevron-icon {\n    transform: rotate(180deg);\n  }\n}\n\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { debug } from '@/utils/utils';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Method, Prop, h } from '@stencil/core';\nimport { NylasMailboxConnector } from '../../..';\nimport { NylasMailbox } from '../nylas-mailbox/nylas-mailbox';\n\nexport type PaginationEvent = {\n  hasChildren: boolean;\n};\n\n@Component({\n  tag: 'nylas-mailbox-pagination',\n  styleUrl: 'nylas-mailbox-pagination.scss',\n  shadow: true,\n})\nexport class NylasMailboxPagination {\n  /**\n   * @description The host element\n   */\n  @Element() host!: HTMLNylasMailboxPaginationElement;\n\n  /**\n   * @description The state of the mailbox\n   */\n  @Prop() state: 'ready' | 'loading' | 'error' = 'ready';\n\n  /**\n   * @description Whether or not the mailbox has a next or previous page of threads\n   */\n  @Prop() hasNextPage: boolean = false;\n\n  /**\n   * @description Whether or not the mailbox has a previous page of threads\n   */\n  @Prop() hasPreviousPage: boolean = false;\n\n  /**\n   * @description Whether or not the mailbox has a next or previous page of threads\n   */\n  @Prop() scrollTarget: 'container' | 'page' = 'container';\n\n  /**\n   * @description Whether or not the infinity scroll should only be enabled on mobile devices\n   */\n  @Prop() mobileOnlyInfiniteScroll: boolean = true;\n\n  /**\n   * @description The width of the mobile viewport\n   */\n  @Prop() mobileViewPortWidth: number = 768;\n\n  /**\n   * @description An event that is fired when the user scrolls to the bottom of the page\n   */\n  @Event() next!: EventEmitter<PaginationEvent>;\n\n  /**\n   * @description An event that is fired when the user scrolls to the top of the page\n   */\n  @Event() previous!: EventEmitter<PaginationEvent>;\n\n  /**\n   * @description The container element\n   */\n  private containerElement?: HTMLDivElement;\n\n  constructor() {\n    debug(`[nylas-pagination] Constructed`);\n    this.isScrollAtContainerBottom = this.isScrollAtContainerBottom.bind(this);\n    this.isScrollAtPageBottom = this.isScrollAtPageBottom.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.previousPage = this.previousPage.bind(this);\n    this.handlePageScroll = this.handlePageScroll.bind(this);\n    this.handleContainerScroll = this.handleContainerScroll.bind(this);\n  }\n\n  connectedCallback() {\n    debug(`[nylas-pagination] Component connected`);\n  }\n\n  async componentWillLoad() {\n    debug(`[nylas-pagination] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-pagination] Component did load`);\n    if (this.containerElement) {\n      this.containerElement.addEventListener('scroll', this.handleContainerScroll);\n    }\n  }\n\n  async componentWillRender() {\n    debug(`[nylas-pagination] Component will render`);\n  }\n\n  disconnectedCallback() {\n    debug(`[nylas-pagination] Component disconnected`);\n    if (this.containerElement) {\n      this.containerElement.removeEventListener('scroll', this.handleContainerScroll);\n    }\n  }\n\n  /**\n   * @description Listen for scroll events and fire the next page event when the user scrolls to the bottom of the page\n   * @param _event An event that is fired when the user scrolls\n   */\n  @Listen('scroll', { target: 'window' })\n  public handlePageScroll(_event: Event) {\n    if (this.isScrollAtPageBottom() && this.canScroll && this.scrollTarget === 'page') {\n      this.nextPage();\n    }\n  }\n\n  /**\n   * @description Go to the next page of threads\n   */\n  @Method()\n  public async nextPage() {\n    const hasChildren = this.host.children.length > 0;\n    this.next.emit({\n      hasChildren,\n    });\n  }\n\n  /**\n   * @description Go to the previous page of threads\n   */\n  @Method()\n  public async previousPage() {\n    const hasChildren = this.host.children.length > 0;\n    this.previous.emit({\n      hasChildren,\n    });\n  }\n\n  /**\n   * @description Handle the scroll event\n   * @param event An event that is fired when the user scrolls\n   */\n  private handleContainerScroll(_event: Event) {\n    if (this.isScrollAtContainerBottom() && this.canScroll && this.scrollTarget === 'container') {\n      this.nextPage();\n    }\n  }\n\n  /**\n   * @description Check if the user has scrolled to the bottom of the page\n   */\n  private isScrollAtContainerBottom() {\n    if (!this.containerElement) {\n      return false;\n    }\n    return this.containerElement && this.containerElement.scrollTop + this.containerElement.clientHeight >= this.containerElement.scrollHeight;\n  }\n\n  /**\n   * @description Check if the user has scrolled to the bottom of the page\n   */\n  private isScrollAtPageBottom() {\n    return window.innerHeight + window.scrollY >= document.body.offsetHeight;\n  }\n\n  /**\n   * @description Check if the user can scroll to the next page\n   * @returns boolean\n   */\n  private get canScroll() {\n    const hasChildren = this.host.children.length > 0;\n    return this.state === 'ready' && hasChildren && (!this.mobileOnlyInfiniteScroll || window.innerWidth < this.mobileViewPortWidth);\n  }\n\n  @RegisterComponent<NylasMailboxPagination, NylasMailboxConnector, Exclude<NylasMailbox['stores'], undefined>>({\n    name: 'nylas-pagination',\n    stateToProps: new Map([\n      ['mailbox.hasNextThreadPage', 'hasNextPage'],\n      ['mailbox.hasPreviousThreadPage', 'hasPreviousPage'],\n      ['mailbox.state', 'state'],\n    ]),\n    eventToProps: {\n      next: async (event: CustomEvent<PaginationEvent>, nylasConnector: NylasMailboxConnector) => {\n        debug(`[nylas-pagination] Next page event fired`);\n        const { hasChildren } = event.detail;\n        await nylasConnector.threads.nextThreadPage(hasChildren ? 'append' : 'overwrite', !hasChildren);\n      },\n      previous: async (event: CustomEvent<PaginationEvent>, nylasConnector: NylasMailboxConnector) => {\n        debug(`[nylas-pagination] Previous page event fired`);\n        const { hasChildren } = event.detail;\n        await nylasConnector.threads.previousThreadPage(hasChildren ? 'append' : 'overwrite', !hasChildren);\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const hasChildren = this.host.children.length > 0;\n    if (hasChildren) {\n      return (\n        <Host>\n          <div class=\"container\" ref={r => (this.containerElement = r)}>\n            <slot></slot>\n            {this.canScroll && (\n              <div class={'pagination'}>\n                <sp-theme scale=\"medium\" color=\"dark\">\n                  {this.state === 'ready' && this.hasNextPage && (\n                    <sp-button onClick={this.nextPage}>\n                      <div slot=\"icon\">\n                        <refresh-icon class={'refres-icon'} />\n                      </div>{' '}\n                      Load more...\n                    </sp-button>\n                  )}\n                </sp-theme>\n              </div>\n            )}\n          </div>\n        </Host>\n      );\n    }\n\n    return (\n      <Host>\n        <sp-theme scale=\"medium\" color=\"dark\">\n          {this.hasPreviousPage && (\n            <sp-button class={'previous'} parr=\"previous\" onClick={this.previousPage}>\n              <div slot=\"icon\">\n                <chevron-icon class={'previous-icon'} />\n              </div>{' '}\n              Previous\n            </sp-button>\n          )}\n          {this.hasPreviousPage && this.hasNextPage && ' '}\n          {this.hasNextPage && (\n            <sp-button class={'next'} parr=\"next\" onClick={this.nextPage}>\n              <div slot=\"icon\">\n                <chevron-icon class={'next-icon'} />\n              </div>{' '}\n              Next\n            </sp-button>\n          )}\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}