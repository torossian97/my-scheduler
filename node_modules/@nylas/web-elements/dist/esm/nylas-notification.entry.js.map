{"file":"nylas-notification.entry.js","mappings":"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","names":[],"sources":["src/components/scheduler/nylas-notification/nylas-notification.scss?tag=nylas-notification&encapsulation=shadow","src/components/scheduler/nylas-notification/nylas-notification.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  margin-bottom: -12px; // offset for the rounded border\n  width: 100%;\n  z-index: 1;\n  @include default-css-variables;\n}\n.notif {\n  display: flex;\n  @media #{$mobile} {\n    width: auto;\n  }\n  padding: 17px;\n  align-items: flex-start;\n  justify-content: space-between;\n  gap: 16px;\n  border-radius: var(--nylas-border-radius-2x);\n  border: 1.5px solid var(--nylas-error);\n  background: var(--nylas-base-0);\n  .content {\n    display: flex;\n    flex-direction: row;\n    gap: 8px;\n    .message {\n      font-size: 14px;\n      font-weight: 400;\n      color: var(--nylas-base-800);\n      .title {\n        font-size: 16px;\n        font-weight: 600;\n        color: var(--nylas-base-950);\n        display: block;\n      }\n      .description {\n        font-size: 14px;\n        font-weight: 400;\n        color: var(--nylas-base-800);\n        display: block;\n      }\n    }\n    .icon {\n      &.error {\n        color: var(--nylas-error);\n      }\n    }\n  }\n\n  &.error {\n    border-color: var(--nylas-error);\n  }\n  &.warning {\n    border-color: var(--nylas-warning);\n  }\n  &.info {\n    border-color: var(--nylas-info);\n  }\n  &.success {\n    border-color: var(--nylas-success);\n  }\n\n  .dismiss-btn {\n    background: none;\n    border: none;\n    color: var(--nylas-base-950);\n    cursor: pointer;\n  }\n}\n","import { Notification } from '@nylas/core';\nimport { Component, Fragment, Host, Listen, Prop, State, h } from '@stencil/core';\nimport { debug } from '@/utils/utils';\n\n/**\n * The `nylas-notification` component is a UI component that displays notifications.\n */\n@Component({\n  tag: 'nylas-notification',\n  styleUrl: 'nylas-notification.scss',\n  shadow: true,\n})\nexport class NylasNotification {\n  /**\n   * The time-to-live for notifications in milliseconds. Set to 'none' to disable auto-dismissal.\n   */\n  @Prop() ttl: number | 'none' = 5000;\n  @Prop() allowedCategories: string[] = ['component', 'api', 'validation', 'invalid_session'];\n\n  @State() notifications: Notification[] = [];\n\n  @Listen('nylasSchedulerError', { target: 'body' })\n  onError(event: CustomEvent<Notification>) {\n    debug(`[nylas-notification] Error: ${event.detail.title}`);\n    this.handleNotification(event);\n  }\n\n  @Listen('nylasSchedulerWarning', { target: 'body' })\n  onWarning(event: CustomEvent<Notification>) {\n    debug(`[nylas-notification] Warning: ${event.detail.title}`);\n    this.handleNotification(event);\n  }\n\n  @Listen('nylasSchedulerInfo', { target: 'body' })\n  onInfo(event: CustomEvent<Notification>) {\n    debug(`[nylas-notification] Info: ${event.detail.title}`);\n    this.handleNotification(event);\n  }\n\n  @Listen('nylasSchedulerSuccess', { target: 'body' })\n  onSuccess(event: CustomEvent<Notification>) {\n    debug(`[nylas-notification] Success: ${event.detail.title}`);\n    this.handleNotification(event);\n  }\n\n  private handleNotification(event: CustomEvent<Notification>) {\n    if (event.defaultPrevented) {\n      debug(`[nylas-notification] Event default prevented`);\n      return;\n    }\n    if (this.ttl === 0) {\n      debug(`[nylas-notification] TTL is 0`);\n      return;\n    }\n    if (this.allowedCategories.length > 0 && !this.allowedCategories.includes(event.detail.category)) {\n      debug(`[nylas-notification] Category not allowed`);\n      return;\n    }\n\n    this.notifications = [...this.notifications, { ...event.detail }];\n    if (event.detail.ttl !== 'none') {\n      const ttl = event.detail.ttl ? event.detail.ttl : (this.ttl as number);\n      window.setTimeout(() => {\n        this.notifications = this.notifications.filter(notif => notif.id !== event.detail.id);\n      }, ttl);\n    }\n  }\n\n  private dismissNotification(id: string) {\n    this.notifications = this.notifications.filter(notif => notif.id !== id);\n  }\n\n  render() {\n    return (\n      <Host>\n        <Fragment>\n          {this.notifications.map(notif => (\n            <div class={`notif ${notif.type}`} key={notif.id}>\n              <div class=\"content\">\n                <span class={`icon ${notif.type}`}>{(notif.type === 'error' || notif.type === 'warning') && <warning-icon />}</span>\n                <span class=\"message\">\n                  <span class=\"title\">{notif.title}</span>\n                  {notif.description && <span class=\"description\">{notif.description}</span>}\n                </span>\n              </div>\n              <button class=\"dismiss-btn\" onClick={() => this.dismissNotification(notif.id)}>\n                <close-icon />\n              </button>\n            </div>\n          ))}\n          <slot />\n        </Fragment>\n      </Host>\n    );\n  }\n}\n"],"version":3}