import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import { R as RegisterComponent } from './register-component.js';
import { a as debug } from './utils.js';
import { T as TIMEZONE_MAP } from './constants.js';
import { d as defineCustomElement$2 } from './calendar.js';
import { d as defineCustomElement$1 } from './globe.js';

const nylasSelectedEventCardCss = ":host{display:block}sp-theme{position:relative;height:inherit;display:flex;flex-direction:column;justify-content:center;align-items:center;font-family:var(--nylas-font-family)}.event-card{display:flex;align-items:center;flex-direction:column;width:calc(100% - 3rem);background-color:var(--nylas-base-0);color:var(--nylas-base-800);border-radius:var(--nylas-border-radius-2x);padding:3rem 1.5rem 1.5rem 1.5rem;position:relative;box-shadow:0px 1px 3px 0px rgba(0, 0, 0, 0.1), 0px 1px 2px 0px rgba(0, 0, 0, 0.06)}@media screen and (max-width: 768px){.event-card{margin-bottom:2rem}}.nylas-selected-event-card__date{font-size:min(max(16px, 3vw), 18px);font-weight:600}.nylas-selected-event-card__time{font-size:min(max(14px, 3vw), 16px);font-weight:500}.calendar-icon{width:3rem;height:3rem;border-radius:50%;position:absolute;top:-1.25rem;left:50%;transform:translateX(-50%);background-color:var(--nylas-base-0);border:1px solid var(--nylas-base-200)}calendar-icon{display:flex;align-items:center;justify-content:center;height:100%}.event-timezone{display:flex;color:var(--nylas-base-600);margin-bottom:8px;gap:4px;align-items:center}@media screen and (max-width: 768px){.event-timezone{margin-bottom:16px}}";

var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        r = Reflect.decorate(decorators, target, key, desc);
    else
        for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
};
const NylasSelectedEventCard = proxyCustomElement(class NylasSelectedEventCard extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.__attachShadow();
        this.selectedDate = undefined;
        this.selectedTimeslot = undefined;
        this.selectedTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
        this.startTime = '';
        this.endTime = '';
    }
    connectedCallback() { }
    disconnectedCallback() { }
    async componentWillLoad() {
        debug(`[nylas-selected-event-card] Component will load`);
    }
    async componentDidLoad() {
        debug(`[nylas-selected-event-card] Component did load`);
    }
    handleSelectedTimeslotChange(selectedTimeslot) {
        this.startTime = new Date(selectedTimeslot?.start_time).toLocaleString(undefined, { timeStyle: 'short' });
        this.endTime = new Date(selectedTimeslot?.end_time).toLocaleString(undefined, { timeStyle: 'short' });
    }
    render() {
        return (h(Host, { key: 'c84565db48fc177fd6f8af71db7f9776516cf46f', part: "nsec" }, h("sp-theme", { key: '7de2e148c85b878e735ac6a69a62892110de9b65', theme: "spectrum", color: "dark", scale: "medium" }, h("div", { key: '0a9f43a55c68fdd7d93b42600b94e2f10d551dd4', class: "event-card", part: "nsec__card" }, h("div", { key: '18b16b39d4c3d7c1a0f9c16c084d99f1b9b9ff5b', class: "calendar-icon", part: "nsec__icon" }, h("calendar-icon", { key: '92202409a7e922975ab31216d8f68c3fb8767cbe' })), h("div", { key: '79006fdf073ed56acec50e1e11ddf101fcfca81c', class: "nylas-selected-event-card__date", part: "nsec__date" }, this.selectedDate?.toLocaleDateString(undefined, { dateStyle: 'full' })), h("div", { key: '1f605b2bc03f290b5a5b3ac858256f438ac33651', class: "nylas-selected-event-card__time", part: "nsec__time" }, this.startTime, " - ", this.endTime)), h("div", { key: '03f9f64e0229904519984305751c388886838b99', class: "event-timezone", part: "nsec__timezone" }, h("globe-icon", { key: '7bd33f03d96671423199113ee24fe913f78c1bca' }), TIMEZONE_MAP[this.selectedTimezone]))));
    }
    static get watchers() { return {
        "selectedTimeslot": ["handleSelectedTimeslotChange"]
    }; }
    static get style() { return nylasSelectedEventCardCss; }
}, [1, "nylas-selected-event-card", {
        "selectedDate": [16],
        "selectedTimeslot": [16],
        "selectedTimezone": [1, "selected-timezone"],
        "startTime": [32],
        "endTime": [32]
    }, undefined, {
        "selectedTimeslot": ["handleSelectedTimeslotChange"]
    }]);
__decorate([
    RegisterComponent({
        name: 'nylas-selected-event-card',
        stateToProps: new Map([
            ['scheduler.selectedDate', 'selectedDate'],
            ['scheduler.selectedTimeslot', 'selectedTimeslot'],
            ['scheduler.selectedTimezone', 'selectedTimezone'],
        ]),
        eventToProps: {},
        fireRegisterEvent: true,
    }),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], NylasSelectedEventCard.prototype, "render", null);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["nylas-selected-event-card", "calendar-icon", "globe-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "nylas-selected-event-card":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, NylasSelectedEventCard);
            }
            break;
        case "calendar-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$2();
            }
            break;
        case "globe-icon":
            if (!customElements.get(tagName)) {
                defineCustomElement$1();
            }
            break;
    } });
}

export { NylasSelectedEventCard as N, defineCustomElement as d };

//# sourceMappingURL=nylas-selected-event-card2.js.map