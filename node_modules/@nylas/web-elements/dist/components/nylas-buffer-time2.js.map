{"file":"nylas-buffer-time2.js","mappings":"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","names":[],"sources":["src/components/scheduler-editor/nylas-buffer-time/nylas-buffer-time.scss?tag=nylas-buffer-time&encapsulation=shadow","src/components/scheduler-editor/nylas-buffer-time/nylas-buffer-time.tsx"],"sourcesContent":["@import '../../../common/styles/variables.scss';\n\n:host {\n  display: block;\n  @include default-css-variables;\n  width: inherit;\n}\n\n.nylas-buffer-time {\n  width: inherit;\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  border-radius: var(--nylas-border-radius-2x);\n  border: 1px solid var(--nylas-base-200);\n  text-align: left;\n  .header {\n    padding: 1rem;\n    border-bottom: 1px solid var(--nylas-base-200);\n    h3 {\n      margin: 0;\n      font-size: 1rem;\n      font-weight: 600;\n      line-height: 20px;\n      color: var(--nylas-base-900);\n      text-align: left;\n    }\n    p {\n      margin: 0.25rem 0 0 0;\n      font-size: 0.875rem;\n      font-weight: 400;\n      line-height: 20px;\n      color: var(--nylas-base-600);\n      text-align: left;\n    }\n  }\n\n  .nylas-buffer-time__body {\n    display: grid;\n    grid-template-columns: 1fr auto;\n    @media #{$mobile} {\n      grid-template-columns: 1fr;\n    }\n    .nylas-buffer-time__dropdown {\n      padding: 1rem;\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n      border-right: 1px solid var(--nylas-base-200);\n      color: var(--nylas-base-800);\n      @media #{$mobile} {\n        border: none;\n      }\n      .nylas-buffer-time__row {\n        display: grid;\n        grid-template-columns: auto 1fr;\n        align-items: center;\n        gap: 1rem;\n        label {\n          width: 200px;\n        }\n        .dropdown-container {\n          display: flex;\n          gap: 1rem;\n          align-items: center;\n          justify-content: flex-end;\n        }\n      }\n    }\n    .nylas-buffer-time__preview {\n      width: 208px;\n      background: var(--nylas-base-25);\n      border-bottom-right-radius: var(--nylas-border-radius-2x);\n      @media #{$mobile} {\n        width: inherit;\n        border-bottom-left-radius: var(--nylas-border-radius-2x);\n      }\n      h4 {\n        font-size: 14px;\n        line-height: 24px;\n        color: var(--nylas-base-600);\n        font-family: var(--nylas-font-family);\n        font-weight: 500;\n        text-align: center;\n        margin: 0.75rem 0;\n      }\n      .preview-container {\n        padding: 0 2rem 1rem;\n        .slot {\n          background-color: transparent;\n          border-top: 1px solid var(--nylas-base-300);\n          &.active {\n            background-color: var(--nylas-base-100);\n          }\n          &:last-of-type {\n            border-bottom: 1px solid var(--nylas-base-300);\n          }\n        }\n        .event-slot {\n          background-color: var(--nylas-base-600);\n          border-top: 1px solid var(--nylas-base-300);\n        }\n      }\n    }\n  }\n\n  .nylas-buffer-time__dropdown {\n    select-dropdown::part(sd_dropdown-button) {\n      width: 104px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      border: 1px solid var(--nylas-base-200);\n      border-radius: var(--nylas-border-radius-2x);\n      padding: 1rem;\n    }\n    select-dropdown::part(sd_dropdown-content) {\n      width: 100%;\n    }\n    select-dropdown::part(sd_dropdown-button-selected-label) {\n      max-width: calc(100% - 2rem);\n      font-family: var(--nylas-font-family);\n      font-size: 16px;\n      line-height: 24px;\n    }\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { NylasSchedulerConfigConnector } from '@/connector/nylas-scheduler-config-connector';\nimport { debug } from '@/utils/utils';\nimport { AttachInternals, Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\nimport { NylasSchedulerEditor } from '../nylas-scheduler-editor/nylas-scheduler-editor';\n\n/**\n * The `nylas-buffer-time` component is a UI component that displays the booking calendar picker.\n * @part nbt - The buffer time container\n * @part nbt__header - The header of the buffer time\n * @part nbt__body - The body of the buffer time\n * @part nbt__dropdown-before - The dropdown container for the before buffer time\n * @part nbt__dropdown-button-before - The dropdown button for the before buffer time\n * @part nbt__dropdown-content-before - The dropdown content for the before buffer time\n * @part nbt__dropdown-after - The dropdown container for the after buffer time\n * @part nbt__dropdown-button-after - The dropdown button for the after buffer time\n * @part nbt__dropdown-content-after - The dropdown content for the after buffer time\n * @part nbt__preview - The preview container\n */\n@Component({\n  tag: 'nylas-buffer-time',\n  styleUrl: 'nylas-buffer-time.scss',\n  shadow: true,\n  formAssociated: true,\n})\nexport class NylasBufferTime {\n  @Element() host!: HTMLNylasCalendarPickerElement;\n  /**\n   * The name of the calendar picker.\n   */\n  @Prop() name: string = 'buffer-time';\n  /**\n   * The buffer time\n   */\n  @Prop() buffer: { before: number; after: number } = { before: 0, after: 0 };\n  /**\n   * The element internals.\n   */\n  @AttachInternals() internals!: ElementInternals;\n\n  /**\n   * The selected before buffer time.\n   */\n  @State() selectedBeforeBufferTime: number = this.buffer.before;\n\n  /**\n   * The selected after buffer time.\n   */\n  @State() selectedAfterBufferTime: number = this.buffer.after;\n\n  /**\n   * This event is fired when the selected calendars change.\n   */\n  @Event() valueChanged!: EventEmitter<{\n    value: string;\n    name: string;\n    valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void;\n  }>;\n\n  // Lifecycle methods\n  connectedCallback() {\n    debug('nylas-buffer-time', 'connectedCallback');\n  }\n\n  disconnectedCallback() {\n    debug('nylas-buffer-time', 'disconnectedCallback');\n  }\n\n  componentWillLoad() {\n    debug('nylas-buffer-time', 'componentWillLoad');\n    // See comment in the @Watch('name') decorator for more information.\n    this.host.setAttribute('name', this.name);\n  }\n\n  componentDidLoad() {\n    debug('nylas-buffer-time', 'componentDidLoad');\n    // TODO: Remove this when the internals in tests are fixed.\n    if (typeof this.internals.setFormValue === 'function') {\n      const bufferTime = {\n        before: this.selectedBeforeBufferTime,\n        after: this.selectedAfterBufferTime,\n      };\n      this.internals.setFormValue(JSON.stringify(bufferTime), this.name);\n    }\n    this.selectedAfterBufferTime = this.buffer.after;\n    this.selectedBeforeBufferTime = this.buffer.before;\n  }\n\n  componentWillUpdate() {\n    debug('nylas-buffer-time', 'componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    debug('nylas-buffer-time', 'componentDidUpdate');\n  }\n\n  componentWillRender() {\n    debug('nylas-buffer-time', 'componentWillRender');\n  }\n\n  componentDidRender() {\n    debug('nylas-buffer-time', 'componentDidRender');\n  }\n\n  /**\n   * When a name prop is passed, stencil does not automatically set the name attribute on the host element.\n   * Since this component is form-associated, the name attribute is required for form submission.\n   * This is a workaround to ensure that the name attribute is set on the host element.\n   */\n  @Watch('name')\n  elementNameChangedHandler(newValue: string) {\n    debug('nylas-buffer-time', 'elementNameChangedHandler', newValue);\n    this.host.setAttribute('name', newValue);\n  }\n\n  @Listen('selectedOptionChanged')\n  selectedOptionChangedHandler(event: CustomEvent<{ value: string; name: string }>) {\n    debug('nylas-buffer-time', 'selectedOptionChangedHandler', event.detail);\n    // Pass as handler so that if event.defaultPrevented by parent app, this will be skipped.\n    const valueChanged = (event: CustomEvent<{ value: string; name: string }>) => {\n      const { value, name } = event.detail;\n      if (name === 'before-buffer-time') {\n        this.selectedBeforeBufferTime = parseInt(value);\n      } else if (name === 'after-buffer-time') {\n        this.selectedAfterBufferTime = parseInt(value);\n      }\n      const bufferTime = {\n        before: this.selectedBeforeBufferTime,\n        after: this.selectedAfterBufferTime,\n      };\n      this.internals.setFormValue(JSON.stringify(bufferTime), 'booking-calendar');\n    };\n    this.valueChanged.emit({ ...event.detail, valueChanged });\n  }\n\n  renderPreview() {\n    const totalSlots = 4;\n    const slotHeight = 10; // The height for each 30-minute slot\n\n    // Event slot height is constant\n    const eventSlotHeight = slotHeight * 2;\n\n    // Helper function to determine the fill of a slot based on the minutes selected\n    const slotFill = minutes => {\n      const fullSlots = Math.floor(minutes / 30);\n      const partialFillHeight = ((minutes % 30) / 30) * slotHeight;\n\n      return {\n        fullSlots,\n        partialFillHeight,\n      };\n    };\n\n    // Helper function to create before slots\n    const createBeforeSlots = () => {\n      const { fullSlots, partialFillHeight } = slotFill(this.selectedBeforeBufferTime);\n\n      return Array.from({ length: totalSlots }, (_, index) => {\n        // Slot is active if its index is greater than the total slots minus the full slots minus one\n        // and there are some minutes selected.\n        const isActive = this.selectedBeforeBufferTime > 0 && index > totalSlots - fullSlots - 1;\n        const isPartial = this.selectedBeforeBufferTime > 0 && index === totalSlots - fullSlots - 1 && partialFillHeight > 0;\n\n        let slotStyle: {\n          backgroundColor?: string;\n          background?: string;\n        } = {};\n        if (isActive && !isPartial) {\n          slotStyle.backgroundColor = 'var(--nylas-base-100)';\n        } else if (isPartial) {\n          slotStyle.background = `linear-gradient(to top, var(--nylas-base-100) ${partialFillHeight}px, transparent 0)`;\n        }\n\n        return (\n          <div\n            key={index}\n            class={`slot ${isActive ? 'active' : ''}`}\n            style={{\n              height: `${slotHeight}px`,\n              ...slotStyle,\n            }}\n          ></div>\n        );\n      });\n    };\n\n    // Helper function to create after slots\n    const createAfterSlots = () => {\n      const { fullSlots, partialFillHeight } = slotFill(this.selectedAfterBufferTime);\n\n      return Array.from({ length: totalSlots }, (_, index) => {\n        const isActive = this.selectedAfterBufferTime > 0 && index < fullSlots;\n        const isPartial = index === fullSlots && partialFillHeight > 0;\n\n        let slotStyle: {\n          backgroundColor?: string;\n          background?: string;\n        } = {};\n        if (isActive && !isPartial) {\n          slotStyle.backgroundColor = 'var(--nylas-base-100)';\n        } else if (isPartial) {\n          slotStyle.background = `linear-gradient(to bottom, var(--nylas-base-100) ${partialFillHeight}px, transparent 0)`;\n        }\n\n        return (\n          <div\n            key={index}\n            class={`slot ${isActive ? 'active' : ''}`}\n            style={{\n              height: `${slotHeight}px`,\n              ...slotStyle,\n            }}\n          ></div>\n        );\n      });\n    };\n\n    return (\n      <div class=\"preview-container\">\n        {createBeforeSlots()}\n        <div class=\"event-slot\" style={{ height: `${eventSlotHeight}px` }}></div>\n        {createAfterSlots()}\n      </div>\n    );\n  }\n\n  @RegisterComponent<NylasBufferTime, NylasSchedulerConfigConnector, Exclude<NylasSchedulerEditor['stores'], undefined>>({\n    name: 'nylas-buffer-time',\n    eventToProps: {\n      valueChanged: async (\n        event: CustomEvent<{ value: string; name: string; valueChanged?: (event: CustomEvent<{ value: string; name: string }>) => void }>,\n        _nylasSchedulerConfigConnector: NylasSchedulerConfigConnector,\n      ) => {\n        const { valueChanged } = event.detail;\n        // If a handler is passed, call it.\n        if (valueChanged) {\n          valueChanged(event);\n        }\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const minuteOptions = Array.from({ length: 24 }, (_, i) => {\n      const value = (i + 1) * 5;\n      return {\n        label: value.toString(),\n        value: value,\n      };\n    });\n\n    return (\n      <Host>\n        <div class=\"nylas-buffer-time\" part=\"nbt\">\n          <div class=\"header\" part=\"nbt__header\">\n            <h3>Buffer time</h3>\n            <p>Add buffer time before and after the event.</p>\n          </div>\n          <div class=\"nylas-buffer-time__body\" part=\"nbt__body\">\n            <div class=\"nylas-buffer-time__dropdown\">\n              <div class=\"nylas-buffer-time__row\">\n                <label>Before the event</label>\n                <div class=\"dropdown-container\">\n                  <select-dropdown\n                    id=\"before-buffer-time\"\n                    withSearch={false}\n                    name=\"before-buffer-time\"\n                    exportparts=\"sd_dropdown: nbt__dropdown-before, sd_dropdown-button: nbt__dropdown-button-before, sd_dropdown-content: nbt__dropdown-content-before\"\n                    options={minuteOptions}\n                    defaultSelectedOption={minuteOptions.find(min => min.value == this.selectedBeforeBufferTime) ?? minuteOptions[0]}\n                  />\n                  <span>mins</span>\n                </div>\n              </div>\n              <div class=\"nylas-buffer-time__row\">\n                <label>After the event</label>\n                <div class=\"dropdown-container\">\n                  <select-dropdown\n                    id=\"after-buffer-time\"\n                    withSearch={false}\n                    name=\"after-buffer-time\"\n                    exportparts=\"sd_dropdown: nbt__dropdown-after, sd_dropdown-button: nbt__dropdown-button-after, sd_dropdown-content: nbt__dropdown-content-after\"\n                    options={minuteOptions}\n                    defaultSelectedOption={minuteOptions.find(min => min.value == this.selectedAfterBufferTime) ?? minuteOptions[0]}\n                  />\n                  <span>mins</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"nylas-buffer-time__preview\" part=\"nbt__preview\">\n              <h4>PREVIEW</h4>\n              {this.renderPreview()}\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}