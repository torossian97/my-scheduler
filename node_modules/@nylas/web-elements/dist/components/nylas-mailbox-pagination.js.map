{"file":"nylas-mailbox-pagination.js","mappings":"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","names":["NylasMailboxPagination"],"sources":["src/components/mailbox/nylas-mailbox-pagination/nylas-mailbox-pagination.scss?tag=nylas-mailbox-pagination&encapsulation=shadow","src/components/mailbox/nylas-mailbox-pagination/nylas-mailbox-pagination.tsx"],"sourcesContent":[":host {\n  display: contents;\n}\n\n.container {\n  height: var(--container-height, 100dvh);\n  overflow-y: var(--container-overflow-y, auto);\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  padding: 0;\n  list-style: none;\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: var(--nylas-color-primary-600);\n\n  sp-button {\n    svg {\n      animation: rotate 1s linear infinite;\n    }\n  }\n}\n\nsp-button {\n  border-radius: var(--nylas-border-radius);\n  background-color: var(--nylas-color-primary-400);\n  color: var(--nylas-color-primary-900);\n  fill: var(--nylas-color-primary-900);\n\n  &:hover {\n    background-color: var(--nylas-color-primary-500);\n  }\n\n  &:disabled {\n    background-color: var(--nylas-color-primary-200);\n    color: var(--nylas-color-primary-600);\n    cursor: not-allowed;\n  }\n\n  chevron-icon {\n    svg {\n      width: 15px;\n      height: 15px;\n    }\n  }\n}\n\n.next {\n  chevron-icon {\n    transform: rotate(180deg);\n  }\n}\n\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n","import { RegisterComponent } from '@/common/register-component';\nimport { debug } from '@/utils/utils';\nimport { Component, Element, Event, EventEmitter, Host, Listen, Method, Prop, h } from '@stencil/core';\nimport { NylasMailboxConnector } from '../../..';\nimport { NylasMailbox } from '../nylas-mailbox/nylas-mailbox';\n\nexport type PaginationEvent = {\n  hasChildren: boolean;\n};\n\n@Component({\n  tag: 'nylas-mailbox-pagination',\n  styleUrl: 'nylas-mailbox-pagination.scss',\n  shadow: true,\n})\nexport class NylasMailboxPagination {\n  /**\n   * @description The host element\n   */\n  @Element() host!: HTMLNylasMailboxPaginationElement;\n\n  /**\n   * @description The state of the mailbox\n   */\n  @Prop() state: 'ready' | 'loading' | 'error' = 'ready';\n\n  /**\n   * @description Whether or not the mailbox has a next or previous page of threads\n   */\n  @Prop() hasNextPage: boolean = false;\n\n  /**\n   * @description Whether or not the mailbox has a previous page of threads\n   */\n  @Prop() hasPreviousPage: boolean = false;\n\n  /**\n   * @description Whether or not the mailbox has a next or previous page of threads\n   */\n  @Prop() scrollTarget: 'container' | 'page' = 'container';\n\n  /**\n   * @description Whether or not the infinity scroll should only be enabled on mobile devices\n   */\n  @Prop() mobileOnlyInfiniteScroll: boolean = true;\n\n  /**\n   * @description The width of the mobile viewport\n   */\n  @Prop() mobileViewPortWidth: number = 768;\n\n  /**\n   * @description An event that is fired when the user scrolls to the bottom of the page\n   */\n  @Event() next!: EventEmitter<PaginationEvent>;\n\n  /**\n   * @description An event that is fired when the user scrolls to the top of the page\n   */\n  @Event() previous!: EventEmitter<PaginationEvent>;\n\n  /**\n   * @description The container element\n   */\n  private containerElement?: HTMLDivElement;\n\n  constructor() {\n    debug(`[nylas-pagination] Constructed`);\n    this.isScrollAtContainerBottom = this.isScrollAtContainerBottom.bind(this);\n    this.isScrollAtPageBottom = this.isScrollAtPageBottom.bind(this);\n    this.nextPage = this.nextPage.bind(this);\n    this.previousPage = this.previousPage.bind(this);\n    this.handlePageScroll = this.handlePageScroll.bind(this);\n    this.handleContainerScroll = this.handleContainerScroll.bind(this);\n  }\n\n  connectedCallback() {\n    debug(`[nylas-pagination] Component connected`);\n  }\n\n  async componentWillLoad() {\n    debug(`[nylas-pagination] Component will load`);\n  }\n\n  async componentDidLoad() {\n    debug(`[nylas-pagination] Component did load`);\n    if (this.containerElement) {\n      this.containerElement.addEventListener('scroll', this.handleContainerScroll);\n    }\n  }\n\n  async componentWillRender() {\n    debug(`[nylas-pagination] Component will render`);\n  }\n\n  disconnectedCallback() {\n    debug(`[nylas-pagination] Component disconnected`);\n    if (this.containerElement) {\n      this.containerElement.removeEventListener('scroll', this.handleContainerScroll);\n    }\n  }\n\n  /**\n   * @description Listen for scroll events and fire the next page event when the user scrolls to the bottom of the page\n   * @param _event An event that is fired when the user scrolls\n   */\n  @Listen('scroll', { target: 'window' })\n  public handlePageScroll(_event: Event) {\n    if (this.isScrollAtPageBottom() && this.canScroll && this.scrollTarget === 'page') {\n      this.nextPage();\n    }\n  }\n\n  /**\n   * @description Go to the next page of threads\n   */\n  @Method()\n  public async nextPage() {\n    const hasChildren = this.host.children.length > 0;\n    this.next.emit({\n      hasChildren,\n    });\n  }\n\n  /**\n   * @description Go to the previous page of threads\n   */\n  @Method()\n  public async previousPage() {\n    const hasChildren = this.host.children.length > 0;\n    this.previous.emit({\n      hasChildren,\n    });\n  }\n\n  /**\n   * @description Handle the scroll event\n   * @param event An event that is fired when the user scrolls\n   */\n  private handleContainerScroll(_event: Event) {\n    if (this.isScrollAtContainerBottom() && this.canScroll && this.scrollTarget === 'container') {\n      this.nextPage();\n    }\n  }\n\n  /**\n   * @description Check if the user has scrolled to the bottom of the page\n   */\n  private isScrollAtContainerBottom() {\n    if (!this.containerElement) {\n      return false;\n    }\n    return this.containerElement && this.containerElement.scrollTop + this.containerElement.clientHeight >= this.containerElement.scrollHeight;\n  }\n\n  /**\n   * @description Check if the user has scrolled to the bottom of the page\n   */\n  private isScrollAtPageBottom() {\n    return window.innerHeight + window.scrollY >= document.body.offsetHeight;\n  }\n\n  /**\n   * @description Check if the user can scroll to the next page\n   * @returns boolean\n   */\n  private get canScroll() {\n    const hasChildren = this.host.children.length > 0;\n    return this.state === 'ready' && hasChildren && (!this.mobileOnlyInfiniteScroll || window.innerWidth < this.mobileViewPortWidth);\n  }\n\n  @RegisterComponent<NylasMailboxPagination, NylasMailboxConnector, Exclude<NylasMailbox['stores'], undefined>>({\n    name: 'nylas-pagination',\n    stateToProps: new Map([\n      ['mailbox.hasNextThreadPage', 'hasNextPage'],\n      ['mailbox.hasPreviousThreadPage', 'hasPreviousPage'],\n      ['mailbox.state', 'state'],\n    ]),\n    eventToProps: {\n      next: async (event: CustomEvent<PaginationEvent>, nylasConnector: NylasMailboxConnector) => {\n        debug(`[nylas-pagination] Next page event fired`);\n        const { hasChildren } = event.detail;\n        await nylasConnector.threads.nextThreadPage(hasChildren ? 'append' : 'overwrite', !hasChildren);\n      },\n      previous: async (event: CustomEvent<PaginationEvent>, nylasConnector: NylasMailboxConnector) => {\n        debug(`[nylas-pagination] Previous page event fired`);\n        const { hasChildren } = event.detail;\n        await nylasConnector.threads.previousThreadPage(hasChildren ? 'append' : 'overwrite', !hasChildren);\n      },\n    },\n    fireRegisterEvent: true,\n  })\n  render() {\n    const hasChildren = this.host.children.length > 0;\n    if (hasChildren) {\n      return (\n        <Host>\n          <div class=\"container\" ref={r => (this.containerElement = r)}>\n            <slot></slot>\n            {this.canScroll && (\n              <div class={'pagination'}>\n                <sp-theme scale=\"medium\" color=\"dark\">\n                  {this.state === 'ready' && this.hasNextPage && (\n                    <sp-button onClick={this.nextPage}>\n                      <div slot=\"icon\">\n                        <refresh-icon class={'refres-icon'} />\n                      </div>{' '}\n                      Load more...\n                    </sp-button>\n                  )}\n                </sp-theme>\n              </div>\n            )}\n          </div>\n        </Host>\n      );\n    }\n\n    return (\n      <Host>\n        <sp-theme scale=\"medium\" color=\"dark\">\n          {this.hasPreviousPage && (\n            <sp-button class={'previous'} parr=\"previous\" onClick={this.previousPage}>\n              <div slot=\"icon\">\n                <chevron-icon class={'previous-icon'} />\n              </div>{' '}\n              Previous\n            </sp-button>\n          )}\n          {this.hasPreviousPage && this.hasNextPage && ' '}\n          {this.hasNextPage && (\n            <sp-button class={'next'} parr=\"next\" onClick={this.nextPage}>\n              <div slot=\"icon\">\n                <chevron-icon class={'next-icon'} />\n              </div>{' '}\n              Next\n            </sp-button>\n          )}\n        </sp-theme>\n      </Host>\n    );\n  }\n}\n"],"version":3}