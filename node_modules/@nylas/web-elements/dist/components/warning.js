import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';

const iconCss = ".sc-warning-icon-h{display:flex}";

const WarningIcon = proxyCustomElement(class WarningIcon extends HTMLElement {
    constructor() {
        super();
        this.__registerHost();
        this.width = '16';
        this.height = '16';
    }
    render() {
        return (h("svg", { key: '5a655b4440d40d0e22c0e8bb3d9e3f08a947eb32', width: "21", height: "21", fill: "none", xmlns: "http://www.w3.org/2000/svg" }, h("path", { key: 'c3de0f39d8816fcc092f0a4bc6231e9cb91283de', d: "M10.149 7.054a.5.5 0 0 1 .5.5v4a.5.5 0 1 1-1 0v-4a.5.5 0 0 1 .5-.5Zm0 7.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5ZM8.834 2.906a1.5 1.5 0 0 1 2.63 0l6.558 11.925a1.5 1.5 0 0 1-1.314 2.223H3.59a1.5 1.5 0 0 1-1.314-2.223L8.834 2.906Zm1.753.482a.5.5 0 0 0-.876 0L3.15 15.313a.5.5 0 0 0 .439.741h13.117a.5.5 0 0 0 .439-.741l-6.56-11.925Z", fill: "currentColor" })));
    }
    static get style() { return iconCss; }
}, [2, "warning-icon", {
        "width": [1],
        "height": [1]
    }]);
function defineCustomElement() {
    if (typeof customElements === "undefined") {
        return;
    }
    const components = ["warning-icon"];
    components.forEach(tagName => { switch (tagName) {
        case "warning-icon":
            if (!customElements.get(tagName)) {
                customElements.define(tagName, WarningIcon);
            }
            break;
    } });
}

export { WarningIcon as W, defineCustomElement as d };

//# sourceMappingURL=warning.js.map