import { Message } from '.';
/**
 * @description A thread is a group of messages that share the same subject line. Threads are useful for grouping messages together in a conversation view.
 */
export interface Thread {
    grant_id?: string;
    id?: string;
    /** @description The object type of the response. In this case, `thread`. */
    object?: string;
    /** @description The latest message or draft in the thread. */
    latest_draft_or_message?: Message;
    /**
     * @description Whether or not a message in a thread has attachments.
     * @example false
     */
    has_attachments?: boolean;
    /**
     * @description Whether or not a message in a thread is a draft.
     * @example false
     */
    has_drafts?: boolean;
    /** @description The timestamp of the earliest or first message in the thread. */
    earliest_message_date?: number;
    /** @description The timestamp of the most recent message received in the thread. */
    latest_message_received_date?: number;
    /** @description The timestamp of the most recent message sent in the thread. */
    latest_message_sent_date?: number;
    /** @description Sub-object that contains the name and email address of all of the participants in the thread. */
    participants?: {
        email?: string;
        name?: string;
    }[];
    /**
     * @description A short snippet of the last received message body. This is the first 100 characters of the message body, with any HTML tags removed. This is useful for displaying a preview of the message.
     * @example jnlnnn --Sent with Nylas
     */
    snippet?: string;
    /**
     * @description A boolean indicating whether the thread is starred or not.
     * @example false
     */
    starred?: boolean;
    /**
     * @description The subject line of the thread
     * @example Nylas Send v3 Thread
     */
    subject?: string;
    /** @description A boolean indicating if all messages within the thread are read or not. */
    unread?: boolean;
    /** @description A list of message ids for all messages within the thread. */
    message_ids?: string[];
    /** @description A list of draft ids for all drafts within the thread. */
    draft_ids?: string[];
    /**
     * @description The ID of the folder(s) the message appears in. Microsoft only supports a single folder, Google supports a message appearing in multiple folders.
     * @example [
     *   "8l6c4d11y1p4dm4fxj52whyr9",
     *   "d9zkcr2tljpu3m4qpj7l2hbr0"
     * ]
     */
    folders?: string[];
}
/**
 * @description The object type of the response. In this case, `thread`.
 */
export interface ThreadQueryParameters {
    /** @description The number of objects to return. This field defaults to 20. The maximum allowed value for this field is 50. See [pagination](#pagination) for more information. */
    limit?: number;
    page_token?: string;
    /** @description Return threads with a matching literal subject. */
    subject?: string;
    /**
     * @description Return threads that contain messages that have been sent or received from this comma-separated list of email addresses. A maximum of 25 emails may be specified.
     * @example mail1@mail.com,mail2@mail.com
     */
    any_email?: string;
    /** @description Return threads containing messages sent to this email address. */
    to?: string;
    /** @description Return threads containing messages sent from this email address. */
    from?: string;
    /** @description Return threads containing messages that were CC'd to this email address. */
    cc?: string;
    /** @description Return threads containing messages that were BCC'd to this email address, likely sent from the parent account. (Most SMTP gateways remove BCC information.) */
    bcc?: string;
    /** @description Return threads with messages that belong to a specified folder. This parameter supports filtering by the ID of a folder. */
    in?: string;
    /** @description Return threads with one or more unread messages. */
    unread?: boolean;
    /** @description Return threads with one or more starred messages. */
    starred?: boolean;
    /** @description Return threads whose most recent message was received before this Unix timestamp. */
    latest_message_before?: number;
    /** @description Return threads whose most recent message was received after this Unix timestamp. */
    latest_message_after?: number;
    /** @description Return threads with attachments. */
    has_attachment?: boolean;
    /**
     * @description The provider-specific query string used to search threads. Available for [Google](https://support.google.com/mail/answer/7190?hl=en) and [Microsoft Graph](https://learn.microsoft.com/en-us/graph/search-query-parameter?tabs=http#using-search-on-message-collections) only. If specified, the `search_query_native` parameter can only be used with pagination parameters (`limit` and `page_token`). A value example for Google would be ```subject:foo OR subject:bar```.
     * @example subject%3Afoo%20OR%20subject%3Abar
     */
    search_query_native?: string;
}
/**
 * @description The payload for updating a thread.
 */
export interface UpdateThread {
    /**
     * @description Set to true to mark all messages in a thread as starred; false to mark them as unstarred.
     * @example true
     */
    starred?: boolean;
    /**
     * @description Set to true to mark all messages in a thread as unread; false to mark them as read.
     * @example true
     */
    unread?: boolean;
    /**
     * @description The IDs of the folders to apply, overwriting all previous folders for all messages in the thread.
     * @example [
     *   "folder-1",
     *   "folder-2"
     * ]
     */
    folders?: string[];
}
